{"version":3,"sources":["sourceMap"],"names":["Function","_0x4252cf","_0x5098cf","Array","_0xdd444e","_0x385ccf","_0x1ab55a","_0x2c0a13","_0x43ba2e","RegExp","_0x5e58dd","_0x2c439f","_0x2a32cb","_0x402b16","_0x3cbb92","_0x3e01c4","ProxyHandler","_0x35e04d","_0x25b515","_0x4bccb7","Proxy","_0x444e76","_0x1659a8","_0x26a7ac","Metadocx","Consolable","constructor","_0x4a35b6","arguments","console","CriteriaControl","_0x368d93","$","_0x1f6a08","DataFilter","_0x5d778f","_0x5503d3","_0x5e372c","_0x184144","_0x407137","_0x59470f","_0x514945","_0x43c2a8","_0x85e990","_0x231d22","_0x57db4f","_0x50b9ed","_0x2b19e8","_0x5f0e47","_0x46b18b","_0x499655","_0x27984d","DataSorter","_0x61aa27","_0x109a4e","_0x3d674a","_0x270e8c","_0x2cdc2b","_0x554a92","_0x257f2c","_0x2f751b","_0x44d013","_0xb00ee3","_0x4c06c9","_0x53843e","_0x36accf","parseFloat","moment","_0x410092","_0x3f151c","DataTable","_0x464d87","_0x5788d6","_0x33a30d","_0x2d5efa","_0x1c9386","_0x748ce5","_0x1aa280","_0x374f00","_0x2963f2","_0x294a24","undefined","_0xbcd1b","_0x526512","_0x3399ce","_0x574595","_0x596ee5","_0x198629","_0xc97c10","_0x473709","_0x162625","_0x50be02","_0x26c7fa","_0x4c936b","_0x37f27a","_0x539810","_0x18a0ee","_0x47a6cc","_0x2eba3f","_0x10222a","_0x1d31c8","_0x1ee167","_0xdea17b","_0x51913a","_0x327804","_0x27b8fc","numeral","_0x56ca84","_0x1c8be4","_0x2bf41b","_0x3f7d99","_0x2f5a8e","_0x1847ff","_0x499de6","_0x306896","_0x54f8e4","_0x4bcd75","_0x42da24","_0x484e62","_0x22a6a7","_0x3b285a","_0x45333d","_0x2c7bdd","_0x2f69ee","_0x235e23","_0x37db01","_0x2da36d","_0x398bc1","window","MetadocxApplication","ReportViewer","_0x3b7a51","_0x1decfd","_0x36dda4","_0x536ecc","document","_0x1f01e0","_0x585402","Module","_0x26da1e","ReportSection","_0x59a105","_0x39d626","_0x48786c","_0x3654cf","_0x3c30ab","_0x2c3369","_0x49e0f7","_0x2c9cb7","_0x54de74","_0x5c3e27","_0x480063","_0x385982","_0x31d8b7","_0x34ee1a","_0x11e399","_0x53cca7","_0x5babc7","_0x497bc6","_0x36d557","Theme","_0x202902","_0x413d1b","DataTableReportSection","_0x3821e6","_0x5a577a","_0x58a4b7","_0x4ec88a","_0xbc725","_0x1aa922","_0x41ae50","_0x3096b0","_0x4f7016","_0x7cfdaf","_0x32a7fd","_0x27e82c","_0x5e9df2","_0x3bea4c","_0x552d4d","GraphReportSection","_0x634c94","_0x3d19ce","_0x21e0d9","_0x477ba0","_0x50c552","_0x30112f","_0x116be4","_0xa94439","_0x37a578","_0x53f066","_0x3783e8","_0x1c9b55","_0x149546","_0x23a5e5","_0x449c54","_0x2d564f","_0x34bd2c","_0x5b62dc","_0x59f884","_0x3c3ee2","_0x578504","_0x2af014","_0x592a1b","_0x5b40e8","_0x4bf00f","_0xada956","_0x31eb2f","_0x4caed8","_0x261a71","Chart","_0x2df64f","_0x5d236a","_0x7fbecc","_0x1f4b83","_0xa9de57","_0x1ab60e","_0x3858c6","_0x343c3c","_0x21b619","_0x5379d7","HTMLReportSection","_0x2920f8","_0x18866f","Report","_0x503704","_0xae7d9f","_0xfb85e6","_0x48c27a","ReportValidator","_0x53d368","_0x15ab42","_0x27d236","_0x27c2d5","_0x53c40e","_0x5590ae","_0x59e54c","_0xd488ba","_0x451793","_0x3ed9a1","_0x32b10a","_0x4daa9f","_0x2ecffd","_0x26e124","_0x5d975a","_0x399ff1","_0x142c0c","_0x5431fe","_0x2d44d8","_0x5cda0c","_0xf9aa55","_0x4298f9","_0x452607","_0x317efe","_0x38c3b1","_0x1500f8","_0x646302","_0x5abb5a","_0x36c2ec","_0x2b61e5","_0x369474","_0x308c3b","_0xed2efc","_0x17db64","Object","_0x89309a","_0x173e06","_0x1b8e63","_0x195cf4","_0x4a9f8a","_0x357cd7","_0x5c8432","JSON","_0x41d7dc","_0xc2524e","_0x2b55fa","_0x27158c","_0x28d36b","_0x13f3b0","_0x44b319","_0x1bb638","ReportCanvas","_0x3dd97a","_0x33811d","_0x2d0c36","_0x1db987","_0x5818da","_0x35339c","_0x376084","_0x1b35cd","_0x411df9","_0x3054ce","_0x2596ef","_0x40fddd","_0x5bb801","_0x22e9e2","_0x13da9c","_0x2b7c24","_0x86cc93","_0x5504e1","_0x511daa","_0x18af2c","_0x472d37","_0x4616d2","_0x4c1247","_0x28f879","_0x124e97","_0x3fa730","_0x46e458","_0x30c984","_0xd82e73","_0x37eb51","_0x29f9f2","_0x4dabf7","_0xc1455a","_0x51f0b3","_0x14ae52","_0x218462","_0x2bb70e","_0x5ca355","_0x3ff244","_0x5382f2","_0x2ce0d0","_0x3b7a4f","_0x118959","_0x2c31af","_0x11d5b8","isFinite","_0x437470","_0x2e52f7","_0x25e9e2","_0x31418c","_0x4144a3","_0x17d455","_0x17a747","_0x1f853c","_0x28ebe0","_0xdf631","_0x468a30","_0x2213a1","_0x2458b3","_0x596ecc","_0x3e65a6","_0x264607","_0x38ae04","_0x3ee709","_0x322464","_0x33d303","_0x460eea","_0x5659cb","bootstrap","_0x472707","_0x5611dd","_0x4ecb0a","_0x3eaae9","_0x10e065","_0x3ad644","_0xeb0ccd","_0x4d2047","_0x4dccb2","parseInt","_0x3d9213","_0xf5c933","_0x4b169c","_0x5542d4","_0x10b317","_0x4952d2","_0x5dec59","_0x419860","_0x375169","_0x36f7f7","_0x333dc8","_0x216968","_0x225893","_0x2eaffb","_0x1c411e","_0x13ab81","_0x137f1f","_0x1388f8","_0x4f5c0c","_0x832296","_0x2bc248","_0x4f1478","_0x807d1a","_0x5beb67","_0x55dc1a","_0x48f990","_0x2f2c70","BooleanCriteria","_0x4d599e","_0x20e468","_0x555179","_0x376132","CheckboxCriteria","_0x35feb6","_0x3507d4","_0x56c47a","_0x5ef44d","_0x4e572b","_0x1c86b7","_0x13e223","_0x58dbac","_0x92bd5d","_0x293b5c","_0x1db7ff","_0x7088df","_0x1083ab","_0x2720c4","_0x5ea4b2","_0x5efe84","_0x4d95f9","_0x101b0d","_0x3e95e8","DatePeriodCriteria","_0x73f41b","_0x5b0a86","_0x249928","_0x1e00f1","NumericCriteria","_0x5d070b","_0x37085a","SelectCriteria","_0x527057","_0x274028","_0xde50ff","_0x2acf51","_0x2c92c7","_0x5a4b60","_0x217421","_0x45348a","_0xedd993","_0x7a0a19","_0x351174","_0x411401","_0x4e3db0","_0x263d50","BrowserModule","_0x3c3359","navigator","InstallTrigger","ConsoleModule","_0x4d3c90","_0x3e6424","_0x5ef5cd","_0x26930f","_0x2e2e05","_0x24c495","_0x507cf8","_0x3d73fb","_0x2f2ed5","_0x38dba4","_0x4ab7c7","_0x6f905","DataTypeModule","_0x5a4dbb","_0x3cab9a","String","_0x2fafd8","Number","_0x5a8332","_0x4de4cf","_0x273255","ExcelModule","_0x3e4707","_0x31a35d","_0x336d2d","_0x9f4544","btoa","unescape","encodeURIComponent","_0x55aacc","_0x16f90e","_0xd895ee","_0x1f2921","Blob","_0xb6c950","FormatModule","_0x51bf48","_0x4a5e50","_0x5a3037","_0x537b0d","_0x164882","ImportModule","_0x5c0380","_0x414efd","_0x51705e","_0x28676e","_0x1d1cd0","_0x4ff31c","_0x3fa3d1","_0x4da7a5","id","_0x21d07a","_0x571ef1","_0x479561","_0x590136","_0x2456d1","_0x193bb5","_0xc51e4b","LocaleModule","_0x5c5567","_0x500486","_0x4858e8","_0x10acf5","_0x26cbdb","_0x2138fa","_0x3a4882","_0x1379f2","_0x1b6ea4","_0x497418","_0x4acd52","_0x3d9d6f","_0x3da84a","PDFModule","_0xfc43ed","_0xeffce8","_0x125aee","_0x37a4df","_0x5d0e42","_0x2c6665","_0x3ecad2","_0x3043e3","_0xa22ede","_0x3921cd","_0x4557df","_0x5a9f1b","_0x10a212","_0x32c288","_0x25f38e","_0x84e9ad","_0x10f888","_0x4ac08e","_0x57352d","_0x29c099","_0x6c35f5","_0x683d6","_0x23014c","_0x3744a9","_0x10c185","bootbox","_0x5464f9","_0x30ce8d","_0x5a45ac","_0x4bceb9","_0x2299b2","_0x2f2070","_0xacaa51","_0x3d0066","_0x2391a3","_0x21f86b","_0x32d25f","_0x188483","_0x2410e1","PrintingModule","_0x2317cc","_0x521180","_0xc83eb3","_0x1d6d5b","_0x1ea463","_0x1cbe43","_0x1f87ff","_0xd2233a","_0x127cff","_0x3c29af","UIModule","_0x6610a7","_0x341882","_0x258aea","_0x4d61ed","_0x535a4f","_0x21bc69","WordModule","_0x2cf22a","_0x4b9b03","_0x113544","_0xa502bf","_0x55db10","_0x3acf7c","_0x36c373","_0x2a00a8","_0x1e1f3f","_0xc8022b","_0x4118b8","Theme1","_0x2f292a","_0x40fd41","Theme2","_0x2fa2f1","_0x5a658b","_0x21b493","_0x4083c7","_0x166fdc","_0x2d6fb0","_0x2b5bc4"],"mappings":"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C,CAiE/BA,MAAA,C,gBAAA,E,gBAAA,E,IAAA,EAA+B,C,IAC3B,C,gBAD2B,C,IAE3B,C,gBAF2B,C,SAG3B,C,SAH2B,C,aAI3B,C,gBAJ2B,C,SAK3B,C,QAL2B,C,KAM3B,C,MAN2B,C,QAO3B,C,gBAP2B,C,MAQ3B,C,QAR2B,C,OAS3B,C,gBAT2B,C,QAU3B,C,gBAV2B,C,QAW3B,C,SAX2B,C,cAY3B,C,gBAZ2B,C,WAa3B,C,gBAb2B,C,UAc3B,C,UAd2B,C,WAe3B,C,eAf2B,C,OAgB3B,C,gBAhB2B,C,yBAiB3B,C,eAjB2B,C,cAkB3B,C,gBAlB2B,C,WAmB3B,C,gBAnB2B,C,gBAoB3B,C,gBApB2B,C,QAqB3B,C,gBArB2B,C,OAsB3B,C,gBAtB2B,C,QAuB3B,C,gBAvB2B,C,WAwB3B,C,gBAxB2B,C,KAyB3B,C,gBAzB2B,C,IA0B3B,C,KA1B2B,C,OA2B3B,C,OA3B2B,C,UA4B3B,C,gBA5B2B,C,aA6B3B,C,eA7B2B,C,gBA8B3B,C,gBA9B2B,C,aA+B3B,C,gBA/B2B,C,gBAgC3B,C,gBAhC2B,C,SAiC3B,C,gBAjC2B,C,gBAkC3B,C,8BAlC2B,C,KAmC3B,C,IAnC2B,C,MAoC3B,C,gBApC2B,C,YAqC3B,C,gBArC2B,C,mBAsC3B,C,gBAtC2B,C,aAuC3B,C,gBAvC2B,C,eAwC3B,C,gBAxC2B,C,QAyC3B,C,gBAzC2B,C,OA0C3B,C,gBA1C2B,C,QA2C3B,C,gBA3C2B,C,kBA4C3B,C,gBA5C2B,C,MA6C3B,C,gBA7C2B,C,KA8C3B,C,OA9C2B,C,SA+C3B,C,gBA/C2B,C,UAgD3B,C,gBAhD2B,C,UAiD3B,C,gBAjD2B,C,OAkD3B,C,gBAlD2B,C,WAmD3B,C,gBAnD2B,C,YAoD3B,C,gBApD2B,C,WAqD3B,C,oBArD2B,C,OAsD3B,C,gBAtD2B,C,OAuD3B,C,gBAvD2B,C,MAwD3B,C,gBAxD2B,C,WAyD3B,C,gBAzD2B,C,QA0D3B,C,gBA1D2B,C,WA2D3B,C,gBA3D2B,C,WA4D3B,C,gBA5D2B,C,SA6D3B,C,QA7D2B,C,aA8D3B,C,wBA9D2B,C,WA+D3B,C,gBA/D2B,CAlE/B,CA0IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAMsc,MAAN,SAAqBta,KAAM,CAEvBtI,WAAA,CAAY6iB,SAAZ,C,yBACI,MAAMA,SAAN,C,CACA,K,gBAAA,EAAmB,C,eAAA,C,gBAAA,C,gBAAA,C,SAAA,C,SAAA,C,gBAAA,C,EAGvB,C,gBAAA,G,yBAEQC,SAAA,C,UAEJA,SAAA,E,2OAEqC,K,gBAAA,E,QAAA,E,gBAAA,E,eAAA,I,gBAAA,E,gBAAA,C,kBACO,K,KAAA,E,QAAA,E,QAAA,E,eAAA,I,gBAAA,E,aAAA,C,kBAIrCA,S,EAIX,C,gBAAA,G,kDAgBA,C,gBAAA,G,kDAtCuB,CAwF3Bxc,MAAA,C,gBAAA,E,gBAAA,E,gBAAA,EAAkCsc,MAAlC,CAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAMG,MAAN,SAAqBza,KAAM,CAEvBtI,WAAA,CAAYgjB,SAAZ,C,yBACI,MAAMA,SAAN,C,CACA,K,gBAAA,EAAmB,C,SAAA,C,gBAAA,C,SAAA,C,gBAAA,C,gBAAA,C,gBAAA,C,EAGvB,C,gBAAA,G,yBAEQC,SAAA,C,UAEJA,SAAA,E,gBAEqC,K,KAAA,E,gBAAA,E,gBAAA,E,qBAAA,I,YAAA,E,gBAAA,C,6GACO,K,gBAAA,E,gBAAA,E,gBAAA,E,eAAA,I,gBAAA,E,gBAAA,C,kBAEyCxgB,MAAA,G,gBAAA,E,gBAAA,C,4SAI9EwgB,S,EAIX,C,gBAAA,G,kDAgBA,C,gBAAA,G,gDAxCuB,CA4H3B3c,MAAA,C,gBAAA,E,gBAAA,E,gBAAA,EAAkCyc,MAAlC,CASI,CAACzc,MAAA,C,UAAA,C,EACD,CAAAA,MAAA,C,UAAA,EAAkB,IAAIC,mBAAJ,EAAlB,C,CAMA,CAACD,MAAA,C,gBAAA,C,EAIDnG,OAAA,C,eAAA,E,2DAAA,C,CAEC,SAAU+iB,SAAV,CAAaC,SAAb,CAAgBC,SAAhB,C,yBACOC,S,CAAIC,SAAA,CAAOJ,SAAA,C,gBAAA,EAAuBC,SAAvB,E,GAAA,C,IACXD,SAAA,C,gBAAA,EAAiBE,SAAjB,C,EACAjjB,OAAA,C,KAAA,E,gBAAA,EACA,O,CAEJkjB,SAAA,CAAKH,SAAA,C,gBAAA,EAAgBC,SAAhB,C,CAAoBE,SAAA,C,IAAA,EAAQD,S,CACjCC,SAAA,C,gBAAA,EAAY,U,CAER/iB,CAAA,CAAE,U,uBACER,QAAA,C,gBAAA,G,EADJ,C,GAIJujB,SAAA,C,gBAAA,E,iBACAA,SAAA,C,gBAAA,E,iBACAC,SAAA,C,gBAAA,E,gBAAA,EAA6BD,SAA7B,CAAiCC,SAAjC,C,EAfH,CAgBCzc,QAhBD,C,gBAAA,C,gBAAA,C,EAqBDvG,CAAA,CAAE,U,yBACER,QAAA,C,gBAAA,G,EADJ,C","sourcesContent":["/**\n * Copied from https://stackoverflow.com/questions/7395686/how-can-i-serialize-a-function-in-javascript/51123745#51123745\n */\nFunction.deserialise = function (key, data) {\n    return (data instanceof Array && data[0] == 'window.Function') ?\n        new (Function.bind.apply(Function, [Function].concat(data[1], [data[2]]))) :\n        data\n        ;\n};\nFunction.prototype.toJSON = function () {\n    var whitespace = /\\s/;\n    var pair = /\\(\\)|\\[\\]|\\{\\}/;\n\n    var args = new Array();\n    var string = this.toString();\n\n    var fat = (new RegExp(\n        '^s*(' +\n        ((this.name) ? this.name + '|' : '') +\n        'function' +\n        ')[^)]*\\\\('\n    )).test(string);\n\n    var state = 'start';\n    var depth = new Array();\n    var tmp;\n\n    for (var index = 0; index < string.length; ++index) {\n        var ch = string[index];\n\n        switch (state) {\n            case 'start':\n                if (whitespace.test(ch) || (fat && ch != '('))\n                    continue;\n\n                if (ch == '(') {\n                    state = 'arg';\n                    tmp = index + 1;\n                }\n                else {\n                    state = 'singleArg';\n                    tmp = index;\n                }\n                break;\n\n            case 'arg':\n            case 'singleArg':\n                var escaped = depth.length > 0 && depth[depth.length - 1] == '\\\\';\n                if (escaped) {\n                    depth.pop();\n                    continue;\n                }\n                if (whitespace.test(ch))\n                    continue;\n\n                switch (ch) {\n                    case '\\\\':\n                        depth.push(ch);\n                        break;\n\n                    case ']':\n                    case '}':\n                    case ')':\n                        if (depth.length > 0) {\n                            if (pair.test(depth[depth.length - 1] + ch))\n                                depth.pop();\n                            continue;\n                        }\n                        if (state == 'singleArg')\n                            throw '';\n                        args.push(string.substring(tmp, index).trim());\n                        state = (fat) ? 'body' : 'arrow';\n                        break;\n\n                    case ',':\n                        if (depth.length > 0)\n                            continue;\n                        if (state == 'singleArg')\n                            throw '';\n                        args.push(string.substring(tmp, index).trim());\n                        tmp = index + 1;\n                        break;\n\n                    case '>':\n                        if (depth.length > 0)\n                            continue;\n                        if (string[index - 1] != '=')\n                            continue;\n                        if (state == 'arg')\n                            throw '';\n                        args.push(string.substring(tmp, index - 1).trim());\n                        state = 'body';\n                        break;\n\n                    case '{':\n                    case '[':\n                    case '(':\n                        if (\n                            depth.length < 1 ||\n                            !(depth[depth.length - 1] == '\"' || depth[depth.length - 1] == '\\'')\n                        )\n                            depth.push(ch);\n                        break;\n\n                    case '\"':\n                        if (depth.length < 1)\n                            depth.push(ch);\n                        else if (depth[depth.length - 1] == '\"')\n                            depth.pop();\n                        break;\n                    case '\\'':\n                        if (depth.length < 1)\n                            depth.push(ch);\n                        else if (depth[depth.length - 1] == '\\'')\n                            depth.pop();\n                        break;\n                }\n                break;\n\n            case 'arrow':\n                if (whitespace.test(ch))\n                    continue;\n                if (ch != '=')\n                    throw '';\n                if (string[++index] != '>')\n                    throw '';\n                state = 'body';\n                break;\n\n            case 'body':\n                if (whitespace.test(ch))\n                    continue;\n                string = string.substring(index);\n\n                if (ch == '{')\n                    string = string.replace(/^{\\s*(.*)\\s*}\\s*$/, '$1');\n                else\n                    string = 'return ' + string.trim();\n\n                index = string.length;\n                break;\n\n            default:\n                throw '';\n        }\n    }\n\n    return ['window.Function', args, string];\n};\n/**\n * Copied from https://stackoverflow.com/a/50723478/2277399\n */\nconst ProxyHandler = {\n    get(target, key) {\n        if (key == 'isProxy')\n            return true;\n\n        const prop = target[key];\n\n        // return if property not found\n        if (typeof prop == 'undefined')\n            return;\n\n        // set value as proxy if object\n        if (!prop.isProxy && typeof prop === 'object')\n            target[key] = new Proxy(prop, ProxyHandler);\n\n        return target[key];\n    },\n    set(target, key, value) {\n\n        target[key] = value;\n        Metadocx.viewer.applyReportViewerOptions();\n        return true;\n    }\n};\n/** \n * Consolable\n * \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Consolable {\n\n    constructor(app) {\n\n        /**\n         * Main app reference\n         */\n        this.app = app;\n        /**\n         * If console is enabled or not\n         */\n        this.debugEnabled = true;\n        /**\n         * Name to display in tag, class name by default\n         */\n        this.tag = this.constructor.name;\n        /**\n        * Console text color and backcolor for title\n        */\n        this.consoleColor = '#fff';\n        this.consoleBackColor = 'blue';\n    }\n\n    /**\n    * Console log with module tag and color\n    */\n    log() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.log.apply(this.app.modules.Console, arguments);\n        } else {\n            console.log.apply(null, arguments);\n        }\n    }\n\n\n    /**\n     * Console debug with module tag and color\n     */\n    debug() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.debug.apply(this.app.modules.Console, arguments);\n        } else {\n            console.debug.apply(null, arguments);\n        }\n    }\n\n    /**\n     * Console debug with module tag and color\n     */\n    error() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.error.apply(this.app.modules.Console, arguments);\n        } else {\n            console.error.apply(null, arguments);\n        }\n    }\n\n    /**\n     * Console debug with module tag and color\n     */\n    warn() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.warn.apply(this.app.modules.Console, arguments);\n        } else {\n            console.warn.apply(null, arguments);\n        }\n    }\n\n}\n\n/** \n * CriteriaControl base class for all criteria controls\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass CriteriaControl {\n\n    constructor(app) {\n        this.id = null;\n        this.app = app;\n        this.reportCriteria = null;\n        this._instance = null;\n    }\n\n    /**\n     * Initializes any javascript code for this criteria\n     * Sets JS object (if any) to this._instance\n     */\n    initializeJS() { }\n\n    /**\n     * Renders the criterias HTML code\n     */\n    render() { }\n\n    /**\n     * Returns current JS instance of criteria UX component\n     * For example select2 or daterangepicker objects\n     * @returns object\n     */\n    getInstance() {\n        return this._instance;\n    }\n\n    /**\n     * Returns if criteria is enabled by user\n     * @returns bool\n     */\n    getIsEnabled() {\n        return $('#criteriaEnabled_' + this.id).prop('checked');\n    }\n\n    /**\n     * Returns criteria value\n     * @returns mixed\n     */\n    getValue() { return null; }\n\n    /**\n     * Sets criteria value\n     * @param {*} v \n     */\n    setValue(v) {\n        // must overload this function\n    }\n\n}\n\n/** \n * DataFilter filters data using criteria values\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataFilter {\n\n    constructor(app) {\n        this.app = app;\n        /**\n         * Model, column definition\n         */\n        this.model = [];\n        /**\n         * Data to display\n         */\n        this.data = [];\n        /**\n         * Order by settings\n         */\n        this.orderBy = [];\n        /**\n         * Group by settings\n         */\n        this.groupBy = [];\n        /**\n         * Report criterias\n         */\n        this.criterias = [];\n        /**\n         * Report criteria values\n         */\n        this.criteriaValues = null;\n\n        this.reportSection = null;\n    }\n\n    /**\n     * Sets report section to filter\n     * @param {*} oReportSection \n     */\n    setReportSection(oReportSection) {\n        this.reportSection = oReportSection;\n        this.data = this.reportSection.data;\n        this.model = this.reportSection.model;\n        this.orderBy = this.reportSection.orderBy;\n        this.groupBy = this.reportSection.groupBy;\n        this.criterias = this.getApplicableReportCriterias();\n        this.criteriaValues = this.app.viewer.getCriteriaValues();\n    }\n\n    getApplicableReportCriterias() {\n        var applicableCriterias = [];\n        var criterias = this.app.viewer.report.getReportDefinition().criterias;\n        for (var x in criterias) {\n            var criteria = criterias[x];\n            for (var y in criteria.applyTo) {\n                if (criteria.applyTo[y].section == this.reportSection.id) {\n                    applicableCriterias.push(criteria);\n                }\n            }\n        }\n\n        return applicableCriterias;\n    }\n\n    /**\n     * Filter report section data\n     */\n    process() {\n\n        /**\n         * Make all rows visible\n         */\n        for (var x in this.data) {\n            this.data[x]['__visible'] = true;\n        }\n\n        var aCriterias = this.criterias;\n        for (var x in aCriterias) {\n\n            /**\n             * Check if criterias is enabled\n             */\n            var criteriaValue = this.app.viewer.getCriteriaValue(aCriterias[x].id);\n            if (criteriaValue && criteriaValue.enabled === false) {\n                continue;\n            }\n\n            for (var r in this.data) {\n                for (var a in aCriterias[x].applyTo) {\n\n                    if (this.hasColumn(aCriterias[x].applyTo[a].field)) {\n\n                        switch (aCriterias[x].type) {\n                            case 'DatePeriodCriteria':\n                                if (this.data[r][aCriterias[x].applyTo[a].field] != criteriaValue.value) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                            case 'SelectCriteria':\n                                var selectedItems = criteriaValue.value;\n                                var bFound = false;\n                                for (var v in selectedItems) {\n                                    if (this.data[r][aCriterias[x].applyTo[a].field] == selectedItems[v].text) {\n                                        bFound = true;\n                                    }\n                                }\n                                if (!bFound) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                            case 'BooleanCriteria':\n                                if (criteriaValue.value !== 'ALL') {\n                                    if (this.app.modules.DataType.toBool(this.data[r][aCriterias[x].applyTo[a].field]) != this.app.modules.DataType.toBool(criteriaValue.value)) {\n                                        this.data[r]['__visible'] = false;\n                                    }\n                                }\n\n                                break;\n                            case 'NumericCriteria':\n\n                                switch (criteriaValue.value.operator) {\n                                    case 'EQUAL':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] != criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'NOT_EQUAL':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] == criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'GREATER_THAN':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] <= criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'GREATER_OR_EQUAL':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] < criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'SMALLER_THAN':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] >= criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'SMALLER_OR_EQUAL':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] > criteriaValue.value.startValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                    case 'BETWEEN':\n                                        if (this.data[r][aCriterias[x].applyTo[a].field] < criteriaValue.value.startValue &&\n                                            this.data[r][aCriterias[x].applyTo[a].field] > criteriaValue.value.endValue) {\n                                            this.data[r]['__visible'] = false;\n                                        }\n                                        break;\n                                }\n\n\n                                break;\n                            case 'CheckboxCriteria':\n                                if (criteriaValue.value.indexOf(this.data[r][aCriterias[x].applyTo[a].field]) === -1) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                        }\n\n                    }\n\n                }\n\n\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Checks if model has a column\n     * @param {*} name \n     * @returns boolean\n     */\n    hasColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n/** \n * DataSorter sorts data \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataSorter {\n\n    constructor(app) {\n        this.app = app;\n        /**\n         * Model, column definition\n         */\n        this.model = [];\n        /**\n         * Data to display\n         */\n        this.data = [];\n        /**\n         * Order by settings\n         */\n        this.orderBy = [];\n        /**\n         * Group by settings\n         */\n        this.groupBy = [];\n        /**\n         * Report criterias\n         */\n        this.criterias = [];\n        /**\n         * Report criteria values\n         */\n        this.criteriaValues = null;\n\n        this.reportSection = null;\n    }\n\n    /**\n     * Sets report section to sort\n     * @param {*} oReportSection \n     */\n    setReportSection(oReportSection) {\n        this.reportSection = oReportSection;\n        this.data = this.reportSection.data;\n        this.model = this.reportSection.model;\n        this.orderBy = this.reportSection.orderBy;\n        this.groupBy = this.reportSection.groupBy;\n        this.criterias = this.getApplicableReportCriterias();\n        this.criteriaValues = this.app.viewer.getCriteriaValues();\n    }\n\n    getApplicableReportCriterias() {\n        var applicableCriterias = [];\n        var criterias = this.app.viewer.report.getReportDefinition().criterias;\n        for (var x in criterias) {\n            var criteria = criterias[x];\n            for (var y in criteria.applyTo) {\n                if (criteria.applyTo[y].section == this.reportSection.id) {\n                    applicableCriterias.push(criteria);\n                }\n            }\n        }\n\n        return applicableCriterias;\n    }\n\n    /**\n     * Sorts report data based on orderBy criterias of report section\n     * @param {*} report \n     * @param {*} reportSection \n     */\n    process() {\n\n        if (!this.data) {\n            return;\n        }\n\n        this.data.sort((a, b) => {\n\n            for (var x in this.groupBy) {\n\n                var column = this.getColumn(this.groupBy[x].name)\n                var aValue = a[this.groupBy[x].name];\n                var bValue = b[this.groupBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.groupBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            for (var x in this.orderBy) {\n\n                var column = this.getColumn(this.orderBy[x].name)\n                var aValue = a[this.orderBy[x].name];\n                var bValue = b[this.orderBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.orderBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            return 0;\n\n        });\n\n\n\n    }\n\n    /**\n     * Returns a column from the model based on it's name\n     * @param {*} name \n     * @returns object\n     */\n    getColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return this.model[x];\n            }\n        }\n        return null;\n    }\n\n}\n/** \n * DataTable renders a report section table\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTable {\n\n    constructor(app) {\n        /**\n         * Table id\n         */\n        this.id = null;\n        /**\n         * Metadocx App object\n         */\n        this.app = app;\n        /**\n         * Model, column definition\n         */\n        this.model = [];\n        /**\n         * Data to display\n         */\n        this.data = [];\n        /**\n         * Order by settings\n         */\n        this.orderBy = [];\n        /**\n         * Group by settings\n         */\n        this.groupBy = [];\n        /**\n         * Report criterias\n         */\n        this.criterias = [];\n        /**\n         * Report criteria values\n         */\n        this.criteriaValues = null;\n        /**\n         * Group by counter objects\n         */\n        this.groupCounters = {};\n        /**\n         * Grand total counter object\n         */\n        this.grandTotal = {};\n    }\n\n    /**\n     * Called before the table HTML is rendered\n     */\n    preRender() {\n\n    }\n\n    /**\n     * Called after the table HTML is rendered\n     */\n    postRender() {\n\n    }\n\n    /**\n     * Returns a column from the model based on it's name\n     * @param {*} name \n     * @returns object\n     */\n    getColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return this.model[x];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Updates model column\n     * @param {*} name \n     * @param {*} col \n     * @returns boolean\n     */\n    setColumn(name, col) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                this.model[x] = col;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks if model has a column\n     * @param {*} name \n     * @returns boolean\n     */\n    hasColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks if column is visible or not\n     * @param {*} name \n     * @returns boolean\n     */\n    isColumnVisible(name) {\n        if (this.hasColumn(name)) {\n            var column = this.getColumn(name);\n            if (column.visible == undefined) {\n                // visible by default\n                return true;\n            } else if (column.visible) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Hide a column\n     * @param {*} name \n     */\n    hideColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                this.model[x].visible = false;\n            }\n        }\n    }\n\n    /**\n     * Renders table html\n     * @returns string\n     */\n    render() {\n        this.preRender();\n\n        this.groupCounters = [];\n        this.grandTotal = {\n            values: this.buildGroupCounters(),\n            minValues: this.buildGroupCounters(null),\n            maxValues: this.buildGroupCounters(null),\n            count: 0,\n            getSum: function (name) { return this.values[name]; },\n            getAvg: function (name) { if (this.count != 0) { return this.values[name] / this.count; } else { return 0; } },\n            getCount: function () { return this.count; },\n            getMin: function (name) { return this.minValues[name]; },\n            getMax: function (name) { return this.maxValues[name]; }\n        }\n\n        var s = '';\n        s += '<table id=\"' + this.id + '\" class=\"table table-bordered table-hover table-report-section\" data-report-section-id=\"' + this.id + '\">';\n\n        /**\n         * HEADER ROW\n         */\n        s += '<thead>';\n        s += '<tr class=\"report-row-header\">';\n        for (var y in this.model) {\n            var cellModel = this.model[y];\n            var cellStyle = 'font-weight:bold;';\n            if (cellModel['align']) {\n                cellStyle += 'text-align:' + cellModel['align'] + ';';\n            }\n            if (cellModel['width']) {\n                cellStyle += 'width:' + cellModel['width'] + 'px;';\n            }\n            if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                s += '<td class=\"report-cell-header\" style=\"' + cellStyle + '\">' + this.model[y].label + '</td>';\n            }\n        }\n        s += '</tr>';\n        s += '</thead>';\n\n        /**\n         * DATA ROWS\n         */\n        s += '<tbody>';\n\n        var previousRow = null;\n        for (var x in this.data) {\n            var row = this.data[x];\n            if (!row['__visible']) {\n                continue;\n            }\n            s += this.renderGroupHeader(row, previousRow);\n\n            s += '<tr class=\"report-row-data\">';\n            for (var y in this.model) {\n                var cellStyle = '';\n                var cellModel = this.model[y];\n                var cellValue = row[this.model[y].name];\n                var cellDisplayValue = cellValue;\n\n                if (cellModel['align']) {\n                    cellStyle += 'text-align:' + cellModel['align'] + ';';\n                }\n\n                /**\n                 * Format numeric values\n                 */\n                cellDisplayValue = this.app.modules.Format.format(cellValue, cellModel['type'], cellModel['format']);\n\n                if (cellModel[\"visible\"] !== false) {\n                    s += '<td class=\"report-cell-data\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                }\n            }\n            s += '</tr>';\n\n            previousRow = row;\n        }\n\n        s += this.closeAllGroups();\n\n        s += '</tbody>';\n\n        s += '</table>';\n\n        this.postRender();\n\n        return s;\n\n    }\n\n    /**\n     * Renders group by sub total lines \n     * @param {*} row \n     * @param {*} previousRow \n     * @returns string\n     */\n    renderGroupHeader(row, previousRow) {\n\n        if (!this.groupBy || this.groupBy.length <= 0) {\n            // nothing to do\n            return '';\n        }\n\n        var s = '';\n\n        /**\n         * Check first if we must close group in reverse order\n         */\n        for (var nLevel = this.getLevelCount(); nLevel >= 1; nLevel--) {\n\n            if (previousRow == null || previousRow[this.groupCounters['level' + nLevel].name] != row[this.groupCounters['level' + nLevel].name]) {\n\n                /**\n                 * Close previous group with same level\n                 */\n                if (this.groupCounters['level' + nLevel]) {\n                    // Level exists close it\n                    s += `<tr class=\"report-row-group-footer\" data-close-level=\"${nLevel}\">`;\n                    for (var y in this.model) {\n\n                        var cellModel = this.model[y];\n                        var cellStyle = 'font-weight:bold;';\n                        var cellValue = ''\n                        var cellDisplayValue = '';\n\n                        if (cellModel['align']) {\n                            cellStyle += 'text-align:' + cellModel['align'] + ';';\n                        }\n                        if (cellModel['width']) {\n                            cellStyle += 'width:' + cellModel['width'] + ';';\n                        }\n\n                        if (this.groupCounters['level' + nLevel].values[cellModel.name] != undefined) {\n                            if (cellModel['formula'] != undefined && cellModel['formula'] != '') {\n                                switch (cellModel['formula']) {\n                                    case 'SUM':\n                                        cellValue = this.groupCounters['level' + nLevel].getSum(cellModel.name);\n                                        break;\n                                    case 'AVG':\n                                        cellValue = this.groupCounters['level' + nLevel].getAvg(cellModel.name);\n                                        break;\n                                    case 'COUNT':\n                                        cellValue = this.groupCounters['level' + nLevel].getCount(cellModel.name);\n                                        break;\n                                    case 'MIN':\n                                        cellValue = this.groupCounters['level' + nLevel].getMin(cellModel.name);\n                                        break;\n                                    case 'MAX':\n                                        cellValue = this.groupCounters['level' + nLevel].getMax(cellModel.name);\n                                        break;\n                                }\n                            } else {\n                                //cellValue = this.groupCounters['level' + nLevel].values[cellModel.name];\n                                cellValue = '';\n                                cellDisplayValue = '';\n                            }\n\n                            if (cellModel['type'] == 'number' && cellModel['format'] != undefined && cellModel['format'] != '') {\n                                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                            } else if (cellModel['formula'] == 'COUNT' && cellModel['format'] != undefined && cellModel['format'] != '') {\n                                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                            } else {\n                                cellDisplayValue = cellValue;\n                            }\n\n                        } else {\n                            cellValue = '';\n                            cellDisplayValue = '';\n                        }\n\n                        if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                            s += '<td class=\"report-row-group-footer-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                        }\n                    }\n                    s += `</tr>`;\n                    this.groupCounters['level' + nLevel] = null;\n                }\n\n            }\n\n        }\n\n        /**\n         * Check if we start new groups\n         */\n        var nLevel = 1;\n        for (var x in this.groupBy) {\n\n            if (previousRow == null || previousRow[this.groupBy[x].name] != row[this.groupBy[x].name]) {\n\n                s += `<tr class=\"report-row-group row-group-level-${nLevel}\" data-table-group-level=\"${nLevel}\">\n                    <td colspan=\"100%\">${row[this.groupBy[x].name]}</td>\n                </tr>`;\n\n                this.groupCounters['level' + nLevel] = {\n                    level: nLevel,\n                    name: this.groupBy[x].name,\n                    values: this.buildGroupCounters(),\n                    minValues: this.buildGroupCounters(null),\n                    maxValues: this.buildGroupCounters(null),\n                    count: 0,\n                    getSum: function (name) { return this.values[name]; },\n                    getAvg: function (name) { if (this.count != 0) { return this.values[name] / this.count; } else { return 0; } },\n                    getCount: function () { return this.count; },\n                    getMin: function (name) { return this.minValues[name]; },\n                    getMax: function (name) { return this.maxValues[name]; }\n                };\n\n\n            }\n\n            nLevel++;\n\n        }\n\n\n        for (var x in this.groupCounters) {\n            this.groupCounters[x].count++;\n            this.grandTotal.count++;\n            for (var y in this.model) {\n                if (this.model[y].formula) {\n                    if (this.model[y].type == 'number') {\n                        this.groupCounters[x].values[this.model[y].name] += this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n\n                        // Set minimum value\n                        if (this.groupCounters[x].minValues[this.model[y].name] == null || this.groupCounters[x].minValues[this.model[y].name] > this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.groupCounters[x].minValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                        // Set maximum value\n                        if (this.groupCounters[x].maxValues[this.model[y].name] == null || this.groupCounters[x].maxValues[this.model[y].name] < this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.groupCounters[x].maxValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n\n                        // GRAND TOTAL\n\n                        this.grandTotal.values[this.model[y].name] += this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        // Set minimum value\n                        if (this.grandTotal.minValues[this.model[y].name] == null || this.grandTotal.minValues[this.model[y].name] > this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.grandTotal.minValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                        // Set maximum value\n                        if (this.grandTotal.maxValues[this.model[y].name] == null || this.grandTotal.maxValues[this.model[y].name] < this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.grandTotal.maxValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return s;\n\n\n    }\n\n    /**\n     * Closes all group sections and renders grand total line\n     * @returns string\n     */\n    closeAllGroups() {\n        if (!this.groupBy || this.groupBy.length <= 0) {\n            // nothing to do\n            return '';\n        }\n\n        var s = '';\n\n        /**\n         * Check first if we must close group in reverse order\n         */\n        for (var nLevel = this.getLevelCount(); nLevel >= 1; nLevel--) {\n\n            /**\n             * Close previous group with same level\n             */\n            if (this.groupCounters['level' + nLevel]) {\n                // Level exists close it\n                s += `<tr class=\"report-row-group-footer\" data-close-level=\"${nLevel}\">`;\n                for (var y in this.model) {\n                    var cellModel = this.model[y];\n                    var cellStyle = 'font-weight:bold;';\n                    var cellValue = '&nbsp;'\n                    var cellDisplayValue = '';\n                    if (cellModel['align']) {\n                        cellStyle += 'text-align:' + cellModel['align'] + ';';\n                    }\n                    if (cellModel['width']) {\n                        cellStyle += 'width:' + cellModel['width'] + ';';\n                    }\n\n                    if (this.groupCounters['level' + nLevel].values[cellModel.name] != undefined) {\n                        if (cellModel['formula']) {\n                            switch (cellModel['formula']) {\n                                case 'SUM':\n                                    cellValue = this.groupCounters['level' + nLevel].getSum(cellModel.name);\n                                    break;\n                                case 'AVG':\n                                    cellValue = this.groupCounters['level' + nLevel].getAvg(cellModel.name);\n                                    break;\n                                case 'COUNT':\n                                    cellValue = this.groupCounters['level' + nLevel].getCount(cellModel.name);\n                                    break;\n                                case 'MIN':\n                                    cellValue = this.groupCounters['level' + nLevel].getMin(cellModel.name);\n                                    break;\n                                case 'MAX':\n                                    cellValue = this.groupCounters['level' + nLevel].getMax(cellModel.name);\n                                    break;\n                            }\n                        } else {\n                            cellValue = this.groupCounters['level' + nLevel].values[cellModel.name];\n                        }\n\n                    }\n\n                    if (cellModel['type'] == 'number' && cellModel['format'] != undefined) {\n                        cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                    } else if (cellModel['formula'] == 'COUNT' && cellModel['format'] != undefined) {\n                        cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                    } else {\n                        cellDisplayValue = cellValue;\n                    }\n\n                    if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                        s += '<td class=\"report-row-group-footer-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                    }\n                }\n                s += `</tr>`;\n                this.groupCounters['level' + nLevel] = null;\n            }\n\n        }\n\n        /**\n         * Add grand total\n         */\n        s += `<tr class=\"report-row-grand-total\" data-close-level=\"${nLevel}\">`;\n        for (var y in this.model) {\n            var cellModel = this.model[y];\n            var cellStyle = 'font-weight:bold;';\n            var cellValue = '&nbsp;'\n            var cellDisplayValue = '';\n            if (cellModel['align']) {\n                cellStyle += 'text-align:' + cellModel['align'] + ';';\n            }\n            if (cellModel['width']) {\n                cellStyle += 'width:' + cellModel['width'] + ';';\n            }\n\n\n            if (this.grandTotal.values[cellModel.name] != undefined) {\n                if (cellModel['formula']) {\n                    switch (cellModel['formula']) {\n                        case 'SUM':\n                            cellValue = this.grandTotal.getSum(cellModel.name);\n                            break;\n                        case 'AVG':\n                            cellValue = this.grandTotal.getAvg(cellModel.name);\n                            break;\n                        case 'COUNT':\n                            cellValue = this.grandTotal.getCount(cellModel.name);\n                            break;\n                        case 'MIN':\n                            cellValue = this.grandTotal.getMin(cellModel.name);\n                            break;\n                        case 'MAX':\n                            cellValue = this.grandTotal.getMax(cellModel.name);\n                            break;\n                    }\n                } else {\n                    cellValue = this.grandTotal.values[cellModel.name];\n                }\n\n            }\n\n            if (cellModel['type'] == 'number' && cellModel['format']) {\n                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n            } else {\n                cellDisplayValue = cellValue;\n            }\n\n            if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                s += '<td class=\"report-row-grand-total-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n            }\n        }\n        s += `</tr>`;\n\n        return s;\n    }\n\n    /**\n     * Build group by counters object based on formulas defined in model\n     * @param {*} defaultValue \n     * @returns object\n     */\n    buildGroupCounters(defaultValue) {\n        if (defaultValue === undefined) {\n            defaultValue = 0;\n        }\n        var counters = {};\n        for (var x in this.model) {\n            if (this.model[x].formula !== undefined && this.model[x].formula !== '') {\n                counters[this.model[x].name] = defaultValue;\n            }\n        }\n        return counters;\n    }\n\n    /**\n     * Returns number of grop by levels currently open\n     * @returns int\n     */\n    getLevelCount() {\n        var nCount = 0;\n        for (var x in this.groupCounters) {\n            if (this.groupCounters[x]) { nCount++; }\n        }\n        return nCount;\n    }\n\n    /**\n     * Returns order by \n     * @param {*} name \n     * @returns object\n     */\n    getOrderBy(name) {\n        if (this.orderBy) {\n            for (var x in this.orderBy) {\n                if (this.orderBy[x].name == name) {\n                    return this.orderBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns group by\n     * @param {*} name \n     * @returns object\n     */\n    getGroupBy(name) {\n        if (this.groupBy) {\n            for (var x in this.groupBy) {\n                if (this.groupBy[x].name == name) {\n                    return this.groupBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n}\n/**\n * Metadocx application\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nwindow.__Metadocx = { Locales: {}, Themes: {} };\n\nclass MetadocxApplication {\n\n    constructor() {\n\n        /**\n         * Metadocx version\n         */\n        this.version = '0.1.0';\n\n        /**\n         * Application modules \n         * \n         * All Module classes will be instanciated and \n         * loaded in this property for easy access\n         */\n        this.modules = {};\n\n        /**\n         * Array of callbacks that will be called after modules are loaded\n         */\n        this.onInitializeCallbacks = [];\n\n        /**\n         * The script tag that loaded this script\n         * Used to pass parameters to the script directly in the DOM\n         */\n        this.scriptTag = null;\n\n        /**\n         * ReportViewer instance\n         */\n        this.viewer = new ReportViewer(this);\n\n    }\n\n    /**\n     * Initializes application, this is the starting point of the app\n     */\n    initialize() {\n\n        /**\n         * Scan script tag data- attributes for options\n         */\n        this.loadScriptTagOptions();\n\n\n        /**\n         * MODULES \n         * \n         * List available modules in Metadocx namespace \n         */\n        var aModules = [];\n        for (var x in window.__Metadocx) {\n            if (x.endsWith('Module')) {\n                aModules.push(new window.__Metadocx[x](this));\n            }\n        }\n        /**\n         * Sort boot priority of modules and register them\n         */\n        aModules.sort((a, b) => {\n            if (a.bootPriority < b.bootPriority) { return -1; }\n            if (a.bootPriority > b.bootPriority) { return 1; }\n            return 0;\n        });\n\n        /**\n         * Initialize modules\n         */\n        console.groupCollapsed('[Metadocx] Modules initialization');\n        for (var x in aModules) {\n            this.registerModule(aModules[x]);\n        }\n        console.groupEnd();\n\n        /**\n         * Call other initialize callback scripts\n         */\n        for (var x in this.onInitializeCallbacks) {\n            this.onInitializeCallbacks[x]();\n        }\n\n        /**\n         * REQUIRED LIBRARIES \n         * Event once all libraries are loaded (if injected)\n         */\n        this.modules.Import.onLibrairiesLoaded = () => {\n            /**\n            * Build report view interface\n            */\n            this.modules.UI.renderReportViewer(this);\n\n            if (this.viewer.options.report) {\n                this.viewer.load(this.viewer.options.report);\n            } else {\n                this.viewer.showNoReportAlert();\n            }\n        }\n        /**\n         * Inject required js and css files\n         */\n        this.modules.Import.injectRequiredLibraries();\n\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            }\n        });\n\n    }\n\n    /**\n     * Gets script tag data attributes and applies them to report options\n     */\n    loadScriptTagOptions() {\n\n        this.scriptTag = document.querySelector('script[src$=\"metadocx.js\"]');\n        if (this.scriptTag == null) {\n            this.scriptTag = document.querySelector('script[src$=\"metadocx.min.js\"]');\n        }\n\n        for (var x in this.scriptTag.dataset) {\n            this.viewer.options[x] = this.scriptTag.dataset[x];\n        }\n\n        /**\n         * Check if we have a name if not set default value\n         */\n        if (!this.viewer.options.id) {\n            this.viewer.options.id = \"metadocxReport\";\n        }\n\n        if (!this.viewer.options.container) {\n            this.viewer.options.container = \"root\";\n        }\n\n    }\n\n\n    /**\n     * Adds module to Metadocx object and initializes the module\n     * @param {*} oModule \n     */\n    registerModule(oModule) {\n        this.modules[oModule.name] = oModule;\n        oModule.initialize();\n        oModule.app = this;\n    }\n\n\n}\n/** \n * Application Module\n * \n * Modules classes can be loaded using boot priority and \n * will be made available in Metadocx.module property\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Module extends Consolable {\n\n    constructor(app) {\n\n        super(app);\n\n        /**\n         * Set name of module, remove the Module suffix to the class name\n         * Modules will be added in Metadocx.modules \n         */\n        this.name = this.constructor.name.replace(/Module$/, '');\n        this.tag = this.constructor.name.replace(/Module$/, '');\n        /**\n         * Indicates if the module has been initialized or not\n         */\n        this.isInitialized = false;\n\n        /**\n         * Modules will be loaded using bootPriority from lowest to highest\n         * This allows us to load modules in a specific order if needed\n         */\n        this.bootPriority = 1000;\n\n        /**\n         * Reference to Metadocx application\n         */\n        this.app = app;\n\n    }\n\n    /**\n     * Initialize module     \n     */\n    initialize() {\n        if (this.isInitialized) {\n            return;\n        }\n        this.isInitialized = true;\n\n        this.log('Initializing module ' + this.name);\n    }\n\n}\n/** \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportSection {\n\n    constructor(app, reportSection) {\n        /**\n         * Main app reference\n         */\n        this.app = app;\n        /**\n         * Types of report sections\n         */\n        this.ReportSectionTypes = {\n            DataTable: 'DataTable',\n            Graph: 'Graph',\n            HTML: 'HTML'\n        }\n        this.type = reportSection.type;\n        this.reportSection = reportSection;\n        this.preRender();\n    }\n\n    preRender() {\n    }\n\n\n\n    render() {\n\n    }\n\n\n\n\n    getApplicableReportCriterias() {\n        var applicableCriterias = [];\n        var criterias = this.app.viewer.report.getReportDefinition().criterias;\n        for (var x in criterias) {\n            var criteria = criterias[x];\n            for (var y in criteria.applyTo) {\n                if (criteria.applyTo[y].section == this.reportSection.id) {\n                    applicableCriterias.push(criteria);\n                }\n            }\n        }\n\n        return applicableCriterias;\n    }\n\n    criteriaAppliesToReportSection(criteria) {\n        for (var x in criteria.applyTo) {\n            if (criteria.applyTo[x].section == this.reportSection.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sorts report data based on orderBy criterias of report section\n     * @param {*} report \n     * @param {*} reportSection \n     */\n    sort() {\n\n\n        this.reportSection.data.sort((a, b) => {\n\n            for (var x in this.reportSection.groupBy) {\n\n                var column = this.getColumn(this.reportSection.groupBy[x].name)\n                var aValue = a[this.reportSection.groupBy[x].name];\n                var bValue = b[this.reportSection.groupBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.reportSection.groupBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            for (var x in this.reportSection.orderBy) {\n\n                var column = this.getColumn(this.reportSection.orderBy[x].name)\n                var aValue = a[this.reportSection.orderBy[x].name];\n                var bValue = b[this.reportSection.orderBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.reportSection.orderBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            return 0;\n\n        });\n\n\n\n    }\n\n    getOrderBy(name) {\n        if (this.reportSection.orderBy) {\n            for (var x in this.reportSection.orderBy) {\n                if (this.reportSection.orderBy[x].name == name) {\n                    return this.reportSection.orderBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getGroupBy(name) {\n        if (this.reportSection.groupBy) {\n            for (var x in this.reportSection.groupBy) {\n                if (this.reportSection.groupBy[x].name == name) {\n                    return this.reportSection.groupBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n\n\n}\nwindow.__Metadocx.ReportSection = ReportSection;\n/** \n * Theme\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Theme {\n\n    constructor(app) {\n        this.app = app;\n        this.colorScheme = ['#9999ff', '#993366', '#ffffcc', '#ccffff', '#660066', '#ff8080', '#0066cc', '#ccccff', '#000080', '#ff00ff', '#ffff00', '#0000ff', '#800080', '#800000', '#008080', '#0000ff'];\n        this.applyChartColorTheme();\n    }\n\n    renderCoverPage() {\n        var s = '';\n\n        s += `<div class=\"report-cover-page\">\n            <div class=\"report-cover-header\"></div>\n            <div class=\"report-cover-name\">${this.app.viewer.report.getReportDefinition().properties.name}</div>\n            <div class=\"report-cover-description\">${this.app.viewer.report.getReportDefinition().properties.description}</div>\n            <div class=\"report-cover-footer\"></div>\n            <div class=\"report-cover-date\"><span data-locale=\"CreatedAt\">Created at</span> ${moment().format('YYYY-MM-DD HH:mm')}</div>\n            <div class=\"report-cover-powered-by\"><span data-locale=\"PoweredBy\">powered by</span> <a href=\"https://www.metadocx.com\" target=\"_blank\">Metadocx</a></div>\n        </div>`;\n\n        return s;\n    }\n    renderCoverPageCSS() {\n        return `\n\n            #reportCoverPage {\n                position:relative;\n            }\n\n            .report-cover-page {\n                height: 100%;\n            }\n\n            .report-cover-date {                \n                position:absolute;\n                left:50px;\n                bottom:50px;\n                font-size: 9pt;\n            }\n\n            .report-cover-powered-by {                \n                position:absolute;\n                right:50px;\n                bottom:50px;\n                text-align:right;\n                font-size: 9pt;\n            }\n\n            .report-cover-name {\n                position: absolute;\n                top: 360px;\n                font-size: 36px;\n                font-weight: bold;\n            }\n\n            .report-cover-description {\n                position: absolute;\n                top: 410px;                \n            }\n        `;\n    }\n\n    renderThemeCSS() { return ''; }\n\n    getColorScheme() {\n        return this.colorScheme;\n    }\n\n    applyChartColorTheme() {\n\n    }\n\n}\n\nwindow.__Metadocx.Theme = Theme;\n/** \n * DataTable Report section\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTableReportSection extends ReportSection {\n\n    constructor(app, reportSection) {\n        super(app, reportSection);\n    }\n\n\n    render() {\n\n        var oTable = new DataTable(this.app);\n        oTable.id = 'ReportSection_' + this.reportSection.id;\n        oTable.data = this.reportSection.data;\n        oTable.model = this.reportSection.model;\n        oTable.orderBy = this.reportSection.orderBy;\n        oTable.groupBy = this.reportSection.groupBy;\n        oTable.criterias = this.getApplicableReportCriterias();\n        oTable.criteriaValues = this.app.viewer.getCriteriaValues();\n\n        var s = '';\n\n        this.preRender();\n\n        s += '<div class=\"report-section-title\">';\n        if (this.app.viewer.report.getReportDefinition().properties.name) {\n            s += '<h1 class=\"report-title\">' + this.app.viewer.report.getReportDefinition().properties.name + '</h1>';\n        }\n        if (this.app.viewer.report.getReportDefinition().properties.description) {\n            s += '<h4 class=\"report-description\">' + this.app.viewer.report.getReportDefinition().properties.description + '</h4>';\n        }\n        //s += '<hr/>';\n        s += '</div>';\n\n        s += oTable.render();\n\n        return s;\n\n    }\n\n    getColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                return this.reportSection.model[x];\n            }\n        }\n        return null;\n    }\n\n    setColumn(name, column) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                this.reportSection.model[x] = column;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isColumnVisible(name) {\n        if (this.hasColumn(name)) {\n            var column = this.getColumn(name);\n            if (column.visible == undefined) {\n                // visible by default\n                return true;\n            } else if (column.visible) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    hideColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                this.reportSection.model[x].visible = false;\n            }\n        }\n    }\n\n\n}\nwindow.__Metadocx.DataTableReportSection = DataTableReportSection;\n\n/** \n * DataTable Report section\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass GraphReportSection extends ReportSection {\n\n    constructor(app, reportSection) {\n        super(app, reportSection);\n        this._graphInstance = null;\n        this._labels = [];\n    }\n\n    render() {\n        return `<div id=\"${this.reportSection.id}_reportSection\" class=\"report-section-graph\">                    \n                    <canvas id=\"${this.reportSection.id}_graphCanvas\" class=\"no-print report-graph-canvas\"></canvas>\n                    <img id=\"${this.reportSection.id}_graphImage\" class=\"print-only report-graph-image\" style=\"width:100%;\"/>                    \n                </div>`;\n    }\n\n\n\n    buildGraphDataSets() {\n\n        var dataSets = [];\n        this._labels = [];\n\n        for (var x in this.reportSection.datasets) {\n\n            var ds = this.reportSection.datasets[x];\n\n            if (ds.source = 'section') {\n\n                var data = {};\n\n                var oSection = this.app.viewer.report.getReportSection(ds.section);\n                for (var d in oSection.data) {\n                    var row = oSection.data[d];\n                    if (!row['__visible']) {\n                        continue;\n                    }\n                    if (data[row[ds.label]] == undefined) {\n\n                        data[row[ds.label]] = {\n                            label: row[ds.label],\n                            min: parseFloat(row[ds.field]),\n                            max: parseFloat(row[ds.field]),\n                            data: parseFloat(row[ds.field]),\n                            count: 1\n                        }\n                    } else {\n                        if (data[row[ds.label]].min > parseFloat(row[ds.field])) {\n                            data[row[ds.label]].min = parseFloat(row[ds.field]);\n                        }\n                        if (data[row[ds.label]].max < parseFloat(row[ds.field])) {\n                            data[row[ds.label]].max = parseFloat(row[ds.field]);\n                        }\n                        data[row[ds.label]].data += parseFloat(row[ds.field]);\n                        data[row[ds.label]].count++;\n                    }\n\n                    if (this._labels.indexOf(row[ds.label]) === -1) {\n                        this._labels.push(row[ds.label]);\n                    }\n\n                }\n\n                var dataArray = [];\n                for (var x in data) {\n\n                    /**\n                     * Apply formula on data value\n                     */\n                    switch (ds.formula) {\n                        case 'SUM':\n                            // Nothing to do sum by default\n                            break;\n                        case 'AVG':\n                            if (parseFloat(data[x].count) != 0) {\n                                data[x].data = parseFloat(data[x].data) / parseFloat(data[x].count);\n                            } else {\n                                data[x].data = 0;\n                            }\n                            break;\n                        case 'MIN':\n                            data[x].data = data[x].min;\n                            break;\n                        case 'MAX':\n                            data[x].data = data[x].max;\n                            break;\n                        case 'COUNT':\n                            data[x].data = data[x].count;\n                            break;\n                    }\n\n                    dataArray.push(data[x]);\n                }\n\n                var oDS = {\n                    label: this.getModelLabel(ds.field, oSection.model) + this.getDataSetFormula(ds.formula),\n                    data: dataArray.map(row => row.data)\n                };\n\n                /**\n                 * Copy additional dataset options (see Chart.js doc)\n                 */\n                if (ds.options) {\n                    for (var kOption in ds.options) {\n                        oDS[kOption] = ds.options[kOption];\n                    }\n                }\n\n                dataSets.push(oDS);\n\n            }\n\n\n\n        }\n\n        return dataSets;\n\n    }\n\n    getDataSetFormula(formula) {\n        if (formula == undefined || formula == '') {\n            return '';\n        }\n        switch (formula) {\n            case 'SUM':\n                return '';\n            case 'AVG':\n                return ' (avg)';\n            case 'MIN':\n                return ' (min)';\n            case 'MAX':\n                return ' (max)';\n            case 'COUNT':\n                return ' (count)';\n        }\n\n        return '';\n    }\n\n    getModelLabel(field, model) {\n        for (var x in model) {\n            if (model[x].name == field) {\n                return model[x].label;\n            }\n        }\n        return field;\n    }\n\n    buildGraphLabels(datasets) {\n\n        return this._labels;\n\n    }\n\n    initialiseJS() {\n\n        if (this.reportSection.css) {\n            for (var x in this.reportSection.css) {\n                $('#' + this.reportSection.id + '_reportSection').css(x, this.reportSection.css[x]);\n            }\n        }\n\n\n        /**\n         * Render Chart\n         */\n        const datasets = this.buildGraphDataSets();\n        const labels = this.buildGraphLabels(datasets);\n\n        var options = {};\n        if (this.reportSection.options != undefined) {\n            options = this.reportSection.options;\n        }\n\n        var plugins = [];\n\n        plugins.push({\n            afterRender: () => {\n                var graphCanvas = document.getElementById(this.reportSection.id + '_graphCanvas');\n                var graphImage = document.getElementById(this.reportSection.id + '_graphImage');\n                graphImage.src = graphCanvas.toDataURL();\n                //$('#' + this.reportSection.id + '_graphCanvas').hide();\n            },\n            beforeUpdate: (chart, args, options) => {\n\n                var helpers = Chart.helpers;\n                var scheme = this.app.viewer.getTheme().getColorScheme();\n                var length, colorIndex, color;\n\n                var fillAlpha = 0.4;\n                var override = true;\n\n                if (scheme) {\n\n                    length = scheme.length;\n\n                    // Set scheme colors\n                    chart.config.data.datasets.forEach(function (dataset, datasetIndex) {\n                        colorIndex = datasetIndex % length;\n                        color = scheme[colorIndex];\n\n                        switch (dataset.type || chart.config.type) {\n                            // For line, radar and scatter chart, borderColor and backgroundColor (50% transparent) are set\n                            case 'line':\n                            case 'radar':\n                            case 'scatter':\n                                if (typeof dataset.backgroundColor === 'undefined' || override) {\n                                    dataset.backgroundColor = helpers.color(color).alpha(fillAlpha).rgbString();\n                                }\n                                if (typeof dataset.borderColor === 'undefined' || override) {\n                                    dataset.borderColor = color;\n                                }\n                                if (typeof dataset.pointBackgroundColor === 'undefined' || override) {\n                                    dataset.pointBackgroundColor = helpers.color(color).alpha(fillAlpha).rgbString();\n                                }\n                                if (typeof dataset.pointBorderColor === 'undefined' || override) {\n                                    dataset.pointBorderColor = color;\n                                }\n                                break;\n                            // For doughnut and pie chart, backgroundColor is set to an array of colors\n                            case 'doughnut':\n                            case 'pie':\n                            case 'polarArea':\n                                if (typeof dataset.backgroundColor === 'undefined' || override) {\n                                    dataset.backgroundColor = dataset.data.map(function (data, dataIndex) {\n                                        colorIndex = dataIndex % length;\n                                        return scheme[colorIndex];\n                                    });\n                                }\n                                break;\n                            // For bar chart backgroundColor (including fillAlpha) and borderColor are set\n                            case 'bar':\n                                if (typeof dataset.backgroundColor === 'undefined' || override) {\n                                    dataset.backgroundColor = helpers.color(color).alpha(fillAlpha).rgbString();\n                                }\n                                if (typeof dataset.borderColor === 'undefined' || override) {\n                                    dataset.borderColor = color;\n                                }\n                                break;\n                            // For the other chart, only backgroundColor is set\n                            default:\n                                if (typeof dataset.backgroundColor === 'undefined' || override) {\n                                    dataset.backgroundColor = color;\n                                }\n                                break;\n                        }\n                    });\n                }\n\n\n            }\n        });\n\n        this._graphInstance = new Chart(\n            document.getElementById(this.reportSection.id + '_graphCanvas'),\n            {\n                type: this.reportSection.chartType,\n                options: options,\n                plugins: plugins,\n                data: {\n                    labels: labels,\n                    datasets: datasets\n                }\n            }\n        );\n\n        this._graphInstance.resize();\n    }\n\n}\nwindow.__Metadocx.GraphReportSection = GraphReportSection;\n/** \n * DataTable Report section\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass HTMLReportSection extends ReportSection {\n\n    constructor(app, reportSection) {\n        super(app, reportSection);\n    }\n\n    render() {\n        return `<div class=\"report-section-html\">\n                    ${this.reportSection.content}\n                </div>`;\n    }\n\n}\nwindow.__Metadocx.HTMLReportSection = HTMLReportSection;\n/** \n * Report\n * \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Report {\n\n    constructor() {\n\n        /**\n         * Report id\n         */\n        this.id = null;\n\n        /**\n         * Indicates if report is loaded or not\n         */\n        this.isLoaded = false;\n\n        /**\n         * Report definition object\n         */\n        this._reportDefinition = null;\n\n\n        /**\n         * Reference to Metadocx app\n         */\n        this.app = null;\n\n        /**\n         * Indicates if we rendered the report criteria html and js\n         */\n        this._reportCriteriasRendered = false;\n\n        /**\n         * Indicates if we rendered the report settings html and js\n         */\n        this._reportSettingsRendered = false;\n\n        /**\n         * Copy of initial criteria values\n         */\n        this._initialCriteriaValues = null;\n\n        /**\n         * Copy of initial report settings\n         */\n        this._initialReportSettings = null;\n\n        /**\n         * Event called when report is loaded on screen\n         */\n        this.onReportLoaded = null;\n\n        /**\n         * Event called when report definition file is loaded\n         */\n        this.onReportDefinitionFileLoaded = null;\n\n        /**\n         * Instance of the report definition file validator\n         */\n        this._reportValidator = null;\n\n    }\n\n    /**\n     * Set report unique id\n     * @param {*} id \n     * @returns \n     */\n    setId(id) {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * Returns report unique id\n     * @returns \n     */\n    getId() {\n        return this.id;\n    }\n\n    /**\n    * Loads report definition file\n    */\n    loadReportDefinition(reportDefinitionUrl) {\n\n        if (reportDefinitionUrl != undefined) {\n            this._reportDefinitionUrl = reportDefinitionUrl;\n        }\n\n        if (this._reportDefinition === null) {\n            $.get(this._reportDefinitionUrl, (data, status) => {\n                this._reportDefinition = data;\n                /**\n                 * Copy Report definition options to viewer options, replaces default values\n                 */\n                this.validateReportDefinitionFile();\n                this.app.modules.DataType.copyObjectProperties(this.getReportDefinition().options, this.app.viewer.options);\n\n                if (this.onReportDefinitionFileLoaded) {\n                    this.onReportDefinitionFileLoaded();\n                }\n            });\n        } else {\n            if (this.onReportDefinitionFileLoaded) {\n                this.onReportDefinitionFileLoaded();\n            }\n        }\n\n    }\n\n    validateReportDefinitionFile() {\n        console.group('Validating report definition file');\n        if (this._reportValidator === null) {\n            this._reportValidator = new ReportValidator(this.app);\n        }\n        this._reportValidator.validate(this._reportDefinition);\n        console.groupEnd();\n    }\n\n\n\n    /**\n     * Report definition object\n     * @returns ReportDefinition\n     */\n    getReportDefinition() {\n        return this._reportDefinition;\n    }\n\n    /**\n     * Report definition url\n     * @returns Report\n     */\n    setReportDefinitionUrl(reportDefinitionUrl) {\n        this._reportDefinitionUrl = reportDefinitionUrl;\n        return this;\n    }\n\n    /**\n     * Returns report file definition url\n     * @returns \n     */\n    getReportDefinitionUrl() {\n        return this._reportDefinitionUrl;\n    }\n\n    /**\n     * Prints report\n     */\n    print() {\n        if (this.app.viewer.options.printing.method == 'browser') {\n            // Use default browser print \n            window.print();\n        } else if (this.app.viewer.options.printing.method == 'pdf') {\n            // Export as pdf and print the pdf file\n            this.app.modules.PDF.print();\n        }\n    }\n\n    /**\n     * Close window if window was open by script\n     */\n    close() {\n        window.close();\n    }\n\n    /**\n     * Export / Convert report to a specific format\n     * @param {*} format \n     */\n    exportReport(format) {\n        this.app.modules[format].showExportDialog();\n    }\n\n    /**\n     * Renders report settings html\n     * @returns \n     */\n    renderReportSettings() {\n\n        if (this._reportSettingsRendered) {\n            return;\n        }\n\n        var s = '';\n\n        s += `<div class=\"card\">\n                <div class=\"card-header\">\n                    <h4 class=\"card-title mb-0\" data-locale=\"ReportProperties\">Report properties</h4>\n                </div>\n                <div class=\"card-body\">     \n                    <div class=\"mb-4\">\n                        <label class=\"form-label\" for=\"reportSettingsName\" data-locale=\"Name\">Name</label>\n                        <input class=\"form-control\" type=\"text\" id=\"reportSettingsName\" placeholder=\"Report name\" value=\"${this.getReportDefinition().properties.name}\" data-locale=\"ReportName\">\n                    </div> \n                    <div class=\"mb-4\">\n                        <label class=\"form-label\" for=\"reportSettingsDescription\" data-locale=\"Description\">Description</label>\n                        <input class=\"form-control\" type=\"text\" id=\"reportSettingsDescription\" placeholder=\"Report description\" value=\"${this.getReportDefinition().properties.description}\" data-locale=\"ReportDescription\">                        \n                    </div> \n                </div>\n            </div>`;\n\n        for (var kSection in this.getReportDefinition().sections) {\n            var oSection = this.getReportDefinition().sections[kSection];\n            var sReportSectionType = this.getReportDefinition().sections[kSection].type + 'ReportSection';\n            var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.getReportDefinition().sections[kSection]);\n\n            switch (oSection.type) {\n                case 'HTML':\n                    s += this.renderReportSettingsHTML(oSection, oReportSection);\n                    break;\n                case 'Chart':\n                    s += this.renderReportSettingsChart(oSection, oReportSection);\n                    break;\n                case 'DataTable':\n                    s += this.renderReportSettingsDataTable(oSection, oReportSection);\n                    break;\n            }\n\n        }\n\n        s += `\n        <div class=\"float-end\">\n            <button class=\"btn btn-secondary mr5\" onClick=\"Metadocx.viewer.cancelSettings();\" data-locale=\"Cancel\">Cancel</button>\n            <button class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applySettings();\"><i class=\"uil uil-check fs16\" style=\"color:#fff;\"></i>&nbsp;<span data-locale=\"ApplySettings\">Apply Settings</span></button>\n        </div>\n        `;\n\n        $('#' + this.id + '_reportSettingsZone').html(s);\n\n        /**\n         * Once html is inserted in report viewer call post render\n         */\n        for (var kSection in this.getReportDefinition().sections) {\n            var oSection = this.getReportDefinition().sections[kSection];\n            var sReportSectionType = this.getReportDefinition().sections[kSection].type + 'ReportSection';\n            var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.getReportDefinition().sections[kSection]);\n\n            switch (oSection.type) {\n                case 'HTML':\n                    this.postRenderReportSettingsHTML(oSection, oReportSection);\n                    break;\n                case 'Chart':\n                    this.postRenderReportSettingsChart(oSection, oReportSection);\n                    break;\n                case 'DataTable':\n                    this.postRenderSettingsDataTable(oSection, oReportSection);\n                    break;\n            }\n\n        }\n\n\n        this._reportSettingsRendered = true;\n\n    }\n\n\n\n    renderReportSettingsHTML(oSection, oReportSection) { return ''; }\n\n    postRenderReportSettingsHTML(oSection, oReportSection) { }\n\n    renderReportSettingsChart(oSection, oReportSection) { return ''; }\n\n    postRenderReportSettingsChart(oSection, oReportSection) { }\n\n    renderReportSettingsDataTable(oSection, oReportSection) {\n\n        var s = '';\n        var sFields = '<table id=\"' + oSection.id + '_fields\" class=\"table table-condensed report-sortable\">';\n        sFields += '<tbody>';\n        for (var x in oSection.model) {\n\n            var sFieldSelected = ' checked';\n            if (!oReportSection.isColumnVisible(oSection.model[x].name)) {\n                sFieldSelected = '';\n            }\n\n            sFields += `<tr data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_field_${oSection.model[x].name}\" type=\"checkbox\"${sFieldSelected}/></td>\n                <td id=\"${oSection.id}_label_${oSection.model[x].name}\">${oSection.model[x].label}</td>\n                <td style=\"width:150px;\">\n                    <select id=\"${oSection.id}_formula_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                        <option value=\"\"${(oSection.model[x].formula == '' ? ' selected' : '')} data-locale=\"None\">(None)</option>\n                        <option value=\"SUM\"${(oSection.model[x].formula == 'SUM' ? ' selected' : '')} data-locale=\"Sum\">Sum</option>\n                        <option value=\"AVG\"${(oSection.model[x].formula == 'AVG' ? ' selected' : '')} data-locale=\"Average\">Average</option>\n                        <option value=\"MIN\"${(oSection.model[x].formula == 'MIN' ? ' selected' : '')} data-locale=\"MinValue\">Min Value</option>\n                        <option value=\"MAX\"${(oSection.model[x].formula == 'MAX' ? ' selected' : '')} data-locale=\"MaxValue\">Max Value</option>\n                        <option value=\"COUNT\"${(oSection.model[x].formula == 'COUNT' ? ' selected' : '')} data-locale=\"Count\">Count</option>\n                    </select>\n                </td>\n                <td style=\"width:30px;\">\n                    <button class=\"btn btn-sm\" onClick=\"Metadocx.viewer.showFieldPropertiesDialog('${oSection.id}', '${oSection.model[x].name}');\"><i class=\"uil uil-ellipsis-h fs20\"></i></button>\n                </td>\n            </tr>`;\n        }\n        sFields += '</tbody>';\n        sFields += '</table>';\n\n        /**\n         * ORDER BY \n         */\n        var sOrderBy = '<table id=\"' + oSection.id + '_orderBy\" class=\"table table-condensed report-sortable\">';\n        sOrderBy += '<tbody>';\n        for (var x in oSection.model) {\n\n\n            var oOrderBy = oReportSection.getOrderBy(oSection.model[x].name);\n\n            var sAscSelected = '';\n            var sDescSelected = '';\n            var sOrderBySelected = '';\n            if (oOrderBy != null) {\n                if (oOrderBy.order == 'desc') {\n                    sAscSelected = '';\n                    sDescSelected = ' selected';\n                } else {\n                    sAscSelected = ' selected';\n                    sDescSelected = '';\n                }\n                sOrderBySelected = ' checked';\n            }\n\n            sOrderBy += `<tr id=\"${oSection.id}_orderByRow_${oSection.model[x].name}\" data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                            <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                            <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_orderBy_${oSection.model[x].name}\" type=\"checkbox\"${sOrderBySelected}/></td>\n                            <td>${oSection.model[x].label}</td>\n                            <td style=\"width:150px;\">\n                                <select id=\"${oSection.id}_orderByOrder_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                                    <option value=\"asc\"${sAscSelected} data-locale=\"Ascending\">Ascending</option>\n                                    <option value=\"desc\"${sDescSelected} data-locale=\"Descending\">Descending</option>                                    \n                                </select>\n                            </td>\n                        </tr>`;\n        }\n        sOrderBy += '</tbody>';\n        sOrderBy += '</table>';\n\n        /**\n         * GROUP BY \n         */\n        var sGroupBy = '<table id=\"' + oSection.id + '_groupBy\" class=\"table table-condensed report-sortable\">';\n        sGroupBy += '<tbody>';\n        for (var x in oSection.model) {\n\n            var oGroupBy = oReportSection.getGroupBy(oSection.model[x].name);\n\n            var sAscSelected = '';\n            var sDescSelected = '';\n            var sGroupBySelected = '';\n            if (oGroupBy !== null) {\n                if (oGroupBy.order == 'desc') {\n                    sAscSelected = '';\n                    sDescSelected = ' selected';\n                } else {\n                    sAscSelected = ' selected';\n                    sDescSelected = '';\n                }\n                sGroupBySelected = ' checked';\n            }\n\n            sGroupBy += `<tr id=\"${oSection.id}_groupByRow_${oSection.model[x].name}\" data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                            <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                            <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_groupBy_${oSection.model[x].name}\" type=\"checkbox\"${sGroupBySelected}/></td>\n                            <td>${oSection.model[x].label}</td>\n                            <td style=\"width:150px;\">\n                            <select id=\"${oSection.id}_groupByOrder_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                                <option value=\"asc\"${sAscSelected} data-locale=\"Ascending\">Ascending</option>\n                                <option value=\"desc\"${sDescSelected} data-locale=\"Descending\">Descending</option>                                    \n                            </select></td>\n                        </tr>`;\n        }\n        sGroupBy += '</tbody>';\n        sGroupBy += '</table>';\n\n        /**\n         * Main section card\n         */\n        s += `<div class=\"card\">\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title mb-0\">${oSection.properties.name}</h4>\n                        </div>\n                        <div class=\"card-body\">              \n                            <div class=\"accordion accordion-flush\" id=\"reportSettingsAccordion${oSection.properties.name}\">\n                                <div class=\"accordion-item\">\n                                    <h2 id=\"settingsFieldsHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsFieldsBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                            <i class=\"uil uil-columns fs20\"></i>&nbsp;<span data-locale=\"Fields\">Fields</span>\n                                        </button>\n                                    </h2>\n                                    <div id=\"settingsFieldsBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                        <div class=\"accordion-body\">                                    \n                                            ${sFields}\n                                        </div>\n                                    </div>\n                                </div>   \n                                \n                                <div class=\"accordion-item\">\n                                    <h2 id=\"settingsOrderByHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsOrderByBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                            <i class=\"uil uil-sort-amount-down fs20\"></i>&nbsp;<span data-locale=\"Order\">Order</span>\n                                        </button>\n                                    </h2>\n                                    <div id=\"settingsOrderByBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                        <div class=\"accordion-body\">                                    \n                                            ${sOrderBy}\n                                        </div>\n                                    </div>\n                                </div>   \n\n                                <div class=\"accordion-item\">\n                                    <h2 id=\"settingsGroupByHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsGroupByBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                            <i class=\"uil uil-layer-group fs20\"></i>&nbsp;<span data-locale=\"Groups\">Groups</span>\n                                        </button>\n                                    </h2>\n                                    <div id=\"settingsGroupByBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                        <div class=\"accordion-body\">                                    \n                                            ${sGroupBy}                             \n                                        </div>\n                                    </div>\n                                </div>   \n                            </div>                                                                                                             \n                        </div>\n                    </div>`;\n\n\n        return s;\n\n    }\n\n    postRenderSettingsDataTable(oSection, oReportSection) {\n        $('.report-sortable tbody').sortable({\n            placeholder: 'ui-state-highlight',\n            helper: 'clone',\n            update: function (e, ui) {\n                console.log(e);\n                console.log(ui);\n            },\n        });\n\n        /**\n         * Reorder table rows based on orderby and groupby config\n         */\n        var reversedKeys = Object.keys(oSection.orderBy).reverse();\n        reversedKeys.forEach(key => {\n            //console.log(key, oSection.orderBy[key]);                \n            $('#' + oSection.id + '_orderByRow_' + oSection.orderBy[key].name).prependTo('#' + oSection.id + '_orderBy');\n        });\n\n\n        /**\n         * Reorder table rows based on orderby and groupby config\n         */\n        reversedKeys = Object.keys(oSection.groupBy).reverse();\n        reversedKeys.forEach(key => {\n            //console.log(key, oSection.orderBy[key]);                \n            $('#' + oSection.id + '_groupByRow_' + oSection.groupBy[key].name).prependTo('#' + oSection.id + '_groupBy');\n        });\n    }\n\n\n    /**\n     * Renders report criteria controls HTML\n     * @returns string\n     */\n    renderReportCriterias() {\n\n\n        if (this._reportCriteriasRendered) {\n            return;\n        }\n\n        // $('#criteriaDetails_Department').collapse('show')\n        // $('#criteriaDetails_Department').collapse('hide')\n\n        var sCriterias = '';\n        var aCriterias = [];\n        for (var x in this.getReportDefinition().criterias) {\n\n            var oCriteria = new window.__Metadocx[this.getReportDefinition().criterias[x].type](this.app);\n            oCriteria.id = this.getReportDefinition().criterias[x].id;\n            oCriteria.reportCriteria = this.getReportDefinition().criterias[x];\n            aCriterias.push(oCriteria);\n\n            sCriterias += `<div class=\"accordion-item\">\n                            <h2 id=\"criteriaTitle${this.getReportDefinition().criterias[x].id}\" class=\"accordion-header\">\n                                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#criteriaDetails_${this.getReportDefinition().criterias[x].id}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                                    <div class=\"form-check form-switch form-switch-lg\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"criteriaEnabled_${this.getReportDefinition().criterias[x].id}\">\n                                        <label class=\"form-check-label\" for=\"criteriaEnabled_${this.getReportDefinition().criterias[x].id}\">&nbsp;</label>\n                                    </div>                                \n                                    ${this.getReportDefinition().criterias[x].name}\n                                </button>\n                            </h2>\n                            <div id=\"criteriaDetails_${this.getReportDefinition().criterias[x].id}\" class=\"accordion-collapse collapse\" aria-labelledby=\"criteriaTitle${this.getReportDefinition().criterias[x].id}\">\n                                <div class=\"accordion-body\">                                    \n                                    <p>${this.getReportDefinition().criterias[x].description}</p>\n                                    ${oCriteria.render()}                                    \n                                </div>\n                            </div>\n                        </div>`;\n        }\n\n        var s = `<div class=\"accordion accordion-flush\" id=\"reportCriteriaAccordion\">\n                  ${sCriterias}  \n                </div>`;\n\n        $('#' + this.id + '_criteriasBody').html(s);\n\n        /**\n         * Load JS code for components\n         */\n        for (var x in aCriterias) {\n            aCriterias[x].initializeJS();\n        }\n        this.app.viewer.criterias = aCriterias;\n\n        this._reportCriteriasRendered = true;\n\n\n    }\n\n\n    /**\n     * Applies criteria values to report\n     */\n    applyCriterias() {\n\n        this.hideReportCriterias();\n        this.app.viewer.refreshReport();\n    }\n\n    /**\n     * Displays report criteria section\n     */\n    showReportCriterias() {\n\n        this._initialCriteriaValues = this.app.viewer.getCriteriaValues();\n\n        $('#' + this.id + '_canvas').hide();\n        $('#' + this.id + '_criteriasZone').show();\n    }\n\n    /**\n     * Hides report criteria section\n     */\n    hideReportCriterias() {\n\n        $('#' + this.id + '_criteriasZone').hide();\n        $('#' + this.id + '_canvas').show();\n    }\n\n    /**\n     * Cancels report criterias, does not apply changes\n     */\n    cancelCriterias() {\n        if (JSON.stringify(this._initialCriteriaValues) != JSON.stringify(this.app.viewer.getCriteriaValues())) {\n            // Criteria values have changed, confirm?\n            // @todo reset criterias\n        }\n\n        this.hideReportCriterias();\n    }\n\n    /**\n     * Reset criteria values to original values\n     */\n    resetCriterias() {\n        if (JSON.stringify(this._initialCriteriaValues) != JSON.stringify(this.app.viewer.getCriteriaValues())) {\n            // Criteria values have changed, confirm?\n            // @todo reset criterias\n        }\n\n        this.hideReportCriterias();\n    }\n\n    /**\n     * Makes a copy of original settings and criteria values\n     * Used to reset properties of report\n     */\n    copyOriginalSettings() {\n        this._initialCriteriaValues = this.app.viewer.getCriteriaValues();\n        this._initialReportSettings = {\n            sections: [],\n        }\n        for (var x in this.getReportDefinition().sections) {\n            var oSection = this.getReportDefinition().sections[x];\n            switch (oSection.type) {\n                case 'HTML':\n                    break;\n                case 'Chart':\n                    break;\n                case 'DataTable':\n                    this._initialReportSettings['sections'].push({\n                        id: oSection.id,\n                        properties: JSON.parse(JSON.stringify(oSection.properties)),\n                        orderBy: JSON.parse(JSON.stringify(oSection.orderBy)),\n                        groupBy: JSON.parse(JSON.stringify(oSection.groupBy)),\n                        model: JSON.parse(JSON.stringify(oSection.model)),\n                    })\n                    break;\n            }\n\n\n        }\n    }\n\n    getReportSections() {\n\n        return this.getReportDefinition().sections;\n\n    }\n\n    getReportSection(id) {\n\n        for (var x in this.getReportDefinition().sections) {\n            if (this.getReportDefinition().sections[x].id == id) {\n                return this.getReportDefinition().sections[x];\n            }\n        }\n\n        return null;\n\n    }\n\n    /**\n     * Filter all report section data \n     */\n    filter() {\n\n        for (var x in this.getReportDefinition().sections) {\n            var oFilter = new DataFilter(this.app);\n            oFilter.setReportSection(this.getReportDefinition().sections[x]);\n            oFilter.process();\n        }\n\n    }\n\n    sort() {\n        for (var x in this.getReportDefinition().sections) {\n            var oSorter = new DataSorter(this.app);\n            oSorter.setReportSection(this.getReportDefinition().sections[x]);\n            oSorter.process();\n        }\n    }\n\n\n}\n/** \n * Report Canvas\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportCanvas {\n\n    constructor(app, report, viewer) {\n        this.app = app;\n        this.report = report;\n        this.viewer = viewer;\n        this.reportSections = [];\n    }\n\n    /**\n     * Renders page (canvas) where report will be rendered\n     * @returns \n     */\n    render() {\n\n        var s = '';\n        var sReportSection = '';\n\n        var oReportTemplate = new Theme(this.app);\n\n        if (window.__Metadocx.Themes[this.viewer.options.template] != undefined) {\n            oReportTemplate = new window.__Metadocx.Themes[this.viewer.options.template](this.app);\n        }\n\n        if (this.viewer.options.coverPage.enabled) {\n            // Add cover page to report\n            s += `<div id=\"reportCoverPage\" class=\"report-page orientation-${this.viewer.options.page.orientation} size-${this.viewer.options.page.paperSize.toString().toLowerCase()}\">\n                    <style id=\"${this.viewer.options.id}_coverPage\">\n                        ${oReportTemplate.renderCoverPageCSS()}    \n                    </style>\n                    ${oReportTemplate.renderCoverPage()}\n                  </div>`;\n        }\n\n        for (var x in this.report.getReportDefinition().sections) {\n\n            var sReportSectionType = this.report.getReportDefinition().sections[x].type + 'ReportSection';\n            var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportDefinition().sections[x]);\n            this.reportSections.push(oReportSection);\n\n            if (this.app.modules.DataType.toBool(this.report.getReportDefinition().sections[x].breakBefore)) {\n                sReportSection += this.renderPageBreak();\n            }\n\n            sReportSection += oReportSection.render();\n\n            if (this.app.modules.DataType.toBool(this.report.getReportDefinition().sections[x].breakAfter)) {\n                sReportSection += this.renderPageBreak();\n            }\n\n        }\n\n        s += `<div id=\"reportPage\" class=\"report-page orientation-${this.viewer.options.page.orientation} size-${this.viewer.options.page.paperSize.toString().toLowerCase()}\">                \n                <div id=\"reportContent\">\n                    <style id=\"${this.viewer.options.id}_style\">\n                    </style>\n                    <style id=\"${this.viewer.options.id}_theme\">\n                        ${oReportTemplate.renderThemeCSS()}\n                    </style>\n                    ${sReportSection}\n                </div>\n            </div>`;\n\n        return s;\n\n    }\n\n    renderPageBreak() {\n        return `<div class=\"page-break\"></div>`;\n    }\n\n    initialiseJS() {\n        for (var x in this.reportSections) {\n            if (this.reportSections[x].initialiseJS != undefined) {\n                this.reportSections[x].initialiseJS();\n            }\n        }\n    }\n\n}\nwindow.__Metadocx.ReportCanvas = ReportCanvas;\n/** \n * ReportValidator\n * \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportValidator {\n\n    constructor(app) {\n        this.app = app;\n        this.reportDefinition = null;\n        this.validationWarnings = [];\n        this.validationErrors = [];\n        this.hasWarnings = false;\n        this.hasErrors = false;\n\n        this.reportDefinitionAllowedKeys = ['id', 'properties', 'options', 'criterias', 'sections'];\n        this.reportDefinitionRequiredKeys = ['id', 'properties', 'sections'];\n\n        this.reportPropertiesAllowedKeys = ['name', 'description', 'author'];\n        this.reportPropertiesRequiredKeys = ['name', 'description'];\n\n        this.jsonXls = {\n            id: {\n                __type: 'string',\n                __required: true\n            },\n            properties: {\n                __type: 'object',\n                __required: true,\n                name: {\n                    __type: 'string',\n                    __required: true\n                },\n                description: {\n                    __type: 'string',\n                    __required: true\n                },\n                author: {\n                    __type: 'string',\n                    __required: false\n                }\n            },\n            options: {\n                __type: 'object',\n                __required: true,\n                locale: {\n                    __type: 'string',\n                    __required: false,\n                    __defaultValue: 'en',\n                    __allowedValues: this.app.modules.Locale.getLocales()\n                },\n                coverPage: {\n                    __type: 'object',\n                    __required: false,\n                    enabled: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: false,\n                    }\n                },\n                template: {\n                    __type: 'string',\n                    __required: false,\n                    __defaultValue: 'Theme2',\n                    __allowedValues: this.app.viewer.getThemes()\n                },\n                toolbar: {\n                    __type: 'object',\n                    __required: false,\n                    showOptionsButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    showSettingsButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    showCriteriasButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    showPrintButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    showExportButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    showCloseButton: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    }\n                },\n                exportFormats: {\n                    __type: 'object',\n                    __required: false,\n                    pdf: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    word: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    excel: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    }\n                },\n\n                page: {\n                    __type: 'object',\n                    __required: false,\n                    orientation: {\n                        __type: 'string',\n                        __required: false,\n                        __defaultValue: 'portrait',\n                        __allowedValues: ['portrait', 'landscape'],\n                    },\n                    paperSize: {\n                        __type: 'string',\n                        __required: false,\n                        __defaultValue: 'Letter',\n                        __allowedValues: this.app.modules.Printing.getPaperSizes()\n                    },\n                    margins: {\n                        __type: 'object',\n                        __required: false,\n                        top: {\n                            __type: 'number',\n                            __required: false,\n                            __defaultValue: 0.5,\n                            __minValue: 0,\n                            __maxValue: 5,\n                        },\n                        bottom: {\n                            __type: 'number',\n                            __required: false,\n                            __defaultValue: 0.5,\n                            __minValue: 0,\n                            __maxValue: 5,\n                        },\n                        left: {\n                            __type: 'number',\n                            __required: false,\n                            __defaultValue: 0.5,\n                            __minValue: 0,\n                            __maxValue: 5,\n                        },\n                        right: {\n                            __type: 'number',\n                            __required: false,\n                            __defaultValue: 0.5,\n                            __minValue: 0,\n                            __maxValue: 5,\n                        }\n                    }\n                },\n                settings: {\n                    __type: 'object',\n                    __required: false,\n                    fields: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    fieldsReorder: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    fieldsSelection: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    fieldsFormula: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n\n                    orderBy: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    orderByReorder: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    orderBySelection: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    orderByOrder: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n\n                    groupBy: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    groupByReorder: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    groupBySelection: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    },\n                    groupByOrder: {\n                        __type: 'boolean',\n                        __required: false,\n                        __defaultValue: true,\n                    }\n                },\n                formats: {\n                    __type: 'object',\n                    __required: false,\n                    date: {\n                        __type: 'object',\n                        __required: false,\n                        format: {\n                            __type: 'string',\n                            __required: false,\n                            __defaultValue: 'YYYY-MM-DD',\n                        }\n                    },\n                    boolean: {\n                        __type: 'object',\n                        __required: false,\n                        format: {\n                            __type: 'object',\n                            __required: false,\n                            trueValue: {\n                                __type: 'string',\n                                __required: false,\n                                __defaultValue: 'Yes',\n                            },\n                            falseValue: {\n                                __type: 'string',\n                                __required: false,\n                                __defaultValue: 'No',\n                            },\n                            ALL: {\n                                __type: 'string',\n                                __required: false,\n                                __defaultValue: 'All',\n                            }\n                        }\n                    },\n                    number: {\n                        __type: 'object',\n                        __required: false,\n                        format: {\n                            __type: 'string',\n                            __required: false,\n                            __defaultValue: '0.00',\n                        }\n                    },\n                },\n            },\n            criterias: {\n                __type: 'array',\n                __required: false,\n                __model: {\n\n                    id: {\n                        __type: 'string',\n                        __required: true\n                    },\n                    name: {\n                        __type: 'string',\n                        __required: true\n                    },\n                    description: {\n                        __type: 'string',\n                        __required: true\n                    },\n                    type: {\n                        __type: 'string',\n                        __required: true,\n                        __allowedValues: this.app.viewer.getCriteriaTypes()\n                    },\n                    defaultValue: {\n                        __type: 'mixed',\n                        __required: false\n                    },\n                    isRequired: {\n                        __type: 'boolean',\n                        __required: true,\n                        __defaultValue: false\n                    },\n                    options: {\n                        __type: 'mixed',\n                        __required: false,\n                        source: {\n                            __type: 'string',\n                            __required: false,\n                        },\n                        field: {\n                            __type: 'string',\n                            __required: false,\n                        },\n                        url: {\n                            __type: 'string',\n                            __required: false,\n                        }\n                    },\n                    parameters: {\n                        __type: 'object',\n                        __required: false,\n                        locale: {\n                            __type: 'object',\n                            __required: false,\n                            format: {\n                                __type: 'string',\n                                __required: false\n                            },\n                            separator: {\n                                __type: 'string',\n                                __required: false\n                            }\n                        },\n                        alwaysShowCalendars: {\n                            __type: 'boolean',\n                            __required: false,\n                            __defaultValue: true\n                        },\n                        multiple: {\n                            __type: 'boolean',\n                            __required: false,\n                        },\n                        allowClear: {\n                            __type: 'boolean',\n                            __required: false,\n                            __defaultValue: true\n                        },\n                        placeholder: {\n                            __type: 'string',\n                            __required: false,\n                        },\n                        closeOnSelect: {\n                            __type: 'boolean',\n                            __required: false,\n                        }\n                    },\n                    applyTo:\n                    {\n                        __type: 'array',\n                        __required: true,\n                        __model: {\n                            section: {\n                                __type: 'string',\n                                __required: true\n                            },\n                            field: {\n                                __type: 'string',\n                                __required: true\n                            }\n                        }\n                    }\n\n\n                }\n            },\n            sections: {\n                __type: 'array',\n                __required: true,\n            }\n        };\n\n    }\n\n    /**\n     * Validate report definition file\n     * @param {*} reportDefinition \n     * @returns \n     */\n    validate(reportDefinition) {\n        this.reportDefinition = reportDefinition;\n\n        this.validateJsonFormat(this.jsonXls);\n        this.checkForAdditionalKeys(this.reportDefinition);\n\n        return this.hasErrors;\n\n    }\n\n    /**\n     * Validates json structure and required fields\n     * @param {*} jsonXls \n     * @param {*} path \n     */\n    validateJsonFormat(jsonXls, path) {\n\n        if (path == undefined) {\n            path = '';\n        }\n\n        for (var x in jsonXls) {\n            if (x.startsWith('__')) {\n                // Meta property\n                continue;\n            }\n            //console.log(x);\n\n            /**\n             * Is required\n             */\n            if (jsonXls[x].__required) {\n                if (!this.keyExists(this.buildPath(path, x))) {\n                    this.logError('Required key is missing ' + this.buildPath(path, x));\n                }\n            }\n            /**\n             * Check key type\n             */\n            if (jsonXls[x].__type) {\n                if (this.keyExists(this.buildPath(path, x))) {\n                    if (jsonXls[x].__type != 'mixed') {\n                        if (this.getType(this.getValue(this.buildPath(path, x))) !== jsonXls[x].__type) {\n                            this.logError('Key type is invalid ' + this.buildPath(path, x) + ' expecting ' + jsonXls[x].__type + ' got ' + this.getType(this.getValue(this.buildPath(path, x))));\n                        }\n                    }\n                }\n            }\n\n            if (jsonXls[x].__minValue != undefined) {\n                if (this.keyExists(this.buildPath(path, x))) {\n                    if (parseFloat(this.getValue(this.buildPath(path, x))) < parseFloat(jsonXls[x].__minValue)) {\n                        this.logError('Key value is invalid ' + this.buildPath(path, x) + ' minimum value is  ' + parseFloat(jsonXls[x].__minValue) + ' got ' + parseFloat(this.getValue(this.buildPath(path, x))));\n                    }\n                }\n            }\n\n            if (jsonXls[x].__maxValue != undefined) {\n                if (this.keyExists(this.buildPath(path, x))) {\n                    if (parseFloat(this.getValue(this.buildPath(path, x))) > parseFloat(jsonXls[x].__maxValue)) {\n                        this.logError('Key value is invalid ' + this.buildPath(path, x) + ' maximum value is  ' + parseFloat(jsonXls[x].__maxValue) + ' got ' + parseFloat(this.getValue(this.buildPath(path, x))));\n                    }\n                }\n            }\n\n            /**\n             * Check allowed values\n             */\n            if (jsonXls[x].__allowedValues) {\n                // Compare value with allowed values\n                if (this.keyExists(this.buildPath(path, x))) {\n                    if (this.getValueIndex(this.getValue(this.buildPath(path, x)), jsonXls[x].__allowedValues) === -1) {\n\n                        if (jsonXls[x].__defaultValue != undefined) {\n                            // Try to fix with default value                            \n                            this.logWarning('Invalid value for key ' + this.buildPath(path, x) + ' ' + this.getValue(this.buildPath(path, x)) + ', using default value ' + jsonXls[x].__defaultValue);\n                            this.setValue(this.buildPath(path, x), jsonXls[x].__defaultValue);\n                        } else {\n                            this.logError('Invalid value for key ' + this.buildPath(path, x) + ' ' + this.getValue(this.buildPath(path, x)));\n                        }\n\n                    }\n                }\n            }\n\n            if (jsonXls[x].__type === 'array') {\n                if (jsonXls[x].__model) {\n                    // Check model for each item of array\n                    var aItems = this.getValue(this.buildPath(path, x));\n                    for (var i in aItems) {\n                        this.validateJsonFormat(jsonXls[x].__model, this.buildPath(this.buildPath(path, x), i));\n                    }\n                }\n            }\n\n\n            if (this.getType(jsonXls[x]) === 'object') {\n                this.validateJsonFormat(jsonXls[x], this.buildPath(path, x));\n            }\n        }\n\n    }\n\n    /**\n     * Returns value index case insensitve\n     * @param {*} v \n     * @param {*} a \n     * @returns \n     */\n    getValueIndex(v, a) {\n        return a.findIndex(item => v.toLowerCase() === item.toLowerCase());\n    }\n\n    /**\n     * Checks report definition file and lists undocumented properties\n     * @param {*} section \n     * @param {*} path \n     * @param {*} definition \n     * @param {*} parentPath \n     */\n    checkForAdditionalKeys(section, path, definition, parentPath) {\n\n        if (path == undefined) {\n            path = '';\n        }\n\n        if (parentPath == undefined) {\n            parentPath = '';\n        }\n\n        if (definition == undefined || definition == null) {\n            definition = this.jsonXls;\n        }\n\n        //console.log('p=' + path + ', pp=' + parentPath);\n\n        for (var x in section) {\n\n            if (!this.keyExists(this.buildPath(path, x), definition)) {\n                this.logWarning('Found Key ' + this.buildPath(parentPath, this.buildPath(path, x)) + ' that is not defined in report definition specification');\n            }\n\n            if (this.getType(section[x]) === 'array') {\n\n                if (this.getValue(this.buildPath(path, x), definition) !== null && this.getValue(this.buildPath(path, x), definition).__model !== undefined) {\n                    // Check model for each item of array\n                    var aItems = this.getValue(this.buildPath(path, x));\n                    var model = this.getValue(this.buildPath(path, x), definition).__model;\n                    for (var i in aItems) {\n                        this.checkForAdditionalKeys(aItems[i], '', model, this.buildPath(parentPath, this.buildPath(this.buildPath(path, x), i)));\n                    }\n                }\n            }\n\n\n            if (this.getType(section[x]) === 'object') {\n                this.checkForAdditionalKeys(section[x], this.buildPath(path, x), definition, parentPath);\n            }\n        }\n    }\n\n    /**\n     * Return type of object\n     * @param {*} v \n     * @returns \n     */\n    getType(v) {\n        if (Array.isArray(v)) {\n            return 'array';\n        }\n        return typeof v;\n    }\n\n    /**\n     * Build dot path for array access\n     * @param {*} path \n     * @param {*} key \n     * @returns \n     */\n    buildPath(path, key) {\n        if (path != '') {\n            return path + '.' + key;\n        }\n        return key;\n    }\n\n    /**\n     * Gets value using dot notation\n     * @param {*} key \n     * @returns \n     */\n    getValue(key, object) {\n\n        if (object === undefined) {\n            object = this.reportDefinition;\n        }\n\n        var root = object;\n        var path = key.split('.');\n        for (var x in path) {\n            if (root[path[x]] !== undefined) {\n                root = root[path[x]];\n            } else {\n                return null;\n            }\n        }\n        return root;\n    }\n\n    /**\n     * Sets value using dot notation\n     * @param {*} key \n     * @param {*} value \n     */\n    setValue(key, value, object) {\n\n        if (object === undefined) {\n            object = this.reportDefinition;\n        }\n\n        var way = key.split('.');\n        var last = way.pop();\n\n        way.reduce(function (o, k, i, kk) {\n            return o[k] = o[k] || (isFinite(i + 1 in kk ? kk[i + 1] : last) ? [] : {});\n        }, object)[last] = value;\n\n    }\n\n\n\n    /**\n     * Checks if a key exists in object\n     * @param {*} key \n     * @param {*} object \n     * @returns \n     */\n    keyExists(key, object) {\n        if (object === undefined) {\n            object = this.reportDefinition;\n        }\n\n        var root = object;\n        var path = key.split('.');\n        for (var x in path) {\n            if (root[path[x]] !== undefined) {\n                root = root[path[x]];\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Checks if value is empty\n     * @param {*} value \n     * @returns \n     */\n    isEmpty(value) {\n        if (value === undefined) {\n            return true;\n        }\n        if (value === null) {\n            return true;\n        }\n        if (value == '') {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks f value is in options\n     * @param {*} value \n     * @param {*} options \n     * @returns \n     */\n    mustBeOneOf(value, options) {\n        if (options.indexOf(value) === -1) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Log warnings\n     * @param {*} message \n     */\n    logWarning(message) {\n        this.hasWarning = true;\n        console.warn(message);\n        this.validationWarnings.push({\n            message: message\n        });\n    }\n\n    /**\n     * Log errors\n     * @param {*} message \n     */\n    logError(message) {\n        this.hasError = true;\n        console.error(message);\n        this.validationErrors.push({\n            message: message\n        });\n    }\n\n}\n/** \n * ReportViewer, renders report viewer UI interface \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportViewer extends Consolable {\n\n    constructor(app) {\n        super();\n        /**\n         * Report criterias\n         */\n        this.criterias = null;\n        /**\n         * Initial criteria values on load\n         */\n        this.originalCriteriaValues = null;\n        /**\n         * Reference to main app\n         */\n        this.app = app;\n        /**\n         * Report viewer options\n         */\n        this.options = null;\n        /**\n         * Option Proxy instance\n         */\n        this._optionsProxy = null;\n        /**\n         * Options dialog instance \n         */\n        this.optionsDialog = null;\n        /**\n         * Field properties dialog instance \n         */\n        this.fieldPropertiesDialog = null;\n        /**\n         * Settings offcanvas reference\n         */\n        this.settingsOffCanvas = null;\n        /**\n         * \n         */\n        this._bDisableApplyReportViewerOptions = false;\n\n        /**\n         * Report instance displayed in report viewer\n         */\n        this.report = new Report();\n\n        this.theme = null;\n\n        /**\n         * Initialize options with default options\n         */\n        this.loadDefaultOptions();\n\n    }\n\n    /**\n     * Load report default options\n     */\n    loadDefaultOptions() {\n\n        this.log('Loading default options');\n\n        this.options = {\n            \"id\": \"metadocxReport\",\n            \"locale\": \"en\",\n            \"additionalCSS\": \"\",\n            \"template\": \"Theme2\",\n            \"toolbar\": {\n                \"showLocaleButton\": true,\n                \"showOptionsButton\": true,\n                \"showSettingsButton\": true,\n                \"showCriteriasButton\": true,\n                \"showPrintButton\": true,\n                \"showExportButton\": true,\n                \"showCloseButton\": true\n            },\n            \"exportFormats\": {\n                \"pdf\": true,\n                \"word\": true,\n                \"excel\": false\n            },\n            \"page\": {\n                \"orientation\": \"portrait\",\n                \"paperSize\": \"Letter\",\n                \"margins\": {\n                    \"top\": 0.5,\n                    \"bottom\": 0.5,\n                    \"left\": 0.5,\n                    \"right\": 0.5\n                }\n            },\n            \"coverPage\": {\n                \"enabled\": false\n            },\n            \"settings\": {\n                \"fields\": true,\n                \"fieldsReorder\": true,\n                \"fieldsSelection\": true,\n                \"fieldsFormula\": true,\n\n                \"orderBy\": true,\n                \"orderByReorder\": true,\n                \"orderBySelection\": true,\n                \"orderByOrder\": true,\n\n                \"groupBy\": true,\n                \"groupByReorder\": true,\n                \"groupBySelection\": true,\n                \"groupByOrder\": true\n            },\n            \"formats\": {\n                \"date\": {\n                    \"format\": \"YYYY-MM-DD\"\n                },\n                \"boolean\": {\n                    \"format\": {\n                        \"trueValue\": \"Yes\",\n                        \"falseValue\": \"No\",\n                        \"ALL\": \"All\"\n                    }\n                },\n                \"number\": {\n                    \"format\": \"0.00\"\n                }\n            },\n            \"printing\": {\n                \"method\": \"pdf\"\n            }\n        };\n\n        this.options = new Proxy(this.options, ProxyHandler);\n\n    }\n\n    getTheme() {\n\n        if (this.theme === null) {\n\n            if (window.__Metadocx.Themes[this.options.template] != undefined) {\n                this.theme = new window.__Metadocx.Themes[this.options.template](this.app);\n            } else {\n                // Default theme\n                this.theme = new Theme(this.app);\n            }\n        }\n\n        return this.theme;\n\n    }\n\n    /**\n     * Returns list of installed theme names\n     * @returns array\n     */\n    getThemes() {\n        return Object.keys(window.__Metadocx.Themes);\n    }\n\n    /**\n     * Returns list of availble criteria type names\n     * @returns array\n     */\n    getCriteriaTypes() {\n        var aCriteriaType = [];\n        for (var x in window.__Metadocx) {\n            if (x.endsWith('Criteria')) {\n                aCriteriaType.push(x);\n            }\n        }\n        return aCriteriaType;\n    }\n\n    /**\n     * Loads a report definition file\n     */\n    load(reportDefinitionUrl) {\n\n        /**\n         * If we have a report definition file passed as parameter, load it and render\n         */\n        if (reportDefinitionUrl) {\n            this.log('Loading report ' + reportDefinitionUrl);\n            /**\n             * Create report object\n             */\n            if (this.report === null) {\n                this.report = new Report();\n            }\n            this.report.app = this.app;\n\n            window[this.options.id] = this.report;\n            this.report.setId(this.options.id);\n\n            this.report.onReportLoaded = () => {\n                this.applyReportViewerOptions();\n            }\n\n            this.report.onReportDefinitionFileLoaded = () => {\n                this.refreshReport();\n            }\n\n            this.report.loadReportDefinition(reportDefinitionUrl);\n            this.applyReportViewerOptions();\n            this.originalCriteriaValues = this.getCriteriaValues();\n\n        }\n\n    }\n\n\n    applyReportViewerOptions() {\n\n        if (this._bDisableApplyReportViewerOptions) {\n            return;\n        }\n\n        if (!this.report.isLoaded) {\n            // Report is not yet loaded hide all toolbar buttons\n            $('.report-toolbar-button').hide();\n            return;\n        }\n\n        this.app.modules.Locale.setLocale(this.options.locale);\n\n\n        $('#' + this.options.id + '_headerName').html(this.report.getReportDefinition().properties.name);\n        $('#' + this.options.id + '_headerDescription').html(this.report.getReportDefinition().properties.description);\n\n        $('.report-toolbar-button').show();\n\n        if (this.options.toolbar.showLocaleButton) {\n            $('#' + this.options.id + '_localeGroup').show();\n        } else {\n            $('#' + this.options.id + '_localeGroup').hide();\n        }\n\n        if (this.options.toolbar.showExportButton) {\n            $('#' + this.options.id + '_export').show();\n        } else {\n            $('#' + this.options.id + '_export').hide();\n        }\n\n        if (this.options.toolbar.showExportButton) {\n            $('#' + this.options.id + '_export').show();\n        } else {\n            $('#' + this.options.id + '_export').hide();\n        }\n\n        if (this.options.toolbar.showPrintButton) {\n            $('#' + this.options.id + '_print').show();\n        } else {\n            $('#' + this.options.id + '_print').hide();\n        }\n\n        if (this.options.toolbar.showCriteriasButton) {\n            $('#' + this.options.id + '_criterias').show();\n        } else {\n            $('#' + this.options.id + '_criterias').hide();\n        }\n\n        if (this.options.toolbar.showSettingsButton) {\n            $('#' + this.options.id + '_settings').show();\n        } else {\n            $('#' + this.options.id + '_settings').hide();\n        }\n\n        if (this.options.toolbar.showOptionsButton) {\n            $('#' + this.options.id + '_options').show();\n        } else {\n            $('#' + this.options.id + '_options').hide();\n        }\n\n        if (this.options.toolbar.showCloseButton && window.opener != null) {\n            $('#' + this.options.id + '_close').show();\n        } else {\n            $('#' + this.options.id + '_close').hide();\n        }\n\n\n\n    }\n\n    /**\n     * Renders the report viewer\n     */\n    render() {\n        this.log('Report viewer render');\n        var s = '';\n\n        s += this.renderMainLayout();\n        s += this.renderReportCriterias();\n        s += this.renderOptionsDialog();\n        s += this.renderReportSettings();\n        s += this.renderFieldPropertiesDialog();\n\n        $('#' + this.options.container).html(s);\n        $('.report-viewer-criterias').hide();\n\n        this.app.modules.Locale.translate();\n\n    }\n\n    /**\n     * Displays info section when no report definition file is supplied\n     */\n    showNoReportAlert() {\n\n        this.log('No report data, displaying no report warning');\n        var s = `<div class=\"alert alert-warning mb-0 report-no-definition\" role=\"alert\">\n                    <h4 class=\"alert-heading\" data-locale=\"MissingReportDefinition\">Missing report definition</h4>\n                    <p data-locale=\"OupsNoReport\">Oups! Something went wrong. We did not get a report to load.</p>                    \n                </div>`;\n\n        $('#' + this.app.viewer.options.id + '_canvas').html(s);\n        $('.report-toolbar-button').hide();\n    }\n\n    /**\n     * Renders main layout html of report viewer\n     * @returns \n     */\n    renderMainLayout() {\n\n        this.log('Render main layout');\n        var sCloseButtonClasses = '';\n        if (window.opener == null) {\n            // This window is not open by script can not use close button\n            sCloseButtonClasses = ' hidden';\n        }\n\n        var sExportPDFClasses = '';\n        if (!this.options.exportFormats.pdf) {\n            sExportPDFClasses = ' hidden';\n        }\n        var sExportWordClasses = '';\n        if (!this.options.exportFormats.word) {\n            sExportWordClasses = ' hidden';\n        }\n        var sExportExcelClasses = '';\n        if (!this.options.exportFormats.excel) {\n            sExportExcelClasses = ' hidden';\n        }\n\n        /**\n         * Main layout\n         */\n        return `<header id=\"${this.options.id}_header\" class=\"page-topbar no-print\">\n             <div class=\"navbar-header\">\n                 <div class=\"d-flex\">\n                     <div class=\"ms-4\">\n                         <div class=\"report-header-icon\">\n                            <i class=\"uil uil-file-graph\" style=\"font-size: 36px;line-height: 36px;\"></i>\n                         </div>\n                         <div class=\"report-header-title-section\">\n                            <div id=\"${this.options.id}_headerName\" class=\"report-header-title\"></div>\n                            <div id=\"${this.options.id}_headerDescription\" class=\"report-header-description\"></div>\n                         </div>\n                     </div>\n                 </div>\n                 <div class=\"d-flex\">                   \n                    <div id=\"${this.options.id}_localeGroup\" class=\"btn-group me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_locale\" type=\"button\" class=\"btn header-item dropdown-toggle\" data-bs-toggle=\"dropdown\">\n                            <i class=\"uil uil-english-to-chinese\"></i>\n                         </button>\n                         <div id=\"${this.options.id}_localeOptions\" class=\"dropdown-menu\">\n                             ${this.app.modules.Locale.getLocaleMenuOptions()}\n                         </div>\n                     </div>\n                     <div class=\"btn-group me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_export\" type=\"button\" class=\"btn header-item dropdown-toggle\" data-bs-toggle=\"dropdown\">\n                            <i class=\"uil uil-file-export\"></i>\n                         </button>\n                         <div class=\"dropdown-menu\">\n                             <a id=\"${this.options.id}_exportPdf\" class=\"dropdown-item${sExportPDFClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('PDF');\">PDF</a>\n                             <a id=\"${this.options.id}_exportExcel\" class=\"dropdown-item${sExportExcelClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('Excel');\">Excel</a>\n                             <a id=\"${this.options.id}_exportWord\" class=\"dropdown-item${sExportWordClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('Word');\">Word</a>\n                         </div>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_print\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.print();\"><i class=\"uil uil-print\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_criterias\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.showReportCriterias();\"><i class=\"uil uil-filter\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_settings\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.showReportSettings();\"><i class=\"uil uil-file-graph\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_options\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.showReportOptions();\"><i class=\"uil uil-cog\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button${sCloseButtonClasses}\">\n                         <button id=\"${this.options.id}_close\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.close();\"><i class=\"uil uil-times\"></i></button>\n                     </div>\n                 </div>\n             </div>\n         </header>\n         <div id=\"${this.options.id}_canvas\" class=\"report-viewer-canvas\">\n         </div>\n         <div id=\"${this.options.id}_reportDefinitionViewer\" class=\"report-definition-code-viewer\" style=\"display:none;\">\n            <pre id=\"${this.options.id}_reportDefinitionPre\"></pre>\n         </div>\n         <div class=\"powered-by no-print\"><span data-locale=\"PoweredBy\">powered by</span> <a href=\"https://www.metadocx.com\" target=\"_blank\">Metadocx</a></div>`;\n\n    }\n\n    showReportDefinition() {\n\n        $('#' + this.options.id + '_reportDefinitionPre').text(JSON.stringify(this.report.getReportDefinition(), null, 2));\n        $('#' + this.options.id + '_reportDefinitionViewer').show();\n        $('#' + this.options.id + '_canvas').hide();\n\n    }\n\n\n    hideReportDefinition() {\n        $('#' + this.options.id + '_reportDefinitionViewer').hide();\n        $('#' + this.options.id + '_canvas').show();\n    }\n\n    /**\n     * Renders report criteria sections html, criterias will be rendered by the report object\n     * @returns \n     */\n    renderReportCriterias() {\n\n        this.log('Render report criterias');\n        return `<div id=\"${this.options.id}_criteriasZone\" class=\"report-viewer-criterias\">\n                    <div class=\"page-content\">\n                        <div class=\"container-fluid\">\n                            <div class=\"row\">                                \n                                <div class=\"col-12\">                                \n                                    <div class=\"page-title-box d-flex align-items-center justify-content-between\">\n                                        <h4 class=\"mb-0\" data-locale=\"Criterias\">Criterias</h4>\n                                        <div class=\"d-flex\">\n                                            <button class=\"btn btn-primary mr5\" onClick=\"Metadocx.viewer.report.applyCriterias();\"><i class=\"uil uil-check fs16\" style=\"color:#fff;\"></i>&nbsp;<span data-locale=\"ApplyCriterias\">Apply criterias</span></button>\n                                            <button class=\"btn btn-danger mr5\" onClick=\"Metadocx.viewer.report.resetCriterias();\" data-locale=\"Reset\">Reset</button>\n                                            <button class=\"btn btn-secondary\" onClick=\"Metadocx.viewer.report.cancelCriterias();\" data-locale=\"Cancel\">Cancel</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <div class=\"card\">\n                                        <div id=\"${this.options.id}_criteriasBody\" class=\"card-body\">\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>            \n                        </div>\n                    </div>\n                </div>`;\n    }\n\n    /**\n     * Render report options dialoag html\n     * @returns \n     */\n    renderOptionsDialog() {\n\n        /**\n         * Options dialog\n         */\n        this.log('Render report options dialog');\n\n        return `<div id=\"${this.options.id}_optionsDialog\" class=\"modal\" tabindex=\"-1\">\n               <div class=\"modal-dialog\">\n                 <div class=\"modal-content\">\n                 <div class=\"modal-header\">\n                     <h5 class=\"modal-title\" data-locale=\"Options\">Options</h5>\n                     <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                 </div>\n                 <div class=\"modal-body\">\n                     <div class=\"d-flex justify-content-between\">\n                         <div class=\"d-flex flex-column p-2\">\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\" data-locale=\"Orientation\">Orientation</label>\n                             \n                                 <div class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationPortrait\">\n                                     <label class=\"form-check-label\" for=\"orientationPortrait\" data-locale=\"Portrait\">\n                                         Portrait\n                                     </label>\n                                 </div>\n                                 <div class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationLandscape\">\n                                     <label class=\"form-check-label\" for=\"orientationLandscape\" data-locale=\"Landscape\">\n                                         Landscape\n                                     </label>\n                                 </div>\n                             </div>\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\" data-locale=\"PaperSize\">Paper size</label>\n                                 <select id=\"paperSize\" class=\"form-select\">\n                                 ${this.app.modules.Printing.getPaperSizeOptions()}\n                                 </select>\n                             </div>\n                             <div class=\"form-check mb-3\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"coverPage\">\n                                <label class=\"form-check-label\" for=\"coverPage\" data-locale=\"CoverPage\">\n                                    Cover Page\n                                </label>\n                             </div>\n                             <div class=\"mb-3\">                                \n                                 <label for=\"reportTheme\" class=\"form-label font-weight-bold\" data-locale=\"ReportTheme\">Report Theme</label>\n                                 <select id=\"reportTheme\" class=\"form-select\">\n                                 ${this.app.modules.Printing.getThemeOptions()}\n                                 </select>\n                             </div>\n                         </div>\n                         <div class=\"d-flex flex-column p-2\">\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\" data-locale=\"Margins\">Margins</label>\n                             \n                                 <div class=\"mb-3 row\">\n                                     <label for=\"topMargin\" class=\"col-sm-4 col-form-label\" data-locale=\"Top\">Top</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"topMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\" data-locale=\"Inches\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"bottomMargin\" class=\"col-sm-4 col-form-label\" data-locale=\"Bottom\">Bottom</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"bottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\" data-locale=\"Inches\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"leftMargin\" class=\"col-sm-4 col-form-label\" data-locale=\"Left\">Left</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"leftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\" data-locale=\"Inches\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"rightMargin\" class=\"col-sm-4 col-form-label\" data-locale=\"Right\">Right</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"rightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\" data-locale=\"Inches\">in.</label>\n                                 </div>                                                    \n                             </div>\n                         </div>\n                     </div>\n                 </div>\n                 <div class=\"modal-footer\">\n                     <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\" data-locale=\"Cancel\">Cancel</button>\n                     <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applyOptions();\"><i class=\"fa-solid fa-check\"></i>&nbsp;<span data-locale=\"ApplyOptions\">Apply Options</span></button>\n                 </div>\n                 </div>\n             </div>\n             </div>`;\n\n    }\n\n    /**\n     * Render report field properties dialog html\n     * @returns \n     */\n    renderFieldPropertiesDialog() {\n\n        /**\n         * Field properties dialog\n         */\n        this.log('Render report field properties dialog');\n\n        return `<div id=\"${this.options.id}_fieldPropertyDialog\" class=\"modal modal-lg\" tabindex=\"-1\" data-backdrop=\"false\">\n               <div class=\"modal-dialog\">\n                 <div class=\"modal-content\">\n                 <div class=\"modal-header\">\n                     <h5 class=\"modal-title\">Properties</h5>\n                     <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                 </div>\n                 <div class=\"modal-body\">\n                    <div class=\"row\">\n                            <div class=\"col-6\">\n                                <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldSectionID\" class=\"col-form-label\" data-locale=\"SectionID\">Section ID</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldSectionID\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldName\" class=\"col-form-label\" data-locale=\"Name\">Name</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldName\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldLabel\" class=\"col-form-label\" data-locale=\"Label\">Label</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldLabel\" value=\"\"/>                            \n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldWidth\" class=\"col-form-label\" data-locale=\"Width\">Width (px)</label>                            \n                                <input type=\"number\" class=\"form-control\" id=\"fieldWidth\" value=\"\"/>                            \n                            </div>\n\n                            <div class=\"form-check mb-3\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"fieldVisible\">\n                                <label class=\"form-check-label\" for=\"fieldVisible\" data-locale=\"IsVisible\">\n                                    Is Visible\n                                </label>\n                            </div>\n                        \n                        </div>\n                        <div class=\"col-6\">\n                            \n                            <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldType\" class=\"col-form-label\" data-locale=\"Type\">Type</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldType\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldAlign\" class=\"col-form-label\" data-locale=\"Alignment\">Alignment</label>                            \n                                <select id=\"fieldAlign\" class=\"form-control\">\n                                    <option value=\"left\" data-locale=\"Left\">Left</option>\n                                    <option value=\"right\" data-locale=\"Right\">Right</option>\n                                    <option value=\"center\" data-locale=\"Center\">Center</option>\n                                </select>\n                            </div>\n\n                            <div id=\"fieldFormula_container\" class=\"mb-3\">\n                                <label for=\"fieldFormula\" class=\"col-form-label\">Formula</label>                            \n                                <select id=\"fieldFormula\" class=\"form-control\">\n                                    <option value=\"\">(None)</option>\n                                    <option value=\"SUM\">Sum</option>\n                                    <option value=\"AVG\">Average</option>\n                                    <option value=\"MIN\">Min Value</option>\n                                    <option value=\"MAX\">Max Value</option>\n                                    <option value=\"COUNT\">Count</option>\n                                </select>\n                            </div>\n\n                            <div id=\"fieldFormat_container\" class=\"mb-3\">\n                                <label for=\"fieldFormat\" class=\"col-form-label\">Format</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldFormat\" value=\"\"/>                            \n                            </div>                            \n                        \n                        </div>\n                    </div>    \n\n                     \n                 </div>\n                 <div class=\"modal-footer\">\n                     <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n                     <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applyFieldProperties();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Apply Properties</button>\n                 </div>\n                 </div>\n             </div>\n             </div>`;\n\n    }\n\n    /**\n     * Render report settings offcanvas html\n     * @returns \n     */\n    renderReportSettings() {\n\n        this.log('Render report settings offcanvas');\n\n        return `<div id=\"${this.options.id}_settingsOffCanvas\" class=\"offcanvas offcanvas-end report-section-offcanvas\" data-bs-backdrop=\"static\" tabindex=\"-1\" aria-labelledby=\"${this.options.id}_settingsOffCanvasLabel\">\n                    <div class=\"offcanvas-header\">\n                        <h5 id=\"${this.options.id}_settingsOffCanvasLabel\" class=\"offcanvas-title\" data-locale=\"ReportSettings\">Report Settings</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                    </div>\n                    <div id=\"${this.options.id}_reportSettingsZone\" class=\"offcanvas-body\">\n                        \n                    </div>\n                </div>`;\n\n    }\n\n    /**\n     * Display report options in a modal dialog\n     */\n    showFieldPropertiesDialog(sectionID, fieldName) {\n\n        if (this.fieldPropertiesDialog === null) {\n            this.fieldPropertiesDialog = new bootstrap.Modal('#' + this.options.id + '_fieldPropertyDialog', {})\n        }\n\n        var sReportSectionType = this.report.getReportSection(sectionID).type + 'ReportSection';\n        var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportSection(sectionID));\n\n        var field = oReportSection.getColumn(fieldName);\n\n        $('#fieldSectionID').val(sectionID);\n        $('#fieldName').val(field.name);\n        $('#fieldType').val(field.type);\n        $('#fieldLabel').val(field.label);\n\n        var bIsVisible = true;\n        if (field.visible != undefined) {\n            bIsVisible = this.app.modules.DataType.toBool(field.visible);\n        }\n\n        $('#fieldVisible').prop('checked', bIsVisible);\n\n        if (field.formula != undefined) {\n            $('#fieldFormula').val(field.formula);\n        }\n        if (field.format != undefined) {\n            $('#fieldFormat').val(field.format);\n        }\n        if (field.width != undefined) {\n            $('#fieldWidth').val(field.width);\n        }\n\n\n        if (field.type == 'number') {\n            $('#fieldFormula_container').show();\n            $('#fieldFormat_container').show();\n        } else {\n            $('#fieldFormula_container').hide();\n            $('#fieldFormat_container').hide();\n        }\n\n\n\n        this.fieldPropertiesDialog.show();\n    }\n\n    applyFieldProperties() {\n\n        var sectionID = $('#fieldSectionID').val();\n        var fieldName = $('#fieldName').val();\n\n        var sReportSectionType = this.report.getReportSection(sectionID).type + 'ReportSection';\n        var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportSection(sectionID));\n\n        var field = oReportSection.getColumn(fieldName);\n\n        field.label = $('#fieldLabel').val();\n        if ($('#fieldWidth').val() != '') {\n            field.width = parseInt($('#fieldWidth').val());\n        } else {\n            field.width = '';\n        }\n        field.visible = $('#fieldVisible').prop('checked');\n\n        if (field.type == 'number') {\n            if ($('#fieldFormula').val() != '') {\n                field.formula = $('#fieldFormula').val();\n            } else {\n                field.formula = '';\n            }\n\n            if ($('#fieldFormat').val() != '') {\n                field.format = $('#fieldFormat').val();\n            } else {\n                field.format = '';\n            }\n        }\n\n        field.align = $('#fieldAlign').val();\n\n        oReportSection.setColumn(fieldName, field);\n        this.refreshReportSettings();\n        this.refreshReport();\n\n        this.fieldPropertiesDialog.hide();\n    }\n\n    /**\n     * Returns object of all criteria values\n     * @returns \n     */\n    getCriteriaValues() {\n\n        var values = {};\n        if (this.criterias) {\n            for (var x in this.criterias) {\n                values[this.criterias[x].id] = {\n                    id: this.criterias[x].id,\n                    enabled: this.criterias[x].getIsEnabled(),\n                    value: this.criterias[x].getValue(),\n                }\n            }\n        }\n\n        return values;\n    }\n\n    /**\n     * Returns a specific criteria value\n     * @param {*} criteria \n     * @returns \n     */\n    getCriteriaValue(criteriaName) {\n        return this.getCriteriaValues()[criteriaName];\n    }\n\n    /**\n     * Returns criteria \n     * @param {*} id \n     * @returns \n     */\n    getCriteria(id) {\n        if (this.criterias) {\n            for (var x in this.criterias) {\n                if (this.criterias[x].id == id) {\n                    return this.criterias[x];\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns is a specific criteria is enabled or not\n     * @param {*} id \n     * @returns \n     */\n    isCriteriaEnabled(id) {\n        return this.getCriteria(id).getIsEnabled();\n    }\n\n    /**\n     * Display report options in a modal dialog\n     */\n    showReportOptions() {\n\n        if (this.optionsDialog === null) {\n            this.optionsDialog = new bootstrap.Modal('#' + this.options.id + '_optionsDialog', {})\n        }\n\n        if (this.options.page.orientation == 'portrait') {\n            $('#orientationPortrait').prop('checked', true);\n            $('#orientationLandscape').prop('checked', false);\n        } else {\n            $('#orientationPortrait').prop('checked', false);\n            $('#orientationLandscape').prop('checked', true);\n        }\n\n        $('#paperSize').val(this.options.page.paperSize);\n\n        $('#topMargin').val(this.options.page.margins.top);\n        $('#bottomMargin').val(this.options.page.margins.bottom);\n        $('#leftMargin').val(this.options.page.margins.left);\n        $('#rightMargin').val(this.options.page.margins.right);\n\n        $('#coverPage').prop('checked', this.app.modules.DataType.toBool(this.options.coverPage.enabled));\n        if (this.options.template) {\n            $('#reportTheme').val(this.options.template);\n        } else {\n            $('#reportTheme').val('');\n        }\n\n\n        this.optionsDialog.show();\n    }\n\n    /**\n     * Apply report options selected by user\n     */\n    applyOptions() {\n\n        this._bDisableApplyReportViewerOptions = true;\n        this.options.page.margins.top = $('#topMargin').val();\n        this.options.page.margins.bottom = $('#bottomMargin').val();\n        this.options.page.margins.left = $('#leftMargin').val();\n        this.options.page.margins.right = $('#rightMargin').val();\n\n        this.options.page.paperSize = $('#paperSize').val();\n\n        if ($('#orientationPortrait').prop('checked')) {\n            this.options.page.orientation = 'portrait';\n        } else {\n            this.options.page.orientation = 'landscape';\n        }\n\n\n        this.options.coverPage.enabled = $('#coverPage').prop('checked');\n        this.options.template = $('#reportTheme').val();\n\n        this.optionsDialog.hide();\n\n        this._bDisableApplyReportViewerOptions = false;\n        this.applyReportViewerOptions();\n        this.refreshReport();\n\n    }\n\n\n    /**\n     * Refresh report view (reload the report)\n     */\n    refreshReport() {\n\n        this.theme = null;\n        this.report.renderReportCriterias();\n        this.report.renderReportSettings();\n        this.report.filter();\n        this.report.sort();\n\n        var oReportCanvas = new ReportCanvas(this.app, this.report, this);\n        $('#' + this.options.id + '_canvas').html(oReportCanvas.render());\n\n        oReportCanvas.initialiseJS();\n\n        this.updateCSS();\n        this.scaleReportSections();\n\n        if (!this.report.isLoaded) {\n            this.report.isLoaded = true;\n            this.report.copyOriginalSettings();\n            if (this.report.onReportLoaded) {\n                this.report.onReportLoaded();\n            }\n        }\n\n    }\n\n    /**\n     * Update reportPage style tag with print media css\n     */\n    updateCSS() {\n\n        var paperSize = this.app.modules.Printing.getPaperSize(this.app.viewer.options.page.paperSize);\n        var pageOrientation = this.app.viewer.options.page.orientation;\n\n        var width = 0;\n        var height = 0;\n\n        if (pageOrientation == this.app.modules.Printing.PageOrientation.Landscape) {\n            width = paperSize.height;\n            height = paperSize.width;\n        } else {\n            width = paperSize.width;\n            height = paperSize.height;\n        }\n\n        var s = `\n               \n        @media print {\n\n            html, body {\n                width: ${width}mm;\n                margin: 0;\n                padding: 0;\n            }\n\n            @page {\n                size: ${width}mm ${height}mm;\n                margin-top: ${this.options.page.margins.top}in !important;\n                margin-bottom: ${this.options.page.margins.bottom}in !important;\n                margin-left: ${this.options.page.margins.left}in !important;\n                margin-right: ${this.options.page.margins.right}in !important;\n                bleed: auto;\n                @bottom-center {\n                    content: counter(page) ' of ' counter(pages);\n                }\n            }\n\n            .report-page {\n                padding-top: 0px !important;\n                padding-bottom: 0px !important;\n                padding-left: 0px !important;\n                padding-right: 0px !important; \n                box-shadow: none;\n                border: none;\n                margin-left: inherit;\n                margin-right: inherit;    \n                width : ${width}mm;\n                height: ${height}mm;          \n            }\n \n            .no-print {\n                display: none;\n            }\n\n            .page-break {\n                page-break-before: always;\n            }\n          \n            .report-viewer-canvas {\n                overflow:visible;\n                height: auto;\n                padding:0px;\n            }\n                                            \n            table { page-break-after:auto }\n            tr    { page-break-inside:avoid; page-break-after:auto }\n            td    { page-break-inside:avoid; page-break-after:auto }\n            thead { display:table-header-group }\n            tfoot { display:table-footer-group }\n        }`;\n\n        $('#' + this.options.id + '_style').text(s);\n        this.app.modules.Printing.applyPageStyles();\n    }\n\n    /**\n     * Scales report section to fit in page width\n     */\n    scaleReportSections() {\n\n        $('.table-report-section').each(function () {\n\n            if ($(this).width() > 0) {\n                var ratio = $('#reportPage').width() / $(this).width();\n                if (ratio != 1) {\n                    $(this).css('transform', 'scaleX(' + parseFloat(ratio).toFixed(2) + ')');\n                    $(this).css('transform-origin', 'top left')\n                }\n            }\n\n        });\n\n    }\n\n    /**\n     * Displays report settings right off canvas\n     */\n    showReportSettings() {\n\n        if (this.settingsOffCanvas === null) {\n            this.settingsOffCanvas = new bootstrap.Offcanvas($('#' + this.options.id + '_settingsOffCanvas')[0], {})\n        }\n        this.settingsOffCanvas.show();\n\n    }\n\n    refreshReportSettings() {\n\n        for (var kSection in this.report.getReportDefinition().sections) {\n            var oSection = this.report.getReportDefinition().sections[kSection];\n\n            for (var y in oSection.model) {\n                var field = oSection.model[y];\n                var bIsVisible = true;\n                if (field.visible != undefined) {\n                    bIsVisible = this.app.modules.DataType.toBool(field.visible);\n                }\n                $('#' + oSection.id + '_field_' + oSection.model[y].name).prop('checked', bIsVisible);\n                if (field.formula) {\n                    $('#' + oSection.id + '_formula_' + oSection.model[y].name).val(field.formula);\n                } else {\n                    $('#' + oSection.id + '_formula_' + oSection.model[y].name).val('');\n                }\n                $('#' + oSection.id + '_label_' + oSection.model[y].name).html(field.label);\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Cancels report settings \n     */\n    cancelSettings() {\n        if (this.settingsOffCanvas !== null) {\n            this.settingsOffCanvas.hide();\n        }\n    }\n\n    /**\n     * Apply report settings\n     */\n    applySettings() {\n        if (this.settingsOffCanvas === null) {\n            this.settingsOffCanvas = new bootstrap.Offcanvas($('#' + this.app.viewer.options.id + '_settingsOffCanvas')[0], {})\n        }\n        this.settingsOffCanvas.hide();\n\n        // Update report properties name and description\n        this.report.getReportDefinition().properties.name = $('#reportSettingsName').val();\n        this.report.getReportDefinition().properties.description = $('#reportSettingsDescription').val();\n\n        // Update report sections \n        for (var x in this.report.getReportDefinition().sections) {\n            var oSection = this.report.getReportDefinition().sections[x];\n\n            /**\n             * Apply field settings\n             */\n            for (var f in oSection.model) {\n                var oCol = oSection.model[f];\n                oCol.visible = $('#' + oSection.id + '_field_' + oCol.name).prop('checked');\n                oCol['formula'] = $('#' + oSection.id + '_formula_' + oCol.name).val();\n            }\n\n            /**\n             * Reorder model columns\n             */\n            $('#' + oSection.id + '_fields tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n                oSection.model.forEach(function (item, i) {\n                    if (item.name == columnName) {\n                        oSection.model.splice(i, 1);\n                        oSection.model.unshift(item);\n                    }\n                });\n            });\n\n            oSection.model.reverse();\n\n            /**\n             * Apply order by settings\n             */\n\n            oSection.orderBy = [];\n            $('#' + oSection.id + '_orderBy tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n\n                if ($('#' + oSection.id + '_orderBy_' + columnName).prop('checked')) {\n                    oSection.orderBy.push({\n                        \"name\": columnName,\n                        \"order\": $('#' + oSection.id + '_orderByOrder_' + columnName).val()\n                    });\n                }\n\n            });\n\n            oSection.groupBy = [];\n            $('#' + oSection.id + '_groupBy tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n\n                if ($('#' + oSection.id + '_groupBy_' + columnName).prop('checked')) {\n                    oSection.groupBy.push({\n                        \"name\": columnName,\n                        \"order\": $('#' + oSection.id + '_groupByOrder_' + columnName).val()\n                    });\n                }\n\n            });\n\n\n        }\n\n        /**\n         * Apply settings changes\n         */\n        $('#' + this.options.id + '_headerName').html(this.report.getReportDefinition().properties.name);\n        $('#' + this.options.id + '_headerDescription').html(this.report.getReportDefinition().properties.description);\n\n        this.refreshReport();\n\n    }\n\n    /**\n     * Hide main toolbar in report viewer\n     */\n    hideToolbar() {\n        $('#' + this.report.id + '_toolbar').hide();\n    }\n\n    /**\n     * Show main toolbar in report viewer\n     */\n    showToolbar() {\n        $('#' + this.report.id + '_toolbar').show();\n    }\n\n\n    /**\n     * Returns container element selector\n     * @returns \n     */\n    getContainerSelector() {\n        return '#' + this.options.id;\n    }\n\n}\nwindow.__Metadocx.ReportViewer = ReportViewer;\n/** \n * BooleanCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass BooleanCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    initializeJS() {\n\n    }\n\n    render() {\n\n        return `<div class=\"form-check mb-2\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"${this.id}_yes\">\n                    <label class=\"form-check-label\" for=\"${this.id}_yes\" data-locale=\"Yes\">\n                        Yes\n                    </label>\n                </div>\n                <div class=\"form-check mb-2\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"${this.id}_no\">\n                    <label class=\"form-check-label\" for=\"${this.id}_no\" data-locale=\"No\">\n                        No\n                    </label>\n                </div>`;\n\n    }\n\n    getValue() {\n        var bYes = $('#' + this.id + '_yes').prop('checked');\n        var bNo = $('#' + this.id + '_no').prop('checked');\n\n        if (bYes && bNo) {\n            return 'ALL';\n        } else {\n            return bYes;\n        }\n\n    }\n\n    setValue(v) {\n\n        if (v === 'ALL') {\n            $('#' + this.id + '_yes').prop('checked', true);\n            $('#' + this.id + '_no').prop('checked', true);\n\n        } else {\n            $('#' + this.id + '_yes').prop('checked', v);\n            $('#' + this.id + '_no').prop('checked', !v);\n        }\n\n    }\n\n\n\n}\nwindow.__Metadocx.BooleanCriteria = BooleanCriteria;\n/** \n * CheckboxCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass CheckboxCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    /**\n     * Render criteria HTML\n     * @returns \n     */\n    render() {\n\n        var sCheckboxes = '';\n\n        if (Array.isArray(this.reportCriteria.options)) {\n\n            for (var x in this.reportCriteria.options) {\n                sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                    <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${this.reportCriteria.options[x].id}\" value=\"${this.reportCriteria.options[x].id}\">\n                                    <label class=\"form-check-label\" for=\"chk${this.id}_${this.reportCriteria.options[x].id}\">\n                                        ${this.reportCriteria.options[x].text}\n                                    </label>\n                                </div>`;\n\n            }\n\n        } else {\n\n            if (this.reportCriteria.options.source == 'data') {\n                /**\n                 * Use existing data to create options\n                 */\n                sCheckboxes = this.buildCheckboxesFromReportData(this.reportCriteria.options.field);\n            } else if (this.reportCriteria.options.source == 'ajax') {\n                sCheckboxes = '<div id=\"__tempHolder' + this.id + '\"></div>';\n                this.getCheckboxOptionsFromAjax(this.reportCriteria.options.url);\n            }\n\n        }\n\n        return `<div class=\"row\">${sCheckboxes}</div>`;\n\n    }\n\n    /**\n     * Calls page for list of options\n     * @param {*} url \n     */\n    getCheckboxOptionsFromAjax(url) {\n\n        $.get(url, (data, status) => {\n\n            this.buildCheckboxesFromAjaxData(data);\n\n        });\n\n    }\n\n    /**\n     * Builds checkboxes from ajax response\n     * @param {*} response \n     */\n    buildCheckboxesFromAjaxData(response) {\n\n        var sCheckboxes = '';\n        var data = response.results;\n        for (var x in data) {\n            sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${data[x].id}\" value=\"${data[x].id}\">\n                                <label class=\"form-check-label\" for=\"chk${this.id}_${data[x].id}\">\n                                    ${data[x].text}\n                                </label>\n                            </div>`;\n\n        }\n        $('#__tempHolder' + this.id).replaceWith(sCheckboxes);\n\n    }\n\n    /**\n     * Loads checkboxes from report data\n     * @param {*} field \n     * @returns \n     */\n    buildCheckboxesFromReportData(field) {\n        var sCheckboxes = '';\n        var aOptions = [];\n        var aReportSections = this.app.viewer.report.getReportSections();\n        for (var s in aReportSections) {\n            for (var x in aReportSections[s].data) {\n                var row = aReportSections[s].data[x];\n                if (aOptions.indexOf(row[field]) === -1) {\n                    aOptions.push(row[field]);\n                }\n            }\n        }\n\n        aOptions.sort();\n\n        var nIndex = 0;\n        for (var x in aOptions) {\n            sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                    <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${nIndex}\" value=\"${aOptions[x]}\">\n                                    <label class=\"form-check-label\" for=\"chk${this.id}_${nIndex}\">\n                                        ${aOptions[x]}\n                                    </label>\n                                </div>`;\n            nIndex++;\n        }\n\n        return sCheckboxes;\n\n    }\n\n    /**\n     * Returns criteria select value(s)\n     * @returns array\n     */\n    getValue() {\n\n        var values = [];\n        $('.report-checkbox-criteria[data-criteria-id=\"' + this.id + '\"]').each(function () {\n            if ($(this).prop('checked')) {\n                values.push($(this).val());\n            }\n        });\n\n        return values;\n    }\n\n}\nwindow.__Metadocx.CheckboxCriteria = CheckboxCriteria;\n/** \n * DatePeriodCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DatePeriodCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    initializeJS() {\n\n        this.reportCriteria.parameters.ranges = {\n            \"Today\": [moment(), moment()],\n            \"Yesterday\": [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n            \"Last 7 Days\": [moment().subtract(6, 'days'), moment()],\n            \"Last 30 Days\": [moment().subtract(29, 'days'), moment()],\n            \"This Month\": [moment().startOf('month'), moment().endOf('month')],\n            \"Last Month\": [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n        };\n\n        this._instance = $('#' + this.id).daterangepicker(this.reportCriteria.parameters);\n    }\n\n    render() {\n\n        return `<div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"${this.id}\">\n                        ${this.reportCriteria.name}\n                    </label>            \n                    <input id=\"${this.id}\" class=\"form-control\"/>                        \n                </div>`;\n\n    }\n\n    getValue() {\n        return {\n            startDate: this._instance.data('daterangepicker').startDate.format('YYYY-MM-DD'),\n            endDate: this._instance.data('daterangepicker').endDate.format('YYYY-MM-DD'),\n        };\n    }\n\n    setValue(v) {\n        this._instance.data('daterangepicker').setStartDate(v.startDate);\n        this._instance.data('daterangepicker').setEndDate(v.endDate);\n    }\n\n    setStartDate(dt) {\n        this._instance.data('daterangepicker').setStartDate(dt);\n    }\n\n    setEndDate(dt) {\n        this._instance.data('daterangepicker').setEndDate(dt);\n    }\n\n}\nwindow.__Metadocx.DatePeriodCriteria = DatePeriodCriteria;\n/** \n * NumericCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass NumericCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n        this._startValueInstance = null;\n        this._endValueInstance = null;\n        this._operatorInstance = null;\n    }\n\n    initializeJS() {\n\n        this._startValueInstance = $('#' + this.id + '_start');\n        this._endValueInstance = $('#' + this.id + '_end');\n        this._operatorInstance = $('#' + this.id + '_operator');\n\n        this._operatorInstance.on('change', () => {\n            this.updateUI();\n        });\n\n        this.updateUI();\n\n    }\n\n    updateUI() {\n        switch (this._operatorInstance.val()) {\n            case 'EQUAL':\n            case 'NOT_EQUAL':\n            case 'GREATER_THAN':\n            case 'GREATER_OR_EQUAL':\n            case 'SMALLER_THAN':\n            case 'SMALLER_OR_EQUAL':\n                $('#' + this.id + '_betweenLabel').hide();\n                this._endValueInstance.hide();\n                break;\n            case 'BETWEEN':\n                $('#' + this.id + '_betweenLabel').show();\n                this._endValueInstance.show();\n                break;\n\n        }\n    }\n\n    render() {\n\n\n        return `\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"${this.id}_start\">\n                    ${this.reportCriteria.name}\n                </label> \n                <div class=\"input-group mb-3\">               \n                    <span class=\"input-group-text\">\n                        <select id=\"${this.id}_operator\" class=\"form-control form-control-sm\">\n                            <option value=\"EQUAL\" data-locale=\"Equal\">Equal</option>\n                            <option value=\"NOT_EQUAL\" data-locale=\"NotEqual\">Not equal</option>\n                            <option value=\"GREATER_THAN\" data-locale=\"GreaterThan\">Greater than</option>\n                            <option value=\"GREATER_OR_EQUAL\" data-locale=\"GreaterOrEqual\">Greater or equal</option>\n                            <option value=\"SMALLER_THAN\" data-locale=\"SmallerThan\">Smaller than</option>\n                            <option value=\"SMALLER_OR_EQUAL\" data-locale=\"SmallerOrEqual\">Smaller or equal</option>\n                            <option value=\"BETWEEN\" data-locale=\"Between\">Between</option>\n                        </select>\n                    </span>\n                    <input id=\"${this.id}_start\" class=\"form-control\" type=\"number\"/>\n                    <span id=\"${this.id}_betweenLabel\" class=\"input-group-text\" data-locale=\"And\">and</span>\n                    <input id=\"${this.id}_end\" class=\"form-control\" type=\"number\"/>                    \n                </div>\n            </div>`;\n\n    }\n\n    getValue() {\n        return {\n            operator: this._operatorInstance.val(),\n            startValue: parseFloat(this._startValueInstance.val()),\n            endValue: parseFloat(this._endValueInstance.val())\n        };\n    }\n\n    setValue(v) {\n\n    }\n\n\n\n}\nwindow.__Metadocx.NumericCriteria = NumericCriteria;\n/** \n * SelectCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass SelectCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = {};\n    }\n\n    initializeJS() {\n\n        var thisObject = this;\n\n        if (!Array.isArray(this.reportCriteria.options)) {\n            if (this.reportCriteria.options.source = 'ajax' && this.reportCriteria.options.url) {\n                this.reportCriteria.parameters.ajax = {\n                    url: this.reportCriteria.options.url,\n                    dataType: 'json',\n                    data: function (params) {\n                        var data = {};\n                        for (var x in params) {\n                            data[x] = params[x];\n                        }\n                        data['locale'] = thisObject.app.modules.Locale.getCurrentLocale();\n                        return data;\n                    }\n\n                };\n            }\n        }\n\n        this._instance = $('#' + this.id).select2(this.reportCriteria.parameters);\n        $('#' + this.id).val(null).trigger(\"change\");\n    }\n\n    render() {\n\n        var sOptionTags = '';\n\n        if (Array.isArray(this.reportCriteria.options)) {\n\n            for (var x in this.reportCriteria.options) {\n                sOptionTags += `<option value=\"${this.reportCriteria.options[x].id}\">${this.reportCriteria.options[x].text}</option>`;\n            }\n\n        } else {\n\n            if (this.reportCriteria.options.source == 'data') {\n                /**\n                 * Use existing data to create options\n                 */\n                sOptionTags = this.buildOptionTagsFromReportData(this.reportCriteria.options.field);\n            } else if (this.reportCriteria.options.source == 'ajax') {\n\n            }\n\n        }\n\n\n\n        return `<div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"${this.id}\">\n                        ${this.reportCriteria.name}\n                    </label>            \n                    <select id=\"${this.id}\" class=\"form-control\">\n                        ${sOptionTags}\n                    </select>                    \n                </div>`;\n    }\n\n    getValue() {\n        return this._instance.select2('data');\n    }\n\n    buildOptionTagsFromReportData(field) {\n        var sOptionTags = '';\n        var aOptions = [];\n        var aReportSections = this.app.viewer.report.getReportSections();\n        for (var s in aReportSections) {\n            for (var x in aReportSections[s].data) {\n                var row = aReportSections[s].data[x];\n                if (aOptions.indexOf(row[field]) === -1) {\n                    aOptions.push(row[field]);\n                }\n            }\n        }\n\n        aOptions.sort();\n\n        for (var x in aOptions) {\n            sOptionTags += `<option value=\"${aOptions[x]}\">${aOptions[x]}</option>`;\n        }\n\n        return sOptionTags;\n\n    }\n\n\n\n}\nwindow.__Metadocx.SelectCriteria = SelectCriteria;\n/**\n * Browser module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass BrowserModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Returns browser type\n     * @returns \n     */\n    getBrowser() {\n        if (this.isChrome()) {\n            return 'chrome';\n        } else if (this.isIE()) {\n            return 'ie';\n        } else if (this.isEdge()) {\n            return 'edge';\n        } else if (this.isFirefox()) {\n            return 'firefox';\n        } else if (this.isSafari()) {\n            return 'safari';\n        } else if (this.isIOSChrome()) {\n            return 'chrome';\n        }\n    }\n\n    /**\n     * Check if browser is chrome\n     * @returns \n     */\n    isChrome() {\n        return !!window.chrome;\n    }\n\n    /**\n     * Check if browser is internet explorer\n     * @returns \n     */\n    isIE() {\n        return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n    }\n\n    /**\n     * Check if browser is Edge\n     * @returns \n     */\n    isEdge() {\n        return !this.isIE() && !!window.StyleMedia\n    }\n\n    /**\n     * Check if browser is firefox\n     * @returns \n     */\n    isFirefox() {\n        return typeof InstallTrigger !== 'undefined'\n    }\n\n    /**\n     * Check if browser is safari\n     * @returns \n     */\n    isSafari() {\n        return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n            navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n    }\n\n    /**\n     * Check if browser is chrome on iOs\n     * @returns \n     */\n    isIOSChrome() {\n        return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n    }\n\n\n\n}\nwindow.__Metadocx.BrowserModule = BrowserModule;\n/**\n * Console module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ConsoleModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.app = app;\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n        this.tag = null;\n        this.color = '#fff';\n        this.backColor = 'blue';\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Sets tag (text) to prepend to message\n     */\n    setTag(sTag) {\n        this.tag = sTag;\n        return this;\n    }\n\n    /**\n     * Sets tag color\n     * @param {*} sColor \n     * @param {*} sBackColor \n     * @returns object\n     */\n    setColor(sColor, sBackColor) {\n        this.color = sColor;\n        this.backColor = sBackColor;\n        return this;\n    }\n\n    /**\n    * The console.assert() method writes an error message to the console if the assertion is false. \n    * If the assertion is true, nothing happens.\n    */\n    assert() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.assert.apply(null, arguments);\n    }\n\n    /**\n     * The console.clear() method clears the console if the environment allows it.\n     */\n    clear() {\n        console.clear();\n    }\n\n    /**\n     * The console.count() method logs the number of times that this particular call to count() has been called.\n     */\n    count() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.count.apply(null, arguments);\n    }\n\n    /**\n     * The console.countReset() method resets counter used with console.count().\n     */\n    countReset() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.countReset.apply(null, arguments);\n    }\n\n    /**\n     * The console.debug() method outputs a message to the web console at the \"debug\" log level. \n     * The message is only displayed to the user if the console is configured to display debug output. \n     * In most cases, the log level is configured within the console UI. \n     * This log level might correspond to the `Debug` or `Verbose` log level.\n     * @param {*} sMessage      \n     */\n    debug(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.debug.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The method console.dir() displays an interactive list of the properties of the specified JavaScript object. \n     * The output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects.\n     * In other words, console.dir() is the way to see all the properties of a specified JavaScript object \n     * in console by which the developer can easily get the properties of the object.\n     * @param {*}      \n     */\n    dir() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.dir.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n\n    }\n\n    /**\n     * The console.error() method outputs an error message to the Web console.\n     * @param {*} sMessage      \n     */\n    error(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.error.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.group() method creates a new inline group in the Web console log,\n     * causing any subsequent console messages to be indented by an additional level, \n     * until console.groupEnd() is called.     \n     */\n    group() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.group.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.groupCollapsed() method creates a new inline group in the Web Console. \n     * Unlike console.group(), however, the new group is created collapsed. \n     * The user will need to use the disclosure button next to it to expand it, revealing the entries created in the group.\n     * Call console.groupEnd() to back out to the parent group.     \n     */\n    groupCollapsed() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.groupCollapsed.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.groupEnd() method exits the current inline group in the Web console. \n     * See Using groups in the console in the console documentation for details and examples.     \n     */\n    groupEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.groupEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.info() method outputs an informational message to the Web console. \n     * In Firefox, a small \"i\" icon is displayed next to these items in the Web console's log.\n     * @param {*} sMessage      \n     */\n    info() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.info.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.log() method outputs a message to the web console. \n     * The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects.     \n     */\n    log() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.log.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.profile() starts recording a performance profile (for example, the Firefox performance tool).\n     * You can optionally supply an argument to name the profile and this then enables you to stop only that profile\n     *  if multiple profiles being recorded. See console.profileEnd() to see how this argument is interpreted.\n     * @param {*} sName      \n     */\n    profile() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.profile.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.profileEnd() method stops recording a profile previously started with console.profile().\n     * @param {*} sName      \n     */\n    profileEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.profileEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * This function takes one mandatory argument data, which must be an array or an object, \n     * and one additional optional parameter columns.\n     * \n     * It logs data as a table. Each element in the array (or enumerable property if data is an object) \n     * will be a row in the table.\n     * \n     * The first column in the table will be labeled (index). If data is an array, \n     * then its values will be the array indices. If data is an object, then its values will be the property names. \n     * \n     * Note that (in Firefox) console.table is limited to displaying 1000 rows (first row is the labeled index).\n     * \n     * @param {*} e \n     */\n    table() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.table.apply(console, arguments);\n    }\n\n    /**\n     * The console.time() method starts a timer you can use to track how long an operation takes. \n     * You give each timer a unique name, and may have up to 10,000 timers running on a given page. \n     * When you call console.timeEnd() with the same name, the browser will output the time, in milliseconds, \n     * that elapsed since the timer was started.     \n     */\n    time() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.time.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.timeEnd() stops a timer that was previously started by calling console.time().     \n     */\n    timeEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.timeEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.timeLog() method logs the current value of a timer that was previously started \n     * by calling console.time() to the console.     \n     */\n    timeLog() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.timeLog.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.trace() method outputs a stack trace to the Web console.     \n     */\n    trace() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.trace.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.warn() method outputs a warning message to the Web console.\n     * @param {*} sMessage      \n     */\n    warn(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.warn.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * Build arguments for log methods with format options\n     * @param {*} args \n     * @returns array\n     */\n    buildArguments(args) {\n        var aArguments = [];\n        var sMessage = null;\n        var nFirstArg = 0;\n        if (args.length > 0) {\n            if (typeof args[0] == 'string') {\n                sMessage = args[0];\n                nFirstArg = 1;\n            }\n        }\n\n        if (this.tag && sMessage) {\n            sMessage = '%c' + this.tag.padEnd(10, ' ') + '%c ' + sMessage;\n            aArguments.push(sMessage);\n            aArguments.push('color:' + this.color + ';background-color:' + this.backColor + ';border-radius:3px;padding:2px;font-size:8pt;');\n            aArguments.push('color:#000;background-color:#fff');\n        } else if (sMessage) {\n            aArguments.push(sMessage);\n        }\n\n        for (var i = nFirstArg; i < args.length; i++) {\n            aArguments.push(args[i]);\n        }\n\n        return aArguments;\n    }\n\n    /**\n     * Disable console output\n     */\n    disable() {\n        this.isConsoleDisabled = true;\n        return this;\n    }\n\n    /**\n     * Enable console output\n     */\n    enable() {\n        this.isConsoleDisabled = false;\n        return this;\n    }\n\n    /**\n     * Display help for module\n     */\n    help() {\n        window.open('https://developer.mozilla.org/en-US/docs/Web/API/console');\n    }\n\n}\nwindow.__Metadocx.ConsoleModule = ConsoleModule;\n/**\n * DataType module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTypeModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Convert value to boolean value\n     * @param {*} v \n     * @returns \n     */\n    toBool(v) {\n        if (typeof v === 'string' || v instanceof String) {\n            v = v.toLowerCase();\n        }\n\n        switch (v) {\n            case true:\n            case \"true\":\n            case 1:\n            case \"1\":\n            case \"on\":\n            case \"yes\":\n            case \"oui\":\n            case \"vrai\":\n                return true;\n            default:\n                return false;\n        }\n\n    }\n\n    /**\n     * Parses float value\n     * @param {*} v \n     * @returns \n     */\n    parseFloat(v) {\n        return Number(v.toPrecision(15));\n    }\n\n    /**\n     * Deep copy of object \n     * @param {*} from \n     * @param {*} to \n     */\n    copyObjectProperties(from, to) {\n\n        for (var x in from) {\n            if (typeof from[x] === 'object') {\n                this.copyObjectProperties(from[x], to[x]);\n            } else {\n                to[x] = from[x];\n            }\n        }\n\n    }\n\n}\nwindow.__Metadocx.DataTypeModule = DataTypeModule;\n/**\n * Excel module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ExcelModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        if (this.exportDialog === null) {\n            $(this.app.viewer.getContainerSelector()).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_excelExportDialog', {})\n        }\n\n        $('#excelPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#excelPaperSize').val());\n        $('#excelPaperSizeWidth').val(paperSize.width);\n        $('#excelPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#excelOrientationPortrait').prop('checked', true);\n            $('#excelOrientationLandscape').prop('checked', false);\n        } else {\n            $('#excelOrientationPortrait').prop('checked', false);\n            $('#excelOrientationLandscape').prop('checked', true);\n        }\n\n        $('#excelTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#excelBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#excelLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#excelRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_excelExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Excel Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"excelPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"excelOrientation\" id=\"excelOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"excelOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"excelOrientation\" id=\"excelOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"excelOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"excelPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"excelPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 excelPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"excelPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"excelPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 excelPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"excelPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"excelPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelGrayscale\">\n                        <label class=\"form-check-label\" for=\"excelGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"excelUseCompression\">\n                            excel Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"excelIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"excelPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"excelTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"excelDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row excel-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"excelHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 excel-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelHeaderLine\">\n                        <label class=\"form-check-label\" for=\"excelHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"excelDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row excel-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"excelFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 excel-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelFooterLine\">\n                        <label class=\"form-check-label\" for=\"excelFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.excel.exportexcel();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export excel</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#excelDisplayHeader').off('click').on('click', () => {\n            if ($('#excelDisplayHeader').prop('checked')) {\n                $('.excel-header-row').show();\n            } else {\n                $('.excel-header-row').hide();\n            }\n        });\n\n        $('#excelDisplayFooter').off('click').on('click', () => {\n            if ($('#excelDisplayFooter').prop('checked')) {\n                $('.excel-footer-row').show();\n            } else {\n                $('.excel-footer-row').hide();\n            }\n        });\n\n        $('#excelPaperSize').off('change').on('change', () => {\n            if ($('#excelPaperSize').val() == 'Custom') {\n                $('.excelPaperSizeWidths').css('display', '');\n                $('.excelPaperSizeWidths').show();\n            } else {\n                $('.excelPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#excelPaperSize').val());\n            $('#excelPaperSizeWidth').val(paperSize.width);\n            $('#excelPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getExcelExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#excelOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": $('#excelPaperSize').val(),\n                \"width\": $('#excelPaperSizeWidth').val(),\n                \"height\": $('#excelPaperSizeHeight').val(),\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelTopMargin').val())),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelBottomMargin').val())),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelLeftMargin').val())),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelRightMargin').val()))\n                }\n            },\n            \"grayscale\": $('#excelGrayscale').prop('checked'),\n            \"excelCompression\": $('#excelUseCompression').prop('checked'),\n            \"outline\": $('#excelIncludeOutline').prop('checked'),\n            \"backgroundGraphics\": $('#excelPrintBackgrounds').prop('checked'),\n            \"header\": {\n                \"left\": $('#excelHeaderLeft').val(),\n                \"center\": $('#excelHeaderCenter').val(),\n                \"right\": $('#excelHeaderRight').val(),\n                \"displayHeaderLine\": $('#excelHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": $('#excelFooterLeft').val(),\n                \"center\": $('#excelFooterCenter').val(),\n                \"right\": $('#excelFooterRight').val(),\n                \"displayFooterLine\": $('#excelFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportexcel() {\n        $.ajax({\n            type: 'post',\n            url: '/Convert/excel',\n            data: {\n                ExportOptions: this.getExcelExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#reportPage').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var blob = new Blob([data]);\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                link.download = \"Report.xls\";\n                link.click();\n\n            }\n        });\n    }\n\n\n}\nwindow.__Metadocx.ExcelModule = ExcelModule;\n/**\n * Format module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass FormatModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    format(value, dataType, format) {\n\n        var displayValue = '';\n\n        switch (dataType) {\n            case 'number':\n                if (format === undefined) {\n                    format = this.app.viewer.options.formats.number.format;\n                }\n                displayValue = numeral(value).format(format);\n                break;\n            case 'boolean':\n                if (value === 'ALL') {\n                    if (this.app.viewer.options.formats.boolean.format.ALL !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.ALL;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'All';\n                    }\n\n                } else if (value) {\n\n                    if (this.app.viewer.options.formats.boolean.format.trueValue !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.trueValue;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'Yes';\n                    }\n\n\n                } else {\n\n                    if (this.app.viewer.options.formats.boolean.format.falseValue !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.falseValue;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'No';\n                    }\n\n                }\n                break;\n            case 'date':\n                if (format === undefined) {\n                    format = this.app.viewer.options.formats.date.format;\n                }\n                displayValue = moment(value).format(format);\n                break;\n            default:\n                displayValue = value;\n                break;\n        }\n\n        return displayValue;\n\n    }\n\n\n\n}\nwindow.__Metadocx.FormatModule = FormatModule;\n/**\n * Import module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ImportModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 200;\n        this.isConsoleDisabled = false;\n        this.loaded = false;\n        this.onLibrairiesLoaded = null;\n        this._bInjectionWasMade = false;\n\n        this.loadStatus = {};\n\n        this.stacks = {\n            default: {\n                requires: [\n                    'Metadocx', 'jQuery', 'IconScout', 'Numeral', 'Bootstrap', 'Select2', 'Moment', 'DateRangePicker'\n                ],\n            },\n        };\n\n        this.libraries = {\n            Metadocx: {\n                head: {\n                    links: [\n                        {\n                            id: 'metadocxcss',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: '/css/metadocx.css',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"metadocxcss\" rel=\"stylesheet\" href=\"/css/metadocx.css\" />',\n                        }\n                    ],\n                }\n            },\n            jQuery: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'jquery',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://code.jquery.com/jquery-3.6.1.min.js',\n                            crossorigin: 'anonymous',\n                            integrity: 'sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=',\n                            code: '<script id=\"jquery\" src=\"https://code.jquery.com/jquery-3.6.1.min.js\" integrity=\"sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=\" crossorigin=\"anonymous\"></script>',\n                        }\n                    ],\n                }\n            },\n            FontAwesome: {\n                head: {\n                    links: [\n                        {\n                            id: 'fontawesome',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css',\n                            integrity: 'sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==',\n                            crossorigin: 'anonymous',\n                            referrerpolicy: 'no-referrer',\n                            code: '<link id=\"fontawesome\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css\" integrity=\"sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />',\n                        },\n                    ],\n                }\n            },\n            IconScout: {\n                head: {\n                    links: [\n                        {\n                            id: 'iconscoutcss',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: 'https://unicons.iconscout.com/release/v4.0.0/css/line.css',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"iconscoutcss\" rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\">        ',\n                        },\n                    ],\n                }\n            },\n            Moment: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'momentjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/momentjs/latest/moment.min.js',\n                            code: '<script id=\"momentjs\" src=\"https://cdn.jsdelivr.net/momentjs/latest/moment.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            DateRangePicker: {\n                head: {\n                    links: [\n                        {\n                            id: 'daterangepickercss',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css',\n                            rel: 'stylesheet',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"daterangepickercss\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'daterangepickerjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js',\n                            code: '<script id=\"daterangepickerjs\" src=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            Numeral: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'numeral',\n                            type: 'script',\n                            priority: 100,\n                            src: '//cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js',\n                            code: '<script id=\"numeral\" src=\"//cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            Bootstrap: {\n                head: {\n                    links: [\n                        {\n                            id: 'bootstrapcss',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css',\n                            rel: 'stylesheet',\n                            integrity: 'sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"bootstrapcss\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'popperjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js',\n                            integrity: 'sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"popperjs\" src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\" integrity=\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\" crossorigin=\"anonymous\"></script>',\n                        },\n                        {\n                            id: 'bootstrapjs',\n                            type: 'script',\n                            priority: 110,\n                            src: 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js',\n                            integrity: 'sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"bootstrapjs\" src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>',\n                        },\n                    ],\n                }\n            },\n            Select2: {\n                head: {\n                    links: [\n                        {\n                            id: 'select2css',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css',\n                            rel: 'stylesheet',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"select2css\" href=\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css\" rel=\"stylesheet\" />',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'select2js',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"select2js\" src=\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js\"></script>',\n                        },\n                    ],\n                }\n            },\n        };\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    isLoaded() {\n\n        for (var x in this.loadStatus) {\n            if (!this.loadStatus[x].loaded) {\n                return false;\n            }\n        }\n\n        return true;\n\n    }\n\n\n\n    injectLibrary(libName) {\n        var sections = this.libraries[libName];\n        if (sections.head && sections.head.links) {\n            for (var x in sections.head.links) {\n                if ($('#' + sections.head.links[x].id).length == 0) {\n                    this.log('   Injecting head link ' + sections.head.links[x].id);\n                    this.createElement(sections.head.links[x]);\n                } else {\n                    this.log('   Script ' + sections.head.links[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.head && sections.head.scripts) {\n            for (var x in sections.head.scripts) {\n                if ($('#' + sections.head.scripts[x].id).length == 0) {\n                    this.log('   Injecting head script ' + sections.head.scripts[x].id);\n                    this.createElement(sections.head.scripts[x]);\n                } else {\n                    this.log('   Script ' + sections.head.scripts[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.bottom && sections.bottom.links) {\n            for (var x in sections.bottom.links) {\n                if ($('#' + sections.bottom.links[x].id).length == 0) {\n                    this.log('   Injecting bootom link ' + sections.bottom.links[x].id);\n                    this.createElement(sections.bottom.links[x]);\n                } else {\n                    this.log('   Script ' + sections.bottom.links[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.bottom && sections.bottom.scripts) {\n            for (var x in sections.bottom.scripts) {\n                if ($('#' + sections.bottom.scripts[x].id).length == 0) {\n                    this.log('   Injecting bottom script ' + sections.bottom.scripts[x].id);\n                    this.createElement(sections.bottom.scripts[x]);\n                } else {\n                    this.log('   Script ' + sections.bottom.scripts[x].id + ' already loaded');\n                }\n            }\n        }\n    }\n\n    triggerLibrariesLoaded(libName) {\n\n        if (this.loadStatus[libName]) {\n            this.loadStatus[libName].loaded = true;\n        }\n\n        if (this.isLoaded()) {\n            if (this.onLibrairiesLoaded) {\n                this.onLibrairiesLoaded();\n            }\n        }\n    }\n\n    createElement(options) {\n\n        var module = this;\n\n        if (document.getElementById(id)) {\n            console.log('Package is already loaded, skipping');\n            return;\n        }\n\n        this._bInjectionWasMade = true;\n\n        this.loadStatus[options.id] = {\n            loaded: false,\n        };\n\n        (function (d, s, id) {\n            var js, lsjs = d.getElementsByTagName(s)[0];\n\n            if (d.getElementById(id)) {\n                console.log('Package is already loaded, skipping');\n                return;\n            }\n            js = d.createElement(s); js.id = id;\n            if (options.onload) {\n                js.onload = options.onload;\n            } else {\n                js.onload = () => {\n                    module.triggerLibrariesLoaded(id);\n                };\n            }\n            if (options.src) {\n                js.src = options.src;\n            }\n            if (options.crossorigin) {\n                js.crossOrigin = options.crossorigin;\n            }\n            if (options.integrity) {\n                js.integrity = options.integrity;\n            }\n            if (options.href) {\n                js.href = options.href;\n            }\n            if (options.rel) {\n                js.rel = options.rel;\n            }\n            if (!lsjs) {\n                // Inject in head\n                lsjs = document.getElementsByTagName('head')[0];\n                lsjs.appendChild(js);\n            } else {\n                lsjs.parentNode.insertBefore(js, lsjs);\n            }\n\n        }(document, options.type, options.id));\n    }\n\n    injectRequiredLibraries() {\n        console.groupCollapsed('[Metadocx] Import injectRequiredLibraries');\n\n        if (this.app.viewer.options.ui == undefined) {\n            this.app.viewer.options.ui = 'default';\n        }\n\n        this.log('Injecting required librairies for stack ' + this.app.viewer.options.ui);\n        for (var x in this.stacks[this.app.viewer.options.ui].requires) {\n            var libName = this.stacks[this.app.viewer.options.ui].requires[x];\n            this.injectLibrary(libName);\n        }\n\n        if (!this._bInjectionWasMade) {\n            // No injection made call \n            if (this.onLibrairiesLoaded) {\n                this.onLibrairiesLoaded();\n            }\n        }\n\n    }\n\n\n}\nwindow.__Metadocx.ImportModule = ImportModule;\n/**\n * Locale module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass LocaleModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n        this.currentLocale = 'en';\n        this.locales = window.__Metadocx.Locales;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    addLocale(locale, keys) {\n\n        if (this.locales[locale] == undefined) {\n            this.locales[locale] = {};\n        }\n\n        for (var k in keys) {\n            this.locales[locale][k] = keys[k];\n        }\n\n    }\n\n    setLocale(locale) {\n        if (this.currentLocale != locale) {\n            this.currentLocale = locale;\n            moment.locale(this.currentLocale);\n            this.translate();\n        }\n    }\n\n    getKey(key) {\n        var text = this.locales[this.currentLocale][key];\n        if (text == undefined || text == null) {\n            console.warn('Missing translation key ' + key);\n            text = key;\n        }\n        return text;\n    }\n\n    getCurrentLocale() {\n        return this.currentLocale;\n    }\n\n    getLocales() {\n        var locales = [];\n        for (var x in this.locales) {\n            locales.push(x);\n        }\n        return locales;\n    }\n\n    translate() {\n\n        var thisObject = this;\n        $('[data-locale]').each(function () {\n            if ($(this).is('input') || $(this).is('textarea')) {\n                $(this).attr('placeholder', thisObject.getKey($(this).data('locale')));\n            } else {\n                $(this).html(thisObject.getKey($(this).data('locale')));\n            }\n        });\n\n    }\n\n    getLocaleMenuOptions() {\n        var locales = this.getLocales();\n        var s = '';\n        for (var x in locales) {\n            s += `<a id=\"${this.app.viewer.options.id}_locale_${locales[x]}\" class=\"dropdown-item\" href=\"#\" onClick=\"Metadocx.modules.Locale.setLocale('${locales[x]}');\" data-locale=\"${locales[x]}\">${locales[x]}</a>`;\n        }\n        return s;\n    }\n\n\n}\nwindow.__Metadocx.LocaleModule = LocaleModule;\n/**\n * PDF module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass PDFModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.color = '#fff';\n        this.backColor = 'red';\n\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        if (this.exportDialog === null) {\n\n            $('#' + this.app.viewer.options.container).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_pdfExportDialog', {})\n        }\n\n        $('#pdfPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#pdfPaperSize').val());\n        $('#pdfPaperSizeWidth').val(paperSize.width);\n        $('#pdfPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#pdfOrientationPortrait').prop('checked', true);\n            $('#pdfOrientationLandscape').prop('checked', false);\n        } else {\n            $('#pdfOrientationPortrait').prop('checked', false);\n            $('#pdfOrientationLandscape').prop('checked', true);\n        }\n\n        $('#pdfTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#pdfBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#pdfLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#pdfRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n    hideExportDialog() {\n        if (this.exportDialog !== null) {\n            this.exportDialog.hide();\n        }\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_pdfExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">PDF Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"pdfPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"pdfOrientation\" id=\"pdfOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"pdfOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"pdfOrientation\" id=\"pdfOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"pdfOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"pdfPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"pdfPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 pdfPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"pdfPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"pdfPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 pdfPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"pdfPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"pdfPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfGrayscale\">\n                        <label class=\"form-check-label\" for=\"pdfGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"pdfUseCompression\">\n                            PDF Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"pdfIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"pdfPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"pdfDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row pdf-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"pdfHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 pdf-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfHeaderLine\">\n                        <label class=\"form-check-label\" for=\"pdfHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"pdfDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row pdf-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"pdfFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 pdf-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfFooterLine\">\n                        <label class=\"form-check-label\" for=\"pdfFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.PDF.exportPDF();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export PDF</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#pdfDisplayHeader').off('click').on('click', () => {\n            if ($('#pdfDisplayHeader').prop('checked')) {\n                $('.pdf-header-row').show();\n            } else {\n                $('.pdf-header-row').hide();\n            }\n        });\n\n        $('#pdfDisplayFooter').off('click').on('click', () => {\n            if ($('#pdfDisplayFooter').prop('checked')) {\n                $('.pdf-footer-row').show();\n            } else {\n                $('.pdf-footer-row').hide();\n            }\n        });\n\n        $('#pdfPaperSize').off('change').on('change', () => {\n            if ($('#pdfPaperSize').val() == 'Custom') {\n                $('.pdfPaperSizeWidths').css('display', '');\n                $('.pdfPaperSizeWidths').show();\n            } else {\n                $('.pdfPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#pdfPaperSize').val());\n            $('#pdfPaperSizeWidth').val(paperSize.width);\n            $('#pdfPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getPDFExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#pdfOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        var paperSize = this.app.viewer.options.page.paperSize;\n        if ($('#pdfPaperSize').length > 0) {\n            paperSize = $('#pdfPaperSize').val();\n        }\n\n        var paperSizeInfo = this.app.modules.Printing.getPaperSize(paperSize);\n        var width = paperSizeInfo.width;\n        var height = paperSizeInfo.height;\n        if ($('#pdfPaperSizeWidth').length > 0) {\n            width = $('#pdfPaperSizeWidth').val();\n        }\n        if ($('#pdfPaperSizeHeight').length > 0) {\n            height = $('#pdfPaperSizeHeight').val();\n        }\n        var grayscale = false;\n        if ($('#pdfGrayscale').length > 0) {\n            grayscale = $('#pdfGrayscale').prop('checked');\n        }\n        var marginTop = $('#pdfTopMargin').val();\n        if (marginTop == undefined) {\n            marginTop = this.app.viewer.options.page.margins.top;\n        }\n        var marginBottom = $('#pdfBottomMargin').val();\n        if (marginBottom == undefined) {\n            marginBottom = this.app.viewer.options.page.margins.bottom;\n        }\n        var marginLeft = $('#pdfLeftMargin').val();\n        if (marginLeft == undefined) {\n            marginLeft = this.app.viewer.options.page.margins.left;\n        }\n        var marginRight = $('#pdfRightMargin').val();\n        if (marginRight == undefined) {\n            marginRight = this.app.viewer.options.page.margins.right;\n        }\n        var pdfCompression = $('#pdfUseCompression').prop('checked');\n        if (pdfCompression == undefined) {\n            pdfCompression = true;\n        }\n        var outline = $('#pdfIncludeOutline').prop('checked');\n        if (outline == undefined) {\n            outline = true;\n        }\n        var backgroundGraphics = $('#pdfPrintBackgrounds').prop('checked');\n        if (backgroundGraphics == undefined) {\n            backgroundGraphics = true;\n        }\n\n        var headerLeft = $('#pdfHeaderLeft').val();\n        if (headerLeft == undefined) {\n            headerLeft = '';\n        }\n        var headerCenter = $('#pdfHeaderCenter').val();\n        if (headerCenter == undefined) {\n            headerCenter = '';\n        }\n        var headerRight = $('#pdfHeaderRight').val();\n        if (headerRight == undefined) {\n            headerRight = '';\n        }\n\n        var footerLeft = $('#pdfFooterLeft').val();\n        if (footerLeft == undefined) {\n            footerLeft = '';\n        }\n        var footerCenter = $('#pdfFooterCenter').val();\n        if (footerCenter == undefined) {\n            footerCenter = '';\n        }\n        var footerRight = $('#pdfFooterRight').val();\n        if (footerRight == undefined) {\n            footerRight = '';\n        }\n\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": paperSize,\n                \"width\": width,\n                \"height\": height,\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginTop)),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginBottom)),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginLeft)),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginRight))\n                }\n            },\n            \"grayscale\": grayscale,\n            \"pdfCompression\": pdfCompression,\n            \"outline\": outline,\n            \"backgroundGraphics\": backgroundGraphics,\n            \"header\": {\n                \"left\": headerLeft,\n                \"center\": headerCenter,\n                \"right\": headerRight,\n                \"displayHeaderLine\": $('#pdfHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": footerLeft,\n                \"center\": footerCenter,\n                \"right\": footerRight,\n                \"displayFooterLine\": $('#pdfFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportPDF() {\n\n        var thisObject = this;\n\n        /**\n         * Get export options and hide dialog\n         */\n        var pdfOptions = this.getPDFExportOptions();\n        this.hideExportDialog();\n\n        /**\n         * Show exporting dialog\n         */\n        var exportDialog = bootbox.dialog({\n            title: 'Export to PDF',\n            message: '<p><i class=\"fas fa-spin fa-spinner\"></i> Exporting report to PDF...</p>'\n        });\n\n        $('.report-graph-canvas').hide();\n        $('.report-graph-image').show();\n\n        /**\n         * Call export service\n         */\n        $.ajax({\n            type: 'post',\n            url: '/Metadocx/Convert/PDF',\n            data: {\n                PDFOptions: pdfOptions,\n                HTML: btoa(unescape(encodeURIComponent($('#' + this.app.viewer.report.id + '_canvas').html()))),\n\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n\n\n                var blob = new Blob([data]);\n                //var link = document.createElement('a');\n                //link.href = window.URL.createObjectURL(blob);\n                //link.download = \"Report.pdf\";\n\n                var sContent = `Report has been converted to PDF, click on button to download file<br><br>\n                <a class=\"btn btn-primary\" href=\"${window.URL.createObjectURL(blob)}\" download=\"Report.pdf\" onClick=\"$('.bootbox.modal').modal('hide');\">Download report</a>`;\n\n                exportDialog.find('.bootbox-body').html(sContent);\n\n                thisObject.hideExportDialog();\n                thisObject.app.modules.Printing.applyPageStyles();\n\n                $('.report-graph-canvas').show();\n                $('.report-graph-image').hide();\n\n            }\n        });\n    }\n\n    print() {\n\n        var thisObject = this;\n\n        var loadingDialog = bootbox.dialog({\n            message: '<p class=\"text-center mb-0\"><i class=\"fas fa-spin fa-cog\"></i> Generating and printing report...</p>',\n            closeButton: false\n        });\n\n        $('.report-graph-canvas').hide();\n        $('.report-graph-image').show();\n\n        $.ajax({\n            type: 'post',\n            url: '/Metadocx/Convert/PDF',\n            data: {\n                PDFOptions: this.getPDFExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#' + this.app.viewer.report.id + '_canvas').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var pdfBlob = new Blob([data], { type: 'application/pdf' });\n                pdfBlob = window.URL.createObjectURL(pdfBlob)\n\n                $('#__metadocxPDFPrint').remove();\n\n                var printFrame = document.createElement('iframe');\n                printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0');\n                printFrame.setAttribute('id', '__metadocxPDFPrint');\n                printFrame.setAttribute('src', pdfBlob);\n\n                document.getElementsByTagName('body')[0].appendChild(printFrame);\n                var iframeElement = document.getElementById('__metadocxPDFPrint');\n\n                iframeElement.onload = () => {\n                    iframeElement.focus();\n                    iframeElement.contentWindow.print();\n                }\n\n                thisObject.app.modules.Printing.applyPageStyles();\n                $('.report-graph-canvas').show();\n                $('.report-graph-image').hide();\n\n                loadingDialog.modal('hide');\n\n            }\n        });\n\n\n    }\n\n\n}\nwindow.__Metadocx.PDFModule = PDFModule;\n/**\n * Printing module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass PrintingModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n\n        /**\n         * Types of paper sizes\n         */\n        this.PaperSize = {\n            A0: 'A0',\n            A1: 'A1',\n            A2: 'A2',\n            A3: 'A3',\n            A4: 'A4',\n            A5: 'A5',\n            A6: 'A6',\n            A7: 'A7',\n            A8: 'A8',\n            A9: 'A9',\n            B0: 'B0',\n            B1: 'B1',\n            B2: 'B2',\n            B3: 'B3',\n            B4: 'B4',\n            B5: 'B5',\n            B6: 'B6',\n            B7: 'B7',\n            B8: 'B8',\n            B9: 'B9',\n            B10: 'B10',\n            C5E: 'C5E',\n            Comm10E: 'Comm10E',\n            DLE: 'DLE',\n            Executive: 'Executive',\n            Folio: 'Folio',\n            Ledger: 'Ledger',\n            Legal: 'Legal',\n            Letter: 'Letter',\n            Tabloid: 'Tabloid',\n            Custom: 'Custom',\n        };\n\n        /**\n         * Paper size width and height in mm\n         */\n        this.PaperSizeProperties = {\n\n            A0: { width: 841, height: 1189 },\n            A1: { width: 594, height: 841 },\n            A2: { width: 420, height: 594 },\n            A3: { width: 297, height: 420 },\n            A4: { width: 210, height: 297 },\n            A5: { width: 148, height: 210 },\n            A6: { width: 105, height: 148 },\n            A7: { width: 74, height: 105 },\n            A8: { width: 52, height: 74 },\n            A9: { width: 37, height: 52 },\n            B0: { width: 1000, height: 1414 },\n            B1: { width: 707, height: 1000 },\n            B2: { width: 500, height: 707 },\n            B3: { width: 353, height: 500 },\n            B4: { width: 250, height: 353 },\n            B5: { width: 176, height: 250 },\n            B6: { width: 125, height: 176 },\n            B7: { width: 88, height: 125 },\n            B8: { width: 62, height: 88 },\n            B9: { width: 33, height: 62 },\n            B10: { width: 31, height: 44 },\n            C5E: { width: 163, height: 229 },\n            Comm10E: { width: 105, height: 241 },\n            DLE: { width: 110, height: 220 },\n            Executive: { width: 190.5, height: 254 },\n            Folio: { width: 210, height: 330 },\n            Ledger: { width: 431.8, height: 279.4 },\n            Legal: { width: 215.9, height: 355.6 },\n            Letter: { width: 215.9, height: 279.4 },\n            Tabloid: { width: 279.4, height: 431.8 },\n            Custom: { width: 0, height: 0 }\n        };\n\n        /**\n         * Page orientations\n         */\n        this.PageOrientation = {\n            Portrait: 'portrait',\n            Landscape: 'landscape'\n        };\n\n\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    getPaperSizeOptions() {\n        var s = '';\n        for (var x in this.PaperSize) {\n            s += '<option value=\"' + this.PaperSize[x] + '\">' + this.PaperSize[x] + '</option>';\n        }\n        return s;\n    }\n\n    getPaperSizes() {\n        return Object.keys(this.PaperSize);\n    }\n\n    getPaperSize(name) {\n        if (this.PaperSizeProperties[name] != undefined) {\n            return this.PaperSizeProperties[name];\n        } else {\n            return { width: 0, height: 0 };\n        }\n    }\n\n    applyPageStyles() {\n\n        var paperSize = this.getPaperSize(this.app.viewer.options.page.paperSize);\n        var pageOrientation = this.app.viewer.options.page.orientation;\n\n        var width = 0;\n        var height = 0;\n\n        if (pageOrientation == this.PageOrientation.Landscape) {\n            width = paperSize.height;\n            height = paperSize.width;\n        } else {\n            width = paperSize.width;\n            height = paperSize.height;\n        }\n\n        $('.report-page').css('max-width', width + 'mm');\n        $('.report-page').css('width', width + 'mm');\n        $('.report-page').css('min-height', height + 'mm');\n\n        $('.report-page').css('padding-top', this.app.viewer.options.page.margins.top + 'in');\n        $('.report-page').css('padding-bottom', this.app.viewer.options.page.margins.bottom + 'in');\n        $('.report-page').css('padding-left', this.app.viewer.options.page.margins.left + 'in');\n        $('.report-page').css('padding-right', this.app.viewer.options.page.margins.right + 'in');\n\n    }\n\n    getThemeOptions() {\n        var s = '';\n        s += '<option value=\"\" data-locale=\"Default\">Default</option>';\n        for (var x in window.__Metadocx.Themes) {\n            s += '<option value=\"' + x + '\">' + x + '</option>';\n        }\n        return s;\n    }\n\n\n\n}\nwindow.__Metadocx.PrintingModule = PrintingModule;\n/**\n * UI module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass UIModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 200;\n        this.isConsoleDisabled = false;\n\n        /**\n        * Conversion ratio centimeters to pixels\n        */\n        this._cmToPx = 37.7952;\n\n        /**\n         * Conversion ratio points to pixels\n         */\n        this._ptToPx = 1.32835;\n\n        /**\n         * Conversion ratio inches to pixels\n         */\n        this._inchToPx = 96;\n\n        /**\n        * Conversion ratio mm to inches\n        */\n        this._mmToInches = 0.0393701;\n\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    renderReportViewer(app) {\n        console.groupEnd();\n        console.groupCollapsed('[Metadocx] Render report viewer');\n        app.viewer.render();\n        console.groupEnd();\n    }\n\n    convertInchesToPixels(inches) {\n        return inches * this._inchToPx;\n    }\n\n    convertPixelsToInches(pixels) {\n        return pixels / this._inchToPx;\n    }\n\n    convertInchesToMM(inches) {\n        return parseFloat((inches / this._mmToInches).toFixed(2));\n    }\n\n    convertMMtoInches(mm) {\n        return parseFloat(mm * this._mmToInches);\n    }\n\n\n}\nwindow.__Metadocx.UIModule = UIModule;\n/**\n * Word module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass WordModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        return this.exportWord();\n\n        if (this.exportDialog === null) {\n            $(this.app.viewer.getContainerSelector()).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_wordExportDialog', {})\n        }\n\n        $('#wordPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#wordPaperSize').val());\n        $('#wordPaperSizeWidth').val(paperSize.width);\n        $('#wordPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#wordOrientationPortrait').prop('checked', true);\n            $('#wordOrientationLandscape').prop('checked', false);\n        } else {\n            $('#wordOrientationPortrait').prop('checked', false);\n            $('#wordOrientationLandscape').prop('checked', true);\n        }\n\n        $('#wordTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#wordBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#wordLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#wordRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_wordExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Word Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"wordPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"wordOrientation\" id=\"wordOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"wordOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"wordOrientation\" id=\"wordOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"wordOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"wordPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"wordPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 wordPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"wordPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"wordPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 wordPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"wordPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"wordPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordGrayscale\">\n                        <label class=\"form-check-label\" for=\"wordGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"wordUseCompression\">\n                            word Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"wordIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"wordPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"wordTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"wordDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row word-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"wordHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 word-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordHeaderLine\">\n                        <label class=\"form-check-label\" for=\"wordHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"wordDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row word-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"wordFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 word-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordFooterLine\">\n                        <label class=\"form-check-label\" for=\"wordFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.Word.exportWord();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export Word</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#wordDisplayHeader').off('click').on('click', () => {\n            if ($('#wordDisplayHeader').prop('checked')) {\n                $('.word-header-row').show();\n            } else {\n                $('.word-header-row').hide();\n            }\n        });\n\n        $('#wordDisplayFooter').off('click').on('click', () => {\n            if ($('#wordDisplayFooter').prop('checked')) {\n                $('.word-footer-row').show();\n            } else {\n                $('.word-footer-row').hide();\n            }\n        });\n\n        $('#wordPaperSize').off('change').on('change', () => {\n            if ($('#wordPaperSize').val() == 'Custom') {\n                $('.wordPaperSizeWidths').css('display', '');\n                $('.wordPaperSizeWidths').show();\n            } else {\n                $('.wordPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#wordPaperSize').val());\n            $('#wordPaperSizeWidth').val(paperSize.width);\n            $('#wordPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getWordExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#wordOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": $('#wordPaperSize').val(),\n                \"width\": $('#wordPaperSizeWidth').val(),\n                \"height\": $('#wordPaperSizeHeight').val(),\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordTopMargin').val())),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordBottomMargin').val())),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordLeftMargin').val())),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordRightMargin').val()))\n                }\n            },\n            \"grayscale\": $('#wordGrayscale').prop('checked'),\n            \"wordCompression\": $('#wordUseCompression').prop('checked'),\n            \"outline\": $('#wordIncludeOutline').prop('checked'),\n            \"backgroundGraphics\": $('#wordPrintBackgrounds').prop('checked'),\n            \"header\": {\n                \"left\": $('#wordHeaderLeft').val(),\n                \"center\": $('#wordHeaderCenter').val(),\n                \"right\": $('#wordHeaderRight').val(),\n                \"displayHeaderLine\": $('#wordHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": $('#wordFooterLeft').val(),\n                \"center\": $('#wordFooterCenter').val(),\n                \"right\": $('#wordFooterRight').val(),\n                \"displayFooterLine\": $('#wordFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportWord() {\n\n        var thisObject = this;\n\n        $('.report-graph-canvas').hide();\n        $('.report-graph-image').show();\n\n        /**\n         * Show exporting dialog\n         */\n        var exportDialog = bootbox.dialog({\n            title: 'Export to Word',\n            message: '<p><i class=\"fas fa-spin fa-spinner\"></i> Exporting report to Word...</p>'\n        });\n\n        $.ajax({\n            type: 'post',\n            url: '/Metadocx/Convert/Word',\n            data: {\n                ExportOptions: this.getWordExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#' + this.app.viewer.report.id + '_canvas').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var blob = new Blob([data], { type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" });\n                var sContent = `Report has been converted to Word, click on button to download file<br><br>\n                <a class=\"btn btn-primary\" href=\"${window.URL.createObjectURL(blob)}\" download=\"Report.docx\" onClick=\"$('.bootbox.modal').modal('hide');\">Download report</a>`;\n\n                exportDialog.find('.bootbox-body').html(sContent);\n\n                //thisObject.hideExportDialog();\n                thisObject.app.modules.Printing.applyPageStyles();\n\n                $('.report-graph-canvas').show();\n                $('.report-graph-image').hide();\n\n            }\n        });\n    }\n\n\n}\nwindow.__Metadocx.WordModule = WordModule;\nwindow.__Metadocx.Locales.en = {\n    \"en\": \"English\",\n    \"fr\": \"French\",\n    \"Options\": \"Options\",\n    \"Orientation\": \"Orientation\",\n    \"Margins\": \"Margins\",\n    \"Top\": \"Top\",\n    \"Bottom\": \"Bottom\",\n    \"Left\": \"Left\",\n    \"Right\": \"Right\",\n    \"Inches\": \"in.\",\n    \"Cancel\": \"Cancel\",\n    \"ApplyOptions\": \"Apply Options\",\n    \"PaperSize\": \"Paper Size\",\n    \"Portrait\": \"Portrait\",\n    \"Landscape\": \"Landscape\",\n    \"Reset\": \"Reset\",\n    \"MissingReportDefinition\": \"Missing report definition\",\n    \"OupsNoReport\": \"Oups! Something went wrong. We did not get a report to load.\",\n    \"Criterias\": \"Criterias\",\n    \"ReportSettings\": \"Report Settings\",\n    \"Letter\": \"Letter\",\n    \"Legal\": \"Legal\",\n    \"Custom\": \"Custom\",\n    \"PoweredBy\": \"powered by\",\n    \"Yes\": \"Yes\",\n    \"No\": \"No\",\n    \"Equal\": \"Equal\",\n    \"NotEqual\": \"Not equal\",\n    \"GreaterThan\": \"Greater than\",\n    \"GreaterOrEqual\": \"Greater or equal\",\n    \"SmallerThan\": \"Smaller than\",\n    \"SmallerOrEqual\": \"Smaller or equal\",\n    \"Between\": \"Between\",\n    \"ApplyCriterias\": \"Apply Criterias\",\n    \"And\": \"and\",\n    \"Name\": \"Name\",\n    \"ReportName\": \"Report Name\",\n    \"ReportDescription\": \"Report Description\",\n    \"Description\": \"Description\",\n    \"ApplySettings\": \"Apply Settings\",\n    \"Fields\": \"Fields\",\n    \"Order\": \"Order\",\n    \"Groups\": \"Groups\",\n    \"ReportProperties\": \"Report Properties\",\n    \"None\": \"(None)\",\n    \"Sum\": \"Sum\",\n    \"Average\": \"Average\",\n    \"MinValue\": \"Min Value\",\n    \"MaxValue\": \"Max Value\",\n    \"Count\": \"Count\",\n    \"Ascending\": \"Ascending\",\n    \"Descending\": \"Descending\",\n    \"CoverPage\": \"Cover Page\",\n    \"Label\": \"Label\",\n    \"Width\": \"Width\",\n    \"Type\": \"Type\",\n    \"IsVisible\": \"Is Visible\",\n    \"Center\": \"Center\",\n    \"Alignment\": \"Alignment\",\n    \"SectionID\": \"Section ID\",\n    \"Default\": \"Default\",\n    \"ReportTheme\": \"Report Theme\",\n    \"CreatedAt\": \"Created At\",\n};\nwindow.__Metadocx.Locales.fr = {\n    \"en\": \"Anglais\",\n    \"fr\": \"Français\",\n    \"Options\": \"Options\",\n    \"Orientation\": \"Orientation\",\n    \"Margins\": \"Marges\",\n    \"Top\": \"Haut\",\n    \"Bottom\": \"Bas\",\n    \"Left\": \"Gauche\",\n    \"Right\": \"Droite\",\n    \"Inches\": \"pce\",\n    \"Cancel\": \"Annuler\",\n    \"ApplyOptions\": \"Appliquer options\",\n    \"PaperSize\": \"Type de papier\",\n    \"Portrait\": \"Portrait\",\n    \"Landscape\": \"Paysage\",\n    \"Reset\": \"Réinitialiser\",\n    \"MissingReportDefinition\": \"Définition de rapport manquante\",\n    \"OupsNoReport\": \"Oups ! Quelque chose s'est mal passé. Nous n'avons pas reçu de rapport à charger.\",\n    \"Criterias\": \"Critères\",\n    \"ReportSettings\": \"Paramètres du rapport\",\n    \"Letter\": \"Lettre\",\n    \"Legal\": \"Légal\",\n    \"Custom\": \"Personnalisé\",\n    \"PoweredBy\": \"propulsé par\",\n    \"Yes\": \"Oui\",\n    \"No\": \"Non\",\n    \"Equal\": \"Égale\",\n    \"NotEqual\": \"Différent\",\n    \"GreaterThan\": \"Plus grand que\",\n    \"GreaterOrEqual\": \"Plus grand ou égale\",\n    \"SmallerThan\": \"Plus petit que\",\n    \"SmallerOrEqual\": \"Plus petit ou égale\",\n    \"Between\": \"Entre\",\n    \"ApplyCriterias\": \"Appliquer les critères\",\n    \"And\": \"et\",\n    \"Name\": \"Nom\",\n    \"ReportName\": \"Nom du rapport\",\n    \"ReportDescription\": \"Description du rapport\",\n    \"Description\": \"Description\",\n    \"ApplySettings\": \"Appliquer les paramètres\",\n    \"Fields\": \"Champs\",\n    \"Order\": \"Ordre de tri\",\n    \"Groups\": \"Groupements\",\n    \"ReportProperties\": \"Propriétés du rapport\",\n    \"None\": \"(Aucun)\",\n    \"Sum\": \"Somme\",\n    \"Average\": \"Moyenne\",\n    \"MinValue\": \"Valeur minimum\",\n    \"MaxValue\": \"Valeur maximum\",\n    \"Count\": \"Quantité\",\n    \"Ascending\": \"Croissant\",\n    \"Descending\": \"Décroissant\",\n    \"CoverPage\": \"Page Couverture\",\n    \"Label\": \"Libellé\",\n    \"Width\": \"Largeur\",\n    \"Type\": \"Type\",\n    \"IsVisible\": \"Est Visible\",\n    \"Center\": \"Centré\",\n    \"Alignment\": \"Alignement\",\n    \"SectionID\": \"ID de la section\",\n    \"Default\": \"Défaut\",\n    \"ReportTheme\": \"Thème du rapport\",\n    \"CreatedAt\": \"Créé le\",\n};\n/**\n * Theme1 class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Theme1 extends Theme {\n\n    constructor(app) {\n        super(app);\n        this.colorScheme = ['#A21BBF', '#295CF0', '#007EFF', '#0093F7', '#00A0D1', '#00AA9F'];\n    }\n\n    renderCoverPage() {\n\n        var s = '';\n\n        s += `<div class=\"report-cover-page\">\n            <div class=\"report-cover-header\"></div>\n            <div class=\"report-cover-name\">${this.app.viewer.report.getReportDefinition().properties.name}</div>\n            <div class=\"report-cover-description\">${this.app.viewer.report.getReportDefinition().properties.description}</div>\n            <div class=\"report-cover-footer\"></div>\n        </div>`;\n\n        return s;\n\n    }\n\n    renderThemeCSS() {\n\n        return `\n\n            .report-cell-header {\n                background-color: #B4A8E1 !important;\n            }\n\n            .report-row-group td {\n                background-color: #B174D8 !important;\n            }\n        \n        `;\n\n    }\n\n    renderCoverPageCSS() {\n\n        return `\n\n            #reportCoverPage {\n                position:relative;\n            }\n\n            .report-cover-page {\n                height: 100%;\n            }\n\n            .report-cover-name {\n                position: absolute;\n                top: 360px;\n                font-size: 36px;\n                font-weight: bold;\n            }\n\n            .report-cover-description {\n                position: absolute;\n                top: 410px;                \n            }\n\n            .report-cover-footer {\n                height: 355px;\n                background-size: cover;\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                background-image : url('https://cdn.jsdelivr.net/gh/metadocx/reporting@main/assets/images/templates/Theme1/footer.png');\n            }\n\n            .report-cover-header {\n                height: 165px;\n                background-size: cover;\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                background-image : url('https://cdn.jsdelivr.net/gh/metadocx/reporting@main/assets/images/templates/Theme1/header.png');\n            }\n        \n        `;\n\n    }\n\n}\n\nwindow.__Metadocx.Themes.Theme1 = Theme1;\n/**\n * Theme2 class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Theme2 extends Theme {\n\n    constructor(app) {\n        super(app);\n        this.colorScheme = ['#1C85D6', '#00A8E5', '#00C5D5', '#00DEB0', '#95EF87', '#F9F871'];\n    }\n\n    renderCoverPage() {\n\n        var s = '';\n\n        s += `<div class=\"report-cover-page\">\n            <div class=\"report-cover-header\"></div>\n            <div class=\"report-cover-name\">${this.app.viewer.report.getReportDefinition().properties.name}</div>\n            <div class=\"report-cover-description\">${this.app.viewer.report.getReportDefinition().properties.description}</div>\n            <div class=\"report-cover-footer\"></div>\n            <div class=\"report-cover-date\"><span data-locale=\"CreatedAt\">Created at</span> ${moment().format('YYYY-MM-DD HH:mm')}</div>\n            <div class=\"report-cover-powered-by\"><span data-locale=\"PoweredBy\">powered by</span> <a href=\"https://www.metadocx.com\" target=\"_blank\">Metadocx</a></div>\n        </div>`;\n\n        return s;\n\n    }\n\n    renderThemeCSS() {\n\n        return `\n\n            .report-cell-header {\n                background-color: #1C85D6 !important;\n            }\n\n            .report-row-group td {\n                background-color: #7DB7E4 !important;\n            }\n        \n        `;\n\n    }\n\n    renderCoverPageCSS() {\n\n        return `\n\n            #reportCoverPage {\n                position:relative;\n            }\n\n            .report-cover-date {\n                color: #fff;\n                position:absolute;\n                left:50px;\n                bottom:50px;\n                font-size: 9pt;\n            }\n\n            .report-cover-powered-by {\n                color: #fff;\n                position:absolute;\n                right:50px;\n                bottom:50px;\n                text-align:right;\n                font-size: 9pt;\n            }\n\n            .report-cover-powered-by a {\n                color: #ffcc00;\n            }\n\n            .report-cover-powered-by a:visited {\n                color: #ffcc00;\n            }\n\n            .report-cover-page {\n                height: 100%;\n            }\n\n            .report-cover-name {\n                position: absolute;\n                top: 360px;\n                font-size: 56px;\n                font-weight: bold;\n                text-align: right;\n                right: 50px;\n            }\n\n            .report-cover-description {\n                position: absolute;                \n                top: 450px;\n                font-size: 24px;  \n                text-align: right;\n                right: 50px;         \n            }\n\n            .report-cover-footer {\n                height: 310px;\n                background-size: cover;\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                background-image : url('https://cdn.jsdelivr.net/gh/metadocx/reporting@main/assets/images/templates/Theme2/footer.png');\n            }\n\n            .orientation-landscape .report-cover-header {\n                height: 332px;\n            }\n\n            .report-cover-header {\n                height: 255px;\n                background-size: cover;\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                background-image : url('https://cdn.jsdelivr.net/gh/metadocx/reporting@main/assets/images/templates/Theme2/header.png');\n            }\n        \n        `;\n\n    }\n\n}\n\nwindow.__Metadocx.Themes.Theme2 = Theme2;\n/**\n * Metadocx reporting application bootstrap\n * This will create the global Metadocx object and check for jQuery\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nif (!window.Metadocx) {\n    window.Metadocx = new MetadocxApplication();\n}\n\n/**\n * Check for jQuery library if not available inject script tag\n */\nif (!window.jQuery) {\n    /**\n     * jQuery object does not exist, inject script tag\n     */\n    console.log('jQuery is not loaded, adding script tag');\n\n    (function (d, s, id) {\n        var js, lsjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n            console.log('Package is already loaded, skipping');\n            return;\n        }\n        js = d.createElement(s); js.id = id;\n        js.onload = function () {\n            // jQuery is loaded, call initialize on document load\n            $(function () {\n                Metadocx.initialize();\n            });\n        };\n        js.src = 'https://code.jquery.com/jquery-3.6.1.min.js';\n        js.crossOrigin = 'anonymous';\n        lsjs.parentNode.insertBefore(js, lsjs);\n    }(document, 'script', 'jquery'));\n\n} else {\n\n    // jQuery is loaded, call initialize on document load\n    $(function () {\n        Metadocx.initialize();\n    });\n}"],"file":"../metadocx.min.js"}