{"version":3,"sources":["sourceMap"],"names":["Function","_0x198841","_0x57bb07","Array","_0xe954c9","_0xd1791d","_0x2304cf","_0x1f10a8","_0x45b181","RegExp","_0xfb2737","_0x101a54","_0x5aec99","_0x538ecc","_0x36c251","_0x10bad5","ProxyHandler","_0x2baac4","_0x19348f","_0x20d29f","Proxy","_0x5a3873","_0x17142c","_0x53dc62","Metadocx","Consolable","constructor","_0x487996","arguments","console","CriteriaControl","_0x3e24bd","$","_0xd2b83c","DataTable","_0x1847f2","_0x364798","_0x175c18","_0x1e7a5e","_0xceb483","_0x27e728","_0x44899d","_0xb871e5","_0x1a2e54","_0xbb4a68","undefined","_0x2c8166","_0x44a91e","_0x16aa51","_0x45894d","_0x3df144","_0x4ccdf9","_0x41be38","_0x5b1eda","_0x2a5616","_0x5e4fcb","_0x15eaef","_0x9fc052","_0x5b5009","_0x38b049","_0x276da1","_0x1ff44e","_0x2c77e3","_0x51b695","_0x2419fb","_0x525398","_0x3afbea","_0x2c6ced","_0x4164e2","_0x49115b","numeral","_0x137a83","_0x207388","_0x1ea295","_0x2b78d8","_0x4fd071","_0x9babd8","_0x52b36b","_0x1c1743","_0xeb1743","_0x170c7d","_0x185cd5","_0x1456bc","_0x30793b","_0x3279db","_0x19220c","_0x6e596a","_0x16a029","_0x59aac7","_0x702b0b","_0x35c171","_0x55ed46","_0x4374a8","_0x2847e5","_0x5c96e1","_0xdcd7c8","_0x23202e","_0x170071","_0x35493d","_0xbbb048","_0x38ef26","_0xc359e2","parseFloat","moment","_0x1c7916","_0x3390a0","_0x2b669d","_0x156615","window","MetadocxApplication","ReportViewer","_0x3fb44f","_0x3dbab3","_0x3bf18e","_0x1821aa","document","_0x34274c","_0x5d2e24","Module","_0x456c72","ReportSection","_0x25c856","_0x35f8eb","_0x117c06","_0x327355","_0x435484","_0xcd258a","_0x53cdba","_0x36a373","_0x49aeda","_0x5b5303","_0x5dcf94","_0x4e11c9","_0x4077ed","_0x2264e2","_0x4b9403","_0x3dbdfe","_0xbd5378","_0x17ca48","_0xe8ae77","DataTableReportSection","_0x5704e6","_0x4143d7","_0x299a15","_0x5a7473","_0x416747","_0x1f910c","_0x86cd0","_0x30a58b","_0x13b6f4","_0x30e7ca","_0x1c194a","_0x1e08ef","_0x2f362b","_0x12854c","_0x1f9837","_0x2f76c0","Report","_0x2f5f53","_0x4edfb1","_0x65e994","_0x459d1f","_0x196d89","_0x11909a","_0x2323e3","_0x2f9301","_0x4f3ae9","_0x3a3b9f","_0x46440e","_0x4032a0","_0x1a490f","_0x3f0c99","_0x496e84","_0x958afa","_0x518205","_0x3f1fda","_0x4b005c","_0x5baf66","_0x155bd8","_0x1540ec","_0x118478","_0x1c7106","_0x111afc","_0x1bcc7a","_0x42644d","Object","_0x3bc62d","_0xe11f9e","_0x314134","_0x277677","_0x54cdb1","_0x563fa6","_0x56c64b","JSON","_0x5e1612","_0x3d5074","_0x1bb192","_0x2f0d65","ReportCanvas","_0x4ebe8c","_0x53b7c3","_0x51b8cc","_0x581928","_0x256ccc","_0x172d13","_0x475e84","_0x900359","_0x41b7d2","_0x41e084","_0xfec3fa","_0x54ead7","_0x1107b0","_0x2b101d","_0x2fdf7b","_0x3c1db2","_0x321b6b","_0x350c8a","bootstrap","_0x403caa","_0x31709a","_0xac252f","_0x36a78a","_0x3d4612","_0x523266","_0x1beaf6","_0x192a77","_0x165cf6","parseInt","_0x5c9f4d","_0x4ae235","_0x114b1c","_0x37a9ef","_0x475cb1","_0x54e11e","_0x4c2912","_0x21c5c1","_0x17826e","_0x455658","_0x134dce","_0x472d51","_0x3fea13","_0x3ec4e2","_0x323c53","_0x331167","_0x479df","_0x312022","_0x267d68","_0x5bd60c","_0x4e514d","_0x5e8332","_0x9c189","_0x255ff4","_0x529929","_0x4c0b26","BooleanCriteria","_0x84ce8a","_0x69de71","_0x5a4068","_0x37dd25","CheckboxCriteria","_0x34ca70","_0x300a1f","_0x38472f","_0x12b1a9","_0x4de45e","_0x5c120f","_0x26f6eb","_0x102620","_0x346758","_0x3f2755","_0x38db44","_0x4afe2c","_0x3dd59a","_0x1f6793","_0x2961ea","_0x482632","_0x8e12b3","_0x2fefb5","_0x2dcf25","DatePeriodCriteria","_0xac8b3f","_0x3f83c8","_0x21fbd4","_0x3bb665","NumericCriteria","_0x416c97","_0x2c52bb","SelectCriteria","_0x2dbfe1","_0x3d425a","_0x44830d","_0x74c277","_0x49e933","_0x2d2c10","_0x2f06a0","_0x21d165","_0x5d1f8d","_0x14d32b","BrowserModule","_0x28c0c6","navigator","InstallTrigger","ConsoleModule","_0x540dda","_0x3e4ea4","_0x2d8c98","_0x21fa49","_0x34b68a","_0x278799","_0x3f89a6","_0x4a4a8a","_0x217d13","_0x35d57d","_0x26ef49","_0x1ad88c","DataTypeModule","_0x59999f","_0x35767c","String","_0x259c64","Number","_0x319fca","_0x5c10a7","_0xbbda","ExcelModule","_0x536582","_0x5dc273","_0x5ce964","_0x6d9023","btoa","unescape","encodeURIComponent","_0x26b076","_0x4b913a","_0x7cc2f5","_0x24cef6","Blob","_0x9dc5c0","FormatModule","_0x4f67dd","_0x273afb","_0x276a83","_0x59f577","_0x500ea4","ImportModule","_0x41d893","_0x1d0a1e","_0x7fa1f9","_0x6bd273","_0x2a76d7","_0x4107cd","_0x1295b1","_0x40c88d","id","_0x2dba6a","_0x24ab9a","_0x4fa45e","_0x2d56d9","_0x382b03","_0x3725c4","_0x17e2a7","PDFModule","_0x26a579","_0x443185","_0xbcf386","_0x5500d7","_0x1b24be","_0x563aa4","_0x760548","_0x433fba","_0x1dcba3","_0x19c473","_0x564db1","_0x42b601","_0x599fce","_0x1b976d","_0x669be7","_0x473710","_0x183373","_0x25bd33","_0x14b860","_0x33b47a","_0x5bdfbb","_0x204868","_0x15dde3","_0x2f0159","_0x43b5fa","bootbox","_0x5980f2","_0x56a1b4","_0x5dbe90","_0x4e9cce","_0x56cac6","_0x293024","_0x3ed8d9","_0x45c971","_0x422965","_0x4b3090","_0x132942","_0x498d41","_0x4b4dc9","PrintingModule","_0x30f0e7","_0x231b58","_0x3aa0bb","_0x4b4383","_0x3aeb18","_0x13efbb","_0x111764","_0x242563","UIModule","_0x56520a","_0x4df9c2","_0x37d4e8","_0x243601","_0x3a5b0f","_0x1212bd","WordModule","_0xe85985","_0x233902","_0x1280ce","_0x32f205","_0x414d79","_0x8de0dc","_0x4aa06d","_0x24a795","_0x51fc44","_0x3a7394","_0x380490","_0x2f3df5","_0x16610a","_0x4d8fd3"],"mappings":"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","sourcesContent":["/**\n * Copied from https://stackoverflow.com/questions/7395686/how-can-i-serialize-a-function-in-javascript/51123745#51123745\n */\nFunction.deserialise = function (key, data) {\n    return (data instanceof Array && data[0] == 'window.Function') ?\n        new (Function.bind.apply(Function, [Function].concat(data[1], [data[2]]))) :\n        data\n        ;\n};\nFunction.prototype.toJSON = function () {\n    var whitespace = /\\s/;\n    var pair = /\\(\\)|\\[\\]|\\{\\}/;\n\n    var args = new Array();\n    var string = this.toString();\n\n    var fat = (new RegExp(\n        '^s*(' +\n        ((this.name) ? this.name + '|' : '') +\n        'function' +\n        ')[^)]*\\\\('\n    )).test(string);\n\n    var state = 'start';\n    var depth = new Array();\n    var tmp;\n\n    for (var index = 0; index < string.length; ++index) {\n        var ch = string[index];\n\n        switch (state) {\n            case 'start':\n                if (whitespace.test(ch) || (fat && ch != '('))\n                    continue;\n\n                if (ch == '(') {\n                    state = 'arg';\n                    tmp = index + 1;\n                }\n                else {\n                    state = 'singleArg';\n                    tmp = index;\n                }\n                break;\n\n            case 'arg':\n            case 'singleArg':\n                var escaped = depth.length > 0 && depth[depth.length - 1] == '\\\\';\n                if (escaped) {\n                    depth.pop();\n                    continue;\n                }\n                if (whitespace.test(ch))\n                    continue;\n\n                switch (ch) {\n                    case '\\\\':\n                        depth.push(ch);\n                        break;\n\n                    case ']':\n                    case '}':\n                    case ')':\n                        if (depth.length > 0) {\n                            if (pair.test(depth[depth.length - 1] + ch))\n                                depth.pop();\n                            continue;\n                        }\n                        if (state == 'singleArg')\n                            throw '';\n                        args.push(string.substring(tmp, index).trim());\n                        state = (fat) ? 'body' : 'arrow';\n                        break;\n\n                    case ',':\n                        if (depth.length > 0)\n                            continue;\n                        if (state == 'singleArg')\n                            throw '';\n                        args.push(string.substring(tmp, index).trim());\n                        tmp = index + 1;\n                        break;\n\n                    case '>':\n                        if (depth.length > 0)\n                            continue;\n                        if (string[index - 1] != '=')\n                            continue;\n                        if (state == 'arg')\n                            throw '';\n                        args.push(string.substring(tmp, index - 1).trim());\n                        state = 'body';\n                        break;\n\n                    case '{':\n                    case '[':\n                    case '(':\n                        if (\n                            depth.length < 1 ||\n                            !(depth[depth.length - 1] == '\"' || depth[depth.length - 1] == '\\'')\n                        )\n                            depth.push(ch);\n                        break;\n\n                    case '\"':\n                        if (depth.length < 1)\n                            depth.push(ch);\n                        else if (depth[depth.length - 1] == '\"')\n                            depth.pop();\n                        break;\n                    case '\\'':\n                        if (depth.length < 1)\n                            depth.push(ch);\n                        else if (depth[depth.length - 1] == '\\'')\n                            depth.pop();\n                        break;\n                }\n                break;\n\n            case 'arrow':\n                if (whitespace.test(ch))\n                    continue;\n                if (ch != '=')\n                    throw '';\n                if (string[++index] != '>')\n                    throw '';\n                state = 'body';\n                break;\n\n            case 'body':\n                if (whitespace.test(ch))\n                    continue;\n                string = string.substring(index);\n\n                if (ch == '{')\n                    string = string.replace(/^{\\s*(.*)\\s*}\\s*$/, '$1');\n                else\n                    string = 'return ' + string.trim();\n\n                index = string.length;\n                break;\n\n            default:\n                throw '';\n        }\n    }\n\n    return ['window.Function', args, string];\n};\n/**\n * Copied from https://stackoverflow.com/a/50723478/2277399\n */\nconst ProxyHandler = {\n    get(target, key) {\n        if (key == 'isProxy')\n            return true;\n\n        const prop = target[key];\n\n        // return if property not found\n        if (typeof prop == 'undefined')\n            return;\n\n        // set value as proxy if object\n        if (!prop.isProxy && typeof prop === 'object')\n            target[key] = new Proxy(prop, ProxyHandler);\n\n        return target[key];\n    },\n    set(target, key, value) {\n\n        target[key] = value;\n        Metadocx.viewer.applyReportViewerOptions();\n        return true;\n    }\n};\n/** \n * Consolable\n * \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Consolable {\n\n    constructor(app) {\n\n        /**\n         * Main app reference\n         */\n        this.app = app;\n        /**\n         * If console is enabled or not\n         */\n        this.debugEnabled = true;\n        /**\n         * Name to display in tag, class name by default\n         */\n        this.tag = this.constructor.name;\n        /**\n        * Console text color and backcolor for title\n        */\n        this.consoleColor = '#fff';\n        this.consoleBackColor = 'blue';\n    }\n\n    /**\n    * Console log with module tag and color\n    */\n    log() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.log.apply(this.app.modules.Console, arguments);\n        } else {\n            console.log.apply(null, arguments);\n        }\n    }\n\n\n    /**\n     * Console debug with module tag and color\n     */\n    debug() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.debug.apply(this.app.modules.Console, arguments);\n        } else {\n            console.debug.apply(null, arguments);\n        }\n    }\n\n    /**\n     * Console debug with module tag and color\n     */\n    error() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.error.apply(this.app.modules.Console, arguments);\n        } else {\n            console.error.apply(null, arguments);\n        }\n    }\n\n    /**\n     * Console debug with module tag and color\n     */\n    warn() {\n        if (!this.debugEnabled) {\n            return;\n        }\n        if (this.app && this.app.modules.Console) {\n            this.app.modules.Console.setTag(this.tag);\n            this.app.modules.Console.setColor(this.consoleColor, this.consoleBackColor);\n            this.app.modules.Console.warn.apply(this.app.modules.Console, arguments);\n        } else {\n            console.warn.apply(null, arguments);\n        }\n    }\n\n}\n\n/** \n * CriteriaControl base class for all criteria controls\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass CriteriaControl {\n\n    constructor(app) {\n        this.id = null;\n        this.app = app;\n        this.reportCriteria = null;\n        this._instance = null;\n    }\n\n    /**\n     * Initializes any javascript code for this criteria\n     * Sets JS object (if any) to this._instance\n     */\n    initializeJS() { }\n\n    /**\n     * Renders the criterias HTML code\n     */\n    render() { }\n\n    /**\n     * Returns current JS instance of criteria UX component\n     * For example select2 or daterangepicker objects\n     * @returns object\n     */\n    getInstance() {\n        return this._instance;\n    }\n\n    /**\n     * Returns if criteria is enabled by user\n     * @returns bool\n     */\n    getIsEnabled() {\n        return $('#criteriaEnabled_' + this.id).prop('checked');\n    }\n\n    /**\n     * Returns criteria value\n     * @returns mixed\n     */\n    getValue() { return null; }\n\n    /**\n     * Sets criteria value\n     * @param {*} v \n     */\n    setValue(v) {\n        // must overload this function\n    }\n\n}\n\n/** \n * DataTable renders a report section table\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier. \n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTable {\n\n    constructor(app) {\n        /**\n         * Table id\n         */\n        this.id = null;\n        /**\n         * Metadocx App object\n         */\n        this.app = app;\n        /**\n         * Model, column definition\n         */\n        this.model = [];\n        /**\n         * Data to display\n         */\n        this.data = [];\n        /**\n         * Order by settings\n         */\n        this.orderBy = [];\n        /**\n         * Group by settings\n         */\n        this.groupBy = [];\n        /**\n         * Report criterias\n         */\n        this.criterias = [];\n        /**\n         * Report criteria values\n         */\n        this.criteriaValues = null;\n        /**\n         * Group by counter objects\n         */\n        this.groupCounters = {};\n        /**\n         * Grand total counter object\n         */\n        this.grandTotal = {};\n    }\n\n    /**\n     * Called before the table HTML is rendered\n     */\n    preRender() {\n\n    }\n\n    /**\n     * Called after the table HTML is rendered\n     */\n    postRender() {\n\n    }\n\n    /**\n     * Returns a column from the model based on it's name\n     * @param {*} name \n     * @returns object\n     */\n    getColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return this.model[x];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Updates model column\n     * @param {*} name \n     * @param {*} col \n     * @returns boolean\n     */\n    setColumn(name, col) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                this.model[x] = col;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks if model has a column\n     * @param {*} name \n     * @returns boolean\n     */\n    hasColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks if column is visible or not\n     * @param {*} name \n     * @returns boolean\n     */\n    isColumnVisible(name) {\n        if (this.hasColumn(name)) {\n            var column = this.getColumn(name);\n            if (column.visible == undefined) {\n                // visible by default\n                return true;\n            } else if (column.visible) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Hide a column\n     * @param {*} name \n     */\n    hideColumn(name) {\n        for (var x in this.model) {\n            if (this.model[x].name == name) {\n                this.model[x].visible = false;\n            }\n        }\n    }\n\n    /**\n     * Renders table html\n     * @returns string\n     */\n    render() {\n        this.preRender();\n\n        this.groupCounters = [];\n        this.grandTotal = {\n            values: this.buildGroupCounters(),\n            minValues: this.buildGroupCounters(null),\n            maxValues: this.buildGroupCounters(null),\n            count: 0,\n            getSum: function (name) { return this.values[name]; },\n            getAvg: function (name) { if (this.count != 0) { return this.values[name] / this.count; } else { return 0; } },\n            getCount: function () { return this.count; },\n            getMin: function (name) { return this.minValues[name]; },\n            getMax: function (name) { return this.maxValues[name]; }\n        }\n\n        var s = '';\n        s += '<table id=\"' + this.id + '\" class=\"table table-bordered table-hover table-report-section\" data-report-section-id=\"' + this.id + '\">';\n\n        /**\n         * HEADER ROW\n         */\n        s += '<thead>';\n        s += '<tr class=\"report-row-header\">';\n        for (var y in this.model) {\n            var cellModel = this.model[y];\n            var cellStyle = 'font-weight:bold;';\n            if (cellModel['align']) {\n                cellStyle += 'text-align:' + cellModel['align'] + ';';\n            }\n            if (cellModel['width']) {\n                cellStyle += 'width:' + cellModel['width'] + 'px;';\n            }\n            if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                s += '<td class=\"report-cell-header\" style=\"' + cellStyle + '\">' + this.model[y].label + '</td>';\n            }\n        }\n        s += '</tr>';\n        s += '</thead>';\n\n        /**\n         * DATA ROWS\n         */\n        s += '<tbody>';\n        this.filter();\n        this.sort();\n        var previousRow = null;\n        for (var x in this.data) {\n            var row = this.data[x];\n            if (!row['__visible']) {\n                continue;\n            }\n            s += this.renderGroupHeader(row, previousRow);\n\n            s += '<tr class=\"report-row-data\">';\n            for (var y in this.model) {\n                var cellStyle = '';\n                var cellModel = this.model[y];\n                var cellValue = row[this.model[y].name];\n                var cellDisplayValue = cellValue;\n\n                if (cellModel['align']) {\n                    cellStyle += 'text-align:' + cellModel['align'] + ';';\n                }\n\n                /**\n                 * Format numeric values\n                 */\n                cellDisplayValue = this.app.modules.Format.format(cellValue, cellModel['type'], cellModel['format']);\n\n                if (cellModel[\"visible\"] !== false) {\n                    s += '<td class=\"report-cell-data\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                }\n            }\n            s += '</tr>';\n\n            previousRow = row;\n        }\n\n        s += this.closeAllGroups();\n\n        s += '</tbody>';\n\n        s += '</table>';\n\n        this.postRender();\n\n        return s;\n\n    }\n\n    /**\n     * Renders group by sub total lines \n     * @param {*} row \n     * @param {*} previousRow \n     * @returns string\n     */\n    renderGroupHeader(row, previousRow) {\n\n        if (!this.groupBy || this.groupBy.length <= 0) {\n            // nothing to do\n            return '';\n        }\n\n        var s = '';\n\n        /**\n         * Check first if we must close group in reverse order\n         */\n        for (var nLevel = this.getLevelCount(); nLevel >= 1; nLevel--) {\n\n            if (previousRow == null || previousRow[this.groupCounters['level' + nLevel].name] != row[this.groupCounters['level' + nLevel].name]) {\n\n                /**\n                 * Close previous group with same level\n                 */\n                if (this.groupCounters['level' + nLevel]) {\n                    // Level exists close it\n                    s += `<tr class=\"report-row-group-footer\" data-close-level=\"${nLevel}\">`;\n                    for (var y in this.model) {\n\n                        var cellModel = this.model[y];\n                        var cellStyle = 'font-weight:bold;';\n                        var cellValue = ''\n                        var cellDisplayValue = '';\n\n                        if (cellModel['align']) {\n                            cellStyle += 'text-align:' + cellModel['align'] + ';';\n                        }\n                        if (cellModel['width']) {\n                            cellStyle += 'width:' + cellModel['width'] + ';';\n                        }\n\n                        if (this.groupCounters['level' + nLevel].values[cellModel.name] != undefined) {\n                            if (cellModel['formula'] != undefined && cellModel['formula'] != '') {\n                                switch (cellModel['formula']) {\n                                    case 'SUM':\n                                        cellValue = this.groupCounters['level' + nLevel].getSum(cellModel.name);\n                                        break;\n                                    case 'AVG':\n                                        cellValue = this.groupCounters['level' + nLevel].getAvg(cellModel.name);\n                                        break;\n                                    case 'COUNT':\n                                        cellValue = this.groupCounters['level' + nLevel].getCount(cellModel.name);\n                                        break;\n                                    case 'MIN':\n                                        cellValue = this.groupCounters['level' + nLevel].getMin(cellModel.name);\n                                        break;\n                                    case 'MAX':\n                                        cellValue = this.groupCounters['level' + nLevel].getMax(cellModel.name);\n                                        break;\n                                }\n                            } else {\n                                //cellValue = this.groupCounters['level' + nLevel].values[cellModel.name];\n                                cellValue = '';\n                                cellDisplayValue = '';\n                            }\n\n                            if (cellModel['type'] == 'number' && cellModel['format'] != undefined && cellModel['format'] != '') {\n                                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                            } else if (cellModel['formula'] == 'COUNT' && cellModel['format'] != undefined && cellModel['format'] != '') {\n                                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                            } else {\n                                cellDisplayValue = cellValue;\n                            }\n\n                        } else {\n                            cellValue = '';\n                            cellDisplayValue = '';\n                        }\n\n                        if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                            s += '<td class=\"report-row-group-footer-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                        }\n                    }\n                    s += `</tr>`;\n                    this.groupCounters['level' + nLevel] = null;\n                }\n\n            }\n\n        }\n\n        /**\n         * Check if we start new groups\n         */\n        var nLevel = 1;\n        for (var x in this.groupBy) {\n\n            if (previousRow == null || previousRow[this.groupBy[x].name] != row[this.groupBy[x].name]) {\n\n                s += `<tr class=\"report-row-group row-group-level-${nLevel}\" data-table-group-level=\"${nLevel}\">\n                    <td colspan=\"100%\">${row[this.groupBy[x].name]}</td>\n                </tr>`;\n\n                this.groupCounters['level' + nLevel] = {\n                    level: nLevel,\n                    name: this.groupBy[x].name,\n                    values: this.buildGroupCounters(),\n                    minValues: this.buildGroupCounters(null),\n                    maxValues: this.buildGroupCounters(null),\n                    count: 0,\n                    getSum: function (name) { return this.values[name]; },\n                    getAvg: function (name) { if (this.count != 0) { return this.values[name] / this.count; } else { return 0; } },\n                    getCount: function () { return this.count; },\n                    getMin: function (name) { return this.minValues[name]; },\n                    getMax: function (name) { return this.maxValues[name]; }\n                };\n\n\n            }\n\n            nLevel++;\n\n        }\n\n\n        for (var x in this.groupCounters) {\n            this.groupCounters[x].count++;\n            this.grandTotal.count++;\n            for (var y in this.model) {\n                if (this.model[y].formula) {\n                    if (this.model[y].type == 'number') {\n                        this.groupCounters[x].values[this.model[y].name] += this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n\n                        // Set minimum value\n                        if (this.groupCounters[x].minValues[this.model[y].name] == null || this.groupCounters[x].minValues[this.model[y].name] > this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.groupCounters[x].minValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                        // Set maximum value\n                        if (this.groupCounters[x].maxValues[this.model[y].name] == null || this.groupCounters[x].maxValues[this.model[y].name] < this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.groupCounters[x].maxValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n\n                        // GRAND TOTAL\n\n                        this.grandTotal.values[this.model[y].name] += this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        // Set minimum value\n                        if (this.grandTotal.minValues[this.model[y].name] == null || this.grandTotal.minValues[this.model[y].name] > this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.grandTotal.minValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                        // Set maximum value\n                        if (this.grandTotal.maxValues[this.model[y].name] == null || this.grandTotal.maxValues[this.model[y].name] < this.app.modules.DataType.parseFloat(row[this.model[y].name])) {\n                            this.grandTotal.maxValues[this.model[y].name] = this.app.modules.DataType.parseFloat(row[this.model[y].name]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return s;\n\n\n    }\n\n    /**\n     * Closes all group sections and renders grand total line\n     * @returns string\n     */\n    closeAllGroups() {\n        if (!this.groupBy || this.groupBy.length <= 0) {\n            // nothing to do\n            return '';\n        }\n\n        var s = '';\n\n        /**\n         * Check first if we must close group in reverse order\n         */\n        for (var nLevel = this.getLevelCount(); nLevel >= 1; nLevel--) {\n\n            /**\n             * Close previous group with same level\n             */\n            if (this.groupCounters['level' + nLevel]) {\n                // Level exists close it\n                s += `<tr class=\"report-row-group-footer\" data-close-level=\"${nLevel}\">`;\n                for (var y in this.model) {\n                    var cellModel = this.model[y];\n                    var cellStyle = 'font-weight:bold;';\n                    var cellValue = '&nbsp;'\n                    var cellDisplayValue = '';\n                    if (cellModel['align']) {\n                        cellStyle += 'text-align:' + cellModel['align'] + ';';\n                    }\n                    if (cellModel['width']) {\n                        cellStyle += 'width:' + cellModel['width'] + ';';\n                    }\n\n                    if (this.groupCounters['level' + nLevel].values[cellModel.name] != undefined) {\n                        if (cellModel['formula']) {\n                            switch (cellModel['formula']) {\n                                case 'SUM':\n                                    cellValue = this.groupCounters['level' + nLevel].getSum(cellModel.name);\n                                    break;\n                                case 'AVG':\n                                    cellValue = this.groupCounters['level' + nLevel].getAvg(cellModel.name);\n                                    break;\n                                case 'COUNT':\n                                    cellValue = this.groupCounters['level' + nLevel].getCount(cellModel.name);\n                                    break;\n                                case 'MIN':\n                                    cellValue = this.groupCounters['level' + nLevel].getMin(cellModel.name);\n                                    break;\n                                case 'MAX':\n                                    cellValue = this.groupCounters['level' + nLevel].getMax(cellModel.name);\n                                    break;\n                            }\n                        } else {\n                            cellValue = this.groupCounters['level' + nLevel].values[cellModel.name];\n                        }\n\n                    }\n\n                    if (cellModel['type'] == 'number' && cellModel['format'] != undefined) {\n                        cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                    } else if (cellModel['formula'] == 'COUNT' && cellModel['format'] != undefined) {\n                        cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n                    } else {\n                        cellDisplayValue = cellValue;\n                    }\n\n                    if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                        s += '<td class=\"report-row-group-footer-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n                    }\n                }\n                s += `</tr>`;\n                this.groupCounters['level' + nLevel] = null;\n            }\n\n        }\n\n        /**\n         * Add grand total\n         */\n        s += `<tr class=\"report-row-grand-total\" data-close-level=\"${nLevel}\">`;\n        for (var y in this.model) {\n            var cellModel = this.model[y];\n            var cellStyle = 'font-weight:bold;';\n            var cellValue = '&nbsp;'\n            var cellDisplayValue = '';\n            if (cellModel['align']) {\n                cellStyle += 'text-align:' + cellModel['align'] + ';';\n            }\n            if (cellModel['width']) {\n                cellStyle += 'width:' + cellModel['width'] + ';';\n            }\n\n\n            if (this.grandTotal.values[cellModel.name] != undefined) {\n                if (cellModel['formula']) {\n                    switch (cellModel['formula']) {\n                        case 'SUM':\n                            cellValue = this.grandTotal.getSum(cellModel.name);\n                            break;\n                        case 'AVG':\n                            cellValue = this.grandTotal.getAvg(cellModel.name);\n                            break;\n                        case 'COUNT':\n                            cellValue = this.grandTotal.getCount(cellModel.name);\n                            break;\n                        case 'MIN':\n                            cellValue = this.grandTotal.getMin(cellModel.name);\n                            break;\n                        case 'MAX':\n                            cellValue = this.grandTotal.getMax(cellModel.name);\n                            break;\n                    }\n                } else {\n                    cellValue = this.grandTotal.values[cellModel.name];\n                }\n\n            }\n\n            if (cellModel['type'] == 'number' && cellModel['format']) {\n                cellDisplayValue = numeral(cellValue).format(cellModel['format']);\n            } else {\n                cellDisplayValue = cellValue;\n            }\n\n            if (cellModel[\"visible\"] == undefined || cellModel[\"visible\"]) {\n                s += '<td class=\"report-row-grand-total-cell\" style=\"' + cellStyle + '\">' + cellDisplayValue + '</td>';\n            }\n        }\n        s += `</tr>`;\n\n        return s;\n    }\n\n    /**\n     * Build group by counters object based on formulas defined in model\n     * @param {*} defaultValue \n     * @returns object\n     */\n    buildGroupCounters(defaultValue) {\n        if (defaultValue === undefined) {\n            defaultValue = 0;\n        }\n        var counters = {};\n        for (var x in this.model) {\n            if (this.model[x].formula !== undefined && this.model[x].formula !== '') {\n                counters[this.model[x].name] = defaultValue;\n            }\n        }\n        return counters;\n    }\n\n    /**\n     * Returns number of grop by levels currently open\n     * @returns int\n     */\n    getLevelCount() {\n        var nCount = 0;\n        for (var x in this.groupCounters) {\n            if (this.groupCounters[x]) { nCount++; }\n        }\n        return nCount;\n    }\n\n    /**\n     * Filter model data using criteria values\n     */\n    filter() {\n\n        /**\n         * Make all rows visible\n         */\n        for (var x in this.data) {\n            this.data[x]['__visible'] = true;\n        }\n\n        var aCriterias = this.criterias;\n        for (var x in aCriterias) {\n\n            /**\n             * Check if criterias is enabled\n             */\n            if (!$('#criteriaEnabled_' + aCriterias[x].id).prop('checked')) {\n                continue;\n            }\n\n\n\n            for (var r in this.data) {\n                for (var a in aCriterias[x].applyTo) {\n\n                    if (this.hasColumn(aCriterias[x].applyTo[a].field)) {\n\n                        var criteriaValue = this.app.viewer.getCriteriaValue(aCriterias[x].id);\n\n                        switch (aCriterias[x].type) {\n                            case 'DatePeriodCriteria':\n                                if (this.data[r][aCriterias[x].applyTo[a].field] != criteriaValue.value) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                            case 'SelectCriteria':\n                                var selectedItems = criteriaValue.value;\n                                var bFound = false;\n                                for (var v in selectedItems) {\n                                    if (this.data[r][aCriterias[x].applyTo[a].field] == selectedItems[v].text) {\n                                        bFound = true;\n                                    }\n                                }\n                                if (!bFound) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                            case 'BooleanCriteria':\n                                if (criteriaValue.value !== 'ALL') {\n                                    if (this.app.modules.DataType.toBool(this.data[r][aCriterias[x].applyTo[a].field]) != this.app.modules.DataType.toBool(criteriaValue.value)) {\n                                        this.data[r]['__visible'] = false;\n                                    }\n                                }\n\n                                break;\n                            case 'NumericCriteria':\n                                if (this.data[r][aCriterias[x].applyTo[a].field] != criteriaValue.value) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                            case 'CheckboxCriteria':\n                                if (criteriaValue.value.indexOf(this.data[r][aCriterias[x].applyTo[a].field]) === -1) {\n                                    this.data[r]['__visible'] = false;\n                                }\n                                break;\n                        }\n\n                    }\n\n                }\n\n\n\n            }\n\n        }\n\n    }\n\n\n    /**\n     * Sorts report data based on orderBy criterias of report section\n     * @param {*} report \n     * @param {*} reportSection \n     */\n    sort() {\n\n\n        this.data.sort((a, b) => {\n\n            for (var x in this.groupBy) {\n\n                var column = this.getColumn(this.groupBy[x].name)\n                var aValue = a[this.groupBy[x].name];\n                var bValue = b[this.groupBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.groupBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            for (var x in this.orderBy) {\n\n                var column = this.getColumn(this.orderBy[x].name)\n                var aValue = a[this.orderBy[x].name];\n                var bValue = b[this.orderBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.orderBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            return 0;\n\n        });\n\n\n\n    }\n\n    /**\n     * Returns order by \n     * @param {*} name \n     * @returns object\n     */\n    getOrderBy(name) {\n        if (this.orderBy) {\n            for (var x in this.orderBy) {\n                if (this.orderBy[x].name == name) {\n                    return this.orderBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns group by\n     * @param {*} name \n     * @returns object\n     */\n    getGroupBy(name) {\n        if (this.groupBy) {\n            for (var x in this.groupBy) {\n                if (this.groupBy[x].name == name) {\n                    return this.groupBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n}\n/**\n * Metadocx application\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nwindow.__Metadocx = {};\n\nclass MetadocxApplication {\n\n    constructor() {\n\n        /**\n         * Metadocx version\n         */\n        this.version = '0.1.0';\n\n        /**\n         * Application modules \n         * \n         * All Module classes will be instanciated and \n         * loaded in this property for easy access\n         */\n        this.modules = {};\n\n        /**\n         * Array of callbacks that will be called after modules are loaded\n         */\n        this.onInitializeCallbacks = [];\n\n        /**\n         * The script tag that loaded this script\n         * Used to pass parameters to the script directly in the DOM\n         */\n        this.scriptTag = null;\n\n        /**\n         * ReportViewer instance\n         */\n        this.viewer = new ReportViewer(this);\n\n    }\n\n    /**\n     * Initializes application, this is the starting point of the app\n     */\n    initialize() {\n\n        /**\n         * Scan script tag data- attributes for options\n         */\n        this.loadScriptTagOptions();\n\n\n        /**\n         * MODULES \n         * \n         * List available modules in Metadocx namespace \n         */\n        var aModules = [];\n        for (var x in window.__Metadocx) {\n            if (x.endsWith('Module')) {\n                aModules.push(new window.__Metadocx[x](this));\n            }\n        }\n        /**\n         * Sort boot priority of modules and register them\n         */\n        aModules.sort((a, b) => {\n            if (a.bootPriority < b.bootPriority) { return -1; }\n            if (a.bootPriority > b.bootPriority) { return 1; }\n            return 0;\n        });\n\n        /**\n         * Initialize modules\n         */\n        console.groupCollapsed('[Metadocx] Modules initialization');\n        for (var x in aModules) {\n            this.registerModule(aModules[x]);\n        }\n        console.groupEnd();\n\n        /**\n         * Call other initialize callback scripts\n         */\n        for (var x in this.onInitializeCallbacks) {\n            this.onInitializeCallbacks[x]();\n        }\n\n        /**\n         * REQUIRED LIBRARIES \n         * Event once all libraries are loaded (if injected)\n         */\n        this.modules.Import.onLibrairiesLoaded = () => {\n            /**\n            * Build report view interface\n            */\n            this.modules.UI.renderReportViewer(this);\n\n            if (this.viewer.options.report) {\n                this.viewer.load(this.viewer.options.report);\n            } else {\n                this.viewer.showNoReportAlert();\n            }\n        }\n        /**\n         * Inject required js and css files\n         */\n        this.modules.Import.injectRequiredLibraries();\n\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            }\n        });\n\n    }\n\n    /**\n     * Gets script tag data attributes and applies them to report options\n     */\n    loadScriptTagOptions() {\n\n        this.scriptTag = document.querySelector('script[src$=\"metadocx.js\"]');\n        if (this.scriptTag == null) {\n            this.scriptTag = document.querySelector('script[src$=\"metadocx.min.js\"]');\n        }\n\n        for (var x in this.scriptTag.dataset) {\n            this.viewer.options[x] = this.scriptTag.dataset[x];\n        }\n\n        /**\n         * Check if we have a name if not set default value\n         */\n        if (!this.viewer.options.id) {\n            this.viewer.options.id = \"metadocxReport\";\n        }\n\n        if (!this.viewer.options.container) {\n            this.viewer.options.container = \"root\";\n        }\n\n    }\n\n\n    /**\n     * Adds module to Metadocx object and initializes the module\n     * @param {*} oModule \n     */\n    registerModule(oModule) {\n        this.modules[oModule.name] = oModule;\n        oModule.initialize();\n        oModule.app = this;\n    }\n\n\n}\n/** \n * Application Module\n * \n * Modules classes can be loaded using boot priority and \n * will be made available in Metadocx.module property\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Module extends Consolable {\n\n    constructor(app) {\n\n        super(app);\n\n        /**\n         * Set name of module, remove the Module suffix to the class name\n         * Modules will be added in Metadocx.modules \n         */\n        this.name = this.constructor.name.replace(/Module$/, '');\n        this.tag = this.constructor.name.replace(/Module$/, '');\n        /**\n         * Indicates if the module has been initialized or not\n         */\n        this.isInitialized = false;\n\n        /**\n         * Modules will be loaded using bootPriority from lowest to highest\n         * This allows us to load modules in a specific order if needed\n         */\n        this.bootPriority = 1000;\n\n        /**\n         * Reference to Metadocx application\n         */\n        this.app = app;\n\n    }\n\n    /**\n     * Initialize module     \n     */\n    initialize() {\n        if (this.isInitialized) {\n            return;\n        }\n        this.isInitialized = true;\n\n        this.log('Initializing module ' + this.name);\n    }\n\n}\n/** \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportSection {\n\n    constructor(app, reportSection) {\n        /**\n         * Main app reference\n         */\n        this.app = app;\n        /**\n         * Types of report sections\n         */\n        this.ReportSectionTypes = {\n            DataTable: 'DataTable',\n            Graph: 'Graph',\n            HTML: 'HTML'\n        }\n        this.type = reportSection.type;\n        this.reportSection = reportSection;\n        this.preRender();\n    }\n\n    preRender() {\n    }\n\n\n\n    render() {\n\n    }\n\n\n\n\n    getApplicableReportCriterias() {\n        var applicableCriterias = [];\n        var criterias = this.app.viewer.report.getReportDefinition().criterias;\n        for (var x in criterias) {\n            var criteria = criterias[x];\n            for (var y in criteria.applyTo) {\n                if (criteria.applyTo[y].section == this.reportSection.id) {\n                    applicableCriterias.push(criteria);\n                }\n            }\n        }\n\n        return applicableCriterias;\n    }\n\n    criteriaAppliesToReportSection(criteria) {\n        for (var x in criteria.applyTo) {\n            if (criteria.applyTo[x].section == this.reportSection.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sorts report data based on orderBy criterias of report section\n     * @param {*} report \n     * @param {*} reportSection \n     */\n    sort() {\n\n\n        this.reportSection.data.sort((a, b) => {\n\n            for (var x in this.reportSection.groupBy) {\n\n                var column = this.getColumn(this.reportSection.groupBy[x].name)\n                var aValue = a[this.reportSection.groupBy[x].name];\n                var bValue = b[this.reportSection.groupBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.reportSection.groupBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            for (var x in this.reportSection.orderBy) {\n\n                var column = this.getColumn(this.reportSection.orderBy[x].name)\n                var aValue = a[this.reportSection.orderBy[x].name];\n                var bValue = b[this.reportSection.orderBy[x].name];\n\n                switch (column.type) {\n                    case 'number':\n                        aValue = parseFloat(aValue);\n                        bValue = parseFloat(bValue);\n                        break;\n                    case 'date':\n                        aValue = moment(aValue).format('YYYY-MM-DD');\n                        bValue = moment(bValue).format('YYYY-MM-DD');\n                        break;\n                }\n\n                if (this.reportSection.orderBy[x].order.toString().toLowerCase().trim() == 'desc') {\n                    if (aValue > bValue) {\n                        return -1;\n                    }\n                    if (aValue < bValue) {\n                        return 1;\n                    }\n                } else {\n                    if (aValue < bValue) {\n                        return -1;\n                    }\n                    if (aValue > bValue) {\n                        return 1;\n                    }\n                }\n            }\n\n            return 0;\n\n        });\n\n\n\n    }\n\n    getOrderBy(name) {\n        if (this.reportSection.orderBy) {\n            for (var x in this.reportSection.orderBy) {\n                if (this.reportSection.orderBy[x].name == name) {\n                    return this.reportSection.orderBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getGroupBy(name) {\n        if (this.reportSection.groupBy) {\n            for (var x in this.reportSection.groupBy) {\n                if (this.reportSection.groupBy[x].name == name) {\n                    return this.reportSection.groupBy[x];\n                }\n            }\n        }\n\n        return null;\n    }\n\n\n\n}\nwindow.__Metadocx.ReportSection = ReportSection;\n/** \n * DataTable Report section\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTableReportSection extends ReportSection {\n\n    constructor(app, report, reportSection) {\n        super(app, report, reportSection);\n    }\n\n\n    render() {\n\n        var oTable = new DataTable(this.app);\n        oTable.id = 'ReportSection_' + this.reportSection.id;\n        oTable.data = this.reportSection.data;\n        oTable.model = this.reportSection.model;\n        oTable.orderBy = this.reportSection.orderBy;\n        oTable.groupBy = this.reportSection.groupBy;\n        oTable.criterias = this.getApplicableReportCriterias();\n        oTable.criteriaValues = this.app.viewer.getCriteriaValues();\n\n        var s = '';\n\n        this.preRender();\n\n        s += '<div class=\"report-section-title\">';\n        if (this.app.viewer.report.getReportDefinition().properties.name) {\n            s += '<h1 class=\"report-title\">' + this.app.viewer.report.getReportDefinition().properties.name + '</h1>';\n        }\n        if (this.app.viewer.report.getReportDefinition().properties.description) {\n            s += '<h4 class=\"report-description\">' + this.app.viewer.report.getReportDefinition().properties.description + '</h4>';\n        }\n        s += '<hr>';\n        s += '</div>';\n\n        s += oTable.render();\n\n        return s;\n\n    }\n\n    getColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                return this.reportSection.model[x];\n            }\n        }\n        return null;\n    }\n\n    setColumn(name, column) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                this.reportSection.model[x] = column;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isColumnVisible(name) {\n        if (this.hasColumn(name)) {\n            var column = this.getColumn(name);\n            if (column.visible == undefined) {\n                // visible by default\n                return true;\n            } else if (column.visible) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    hideColumn(name) {\n        for (var x in this.reportSection.model) {\n            if (this.reportSection.model[x].name == name) {\n                this.reportSection.model[x].visible = false;\n            }\n        }\n    }\n\n\n}\nwindow.__Metadocx.DataTableReportSection = DataTableReportSection;\n\n/** \n * Report\n * \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass Report {\n\n    constructor() {\n\n        /**\n         * Report id\n         */\n        this.id = null;\n\n        /**\n         * Indicates if report is loaded or not\n         */\n        this.isLoaded = false;\n\n        /**\n         * Report definition object\n         */\n        this._reportDefinition = null;\n\n\n        /**\n         * Reference to Metadocx app\n         */\n        this.app = null;\n\n        /**\n         * Indicates if we rendered the report criteria html and js\n         */\n        this._reportCriteriasRendered = false;\n\n        /**\n         * Indicates if we rendered the report settings html and js\n         */\n        this._reportSettingsRendered = false;\n\n        /**\n         * Copy of initial criteria values\n         */\n        this._initialCriteriaValues = null;\n\n        /**\n         * Copy of initial report settings\n         */\n        this._initialReportSettings = null;\n\n        /**\n         * Event called when report is loaded on screen\n         */\n        this.onReportLoaded = null;\n\n        /**\n         * Event called when report definition file is loaded\n         */\n        this.onReportDefinitionFileLoaded = null;\n\n    }\n\n    /**\n     * Set report unique id\n     * @param {*} id \n     * @returns \n     */\n    setId(id) {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * Returns report unique id\n     * @returns \n     */\n    getId() {\n        return this.id;\n    }\n\n    /**\n    * Loads report definition file\n    */\n    loadReportDefinition(reportDefinitionUrl) {\n\n        if (reportDefinitionUrl != undefined) {\n            this._reportDefinitionUrl = reportDefinitionUrl;\n        }\n\n        console.log('Report definition file is ' + this._reportDefinitionUrl);\n\n        if (this._reportDefinition === null) {\n            $.get(this._reportDefinitionUrl, (data, status) => {\n                this._reportDefinition = data;\n                /**\n                 * Copy Report definition options to viewer options, replaces default values\n                 */\n                this.app.modules.DataType.copyObjectProperties(this.getReportDefinition().options, this.app.viewer.options);\n\n                if (this.onReportDefinitionFileLoaded) {\n                    this.onReportDefinitionFileLoaded();\n                }\n            });\n        } else {\n            if (this.onReportDefinitionFileLoaded) {\n                this.onReportDefinitionFileLoaded();\n            }\n        }\n\n    }\n\n    /**\n     * Returns select options for paper sizes\n     * @returns \n     */\n    getPaperSizeOptions() {\n        var s = '';\n        for (var x in this.pageSizes) {\n            s += '<option value=\"' + this.pageSizes[x].name + '\">' + this.pageSizes[x].name + '</option>';\n        }\n        return s;\n    }\n\n\n\n    /**\n     * Report definition object\n     * @returns ReportDefinition\n     */\n    getReportDefinition() {\n        return this._reportDefinition;\n    }\n\n    /**\n     * Report definition url\n     * @returns Report\n     */\n    setReportDefinitionUrl(reportDefinitionUrl) {\n        this._reportDefinitionUrl = reportDefinitionUrl;\n        return this;\n    }\n\n    /**\n     * Returns report file definition url\n     * @returns \n     */\n    getReportDefinitionUrl() {\n        return this._reportDefinitionUrl;\n    }\n\n    /**\n     * Prints report\n     */\n    print() {\n        if (this.app.viewer.options.printing.method == 'browser') {\n            // Use default browser print \n            window.print();\n        } else if (this.app.viewer.options.printing.method == 'pdf') {\n            // Export as pdf and print the pdf file\n            this.app.modules.PDF.print();\n        }\n    }\n\n    /**\n     * Close window if window was open by script\n     */\n    close() {\n        window.close();\n    }\n\n    /**\n     * Export / Convert report to a specific format\n     * @param {*} format \n     */\n    exportReport(format) {\n        this.app.modules[format].showExportDialog();\n    }\n\n    /**\n     * Renders report settings html\n     * @returns \n     */\n    renderReportSettings() {\n\n        if (this._reportSettingsRendered) {\n            return;\n        }\n\n        var s = '';\n\n        s += `<div class=\"card\">\n                <div class=\"card-header\">\n                    <h4 class=\"card-title mb-0\">Report properties</h4>\n                </div>\n                <div class=\"card-body\">     \n                    <div class=\"mb-4\">\n                        <label class=\"form-label\" for=\"reportSettingsName\">Name</label>\n                        <input class=\"form-control\" type=\"text\" id=\"reportSettingsName\" placeholder=\"Report name\" value=\"${this.getReportDefinition().properties.name}\">\n                    </div> \n                    <div class=\"mb-4\">\n                        <label class=\"form-label\" for=\"reportSettingsDescription\">Description</label>\n                        <input class=\"form-control\" type=\"text\" id=\"reportSettingsDescription\" placeholder=\"Report description\" value=\"${this.getReportDefinition().properties.description}\">                        \n                    </div> \n                </div>\n            </div>`;\n\n        for (var kSection in this.getReportDefinition().sections) {\n            var oSection = this.getReportDefinition().sections[kSection];\n            var sReportSectionType = this.getReportDefinition().sections[kSection].type + 'ReportSection';\n            var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.getReportDefinition().sections[kSection]);\n\n            var sFields = '<table id=\"' + oSection.id + '_fields\" class=\"table table-condensed report-sortable\">';\n            sFields += '<tbody>';\n            for (var x in oSection.model) {\n\n                var sFieldSelected = ' checked';\n                if (!oReportSection.isColumnVisible(oSection.model[x].name)) {\n                    sFieldSelected = '';\n                }\n\n                sFields += `<tr data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                    <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                    <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_field_${oSection.model[x].name}\" type=\"checkbox\"${sFieldSelected}/></td>\n                    <td id=\"${oSection.id}_label_${oSection.model[x].name}\">${oSection.model[x].label}</td>\n                    <td style=\"width:150px;\">\n                        <select id=\"${oSection.id}_formula_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                            <option value=\"\"${(oSection.model[x].formula == '' ? ' selected' : '')}>(None)</option>\n                            <option value=\"SUM\"${(oSection.model[x].formula == 'SUM' ? ' selected' : '')}>Sum</option>\n                            <option value=\"AVG\"${(oSection.model[x].formula == 'AVG' ? ' selected' : '')}>Average</option>\n                            <option value=\"MIN\"${(oSection.model[x].formula == 'MIN' ? ' selected' : '')}>Min Value</option>\n                            <option value=\"MAX\"${(oSection.model[x].formula == 'MAX' ? ' selected' : '')}>Max Value</option>\n                            <option value=\"COUNT\"${(oSection.model[x].formula == 'COUNT' ? ' selected' : '')}>Count</option>\n                        </select>\n                    </td>\n                    <td style=\"width:30px;\">\n                        <button class=\"btn btn-sm\" onClick=\"Metadocx.viewer.showFieldPropertiesDialog('${oSection.id}', '${oSection.model[x].name}');\"><i class=\"uil uil-ellipsis-h fs20\"></i></button>\n                    </td>\n                </tr>`;\n            }\n            sFields += '</tbody>';\n            sFields += '</table>';\n\n            /**\n             * ORDER BY \n             */\n            var sOrderBy = '<table id=\"' + oSection.id + '_orderBy\" class=\"table table-condensed report-sortable\">';\n            sOrderBy += '<tbody>';\n            for (var x in oSection.model) {\n\n\n                var oOrderBy = oReportSection.getOrderBy(oSection.model[x].name);\n\n                var sAscSelected = '';\n                var sDescSelected = '';\n                var sOrderBySelected = '';\n                if (oOrderBy != null) {\n                    if (oOrderBy.order == 'desc') {\n                        sAscSelected = '';\n                        sDescSelected = ' selected';\n                    } else {\n                        sAscSelected = ' selected';\n                        sDescSelected = '';\n                    }\n                    sOrderBySelected = ' checked';\n                }\n\n                sOrderBy += `<tr id=\"${oSection.id}_orderByRow_${oSection.model[x].name}\" data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                                <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                                <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_orderBy_${oSection.model[x].name}\" type=\"checkbox\"${sOrderBySelected}/></td>\n                                <td>${oSection.model[x].label}</td>\n                                <td style=\"width:150px;\">\n                                    <select id=\"${oSection.id}_orderByOrder_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                                        <option value=\"asc\"${sAscSelected}>Ascending</option>\n                                        <option value=\"desc\"${sDescSelected}>Descending</option>                                    \n                                    </select>\n                                </td>\n                            </tr>`;\n            }\n            sOrderBy += '</tbody>';\n            sOrderBy += '</table>';\n\n            /**\n             * GROUP BY \n             */\n            var sGroupBy = '<table id=\"' + oSection.id + '_groupBy\" class=\"table table-condensed report-sortable\">';\n            sGroupBy += '<tbody>';\n            for (var x in oSection.model) {\n\n                var oGroupBy = oReportSection.getGroupBy(oSection.model[x].name);\n\n                var sAscSelected = '';\n                var sDescSelected = '';\n                var sGroupBySelected = '';\n                if (oGroupBy !== null) {\n                    if (oGroupBy.order == 'desc') {\n                        sAscSelected = '';\n                        sDescSelected = ' selected';\n                    } else {\n                        sAscSelected = ' selected';\n                        sDescSelected = '';\n                    }\n                    sGroupBySelected = ' checked';\n                }\n\n                sGroupBy += `<tr id=\"${oSection.id}_groupByRow_${oSection.model[x].name}\" data-section=\"${oSection.id}\" data-column=\"${oSection.model[x].name}\">\n                                <td style=\"width:30px;text-align:center;\"><i class=\"uil uil-sort fs16\"></i></td>\n                                <td style=\"width:30px;text-align:center;\"><input id=\"${oSection.id}_groupBy_${oSection.model[x].name}\" type=\"checkbox\"${sGroupBySelected}/></td>\n                                <td>${oSection.model[x].label}</td>\n                                <td style=\"width:150px;\">\n                                <select id=\"${oSection.id}_groupByOrder_${oSection.model[x].name}\" class=\"form-control form-control-sm\" style=\"width:100%;\">\n                                    <option value=\"asc\"${sAscSelected}>Ascending</option>\n                                    <option value=\"desc\"${sDescSelected}>Descending</option>                                    \n                                </select></td>\n                            </tr>`;\n            }\n            sGroupBy += '</tbody>';\n            sGroupBy += '</table>';\n\n            /**\n             * Main section card\n             */\n            s += `<div class=\"card\">\n                            <div class=\"card-header\">\n                                <h4 class=\"card-title mb-0\">${oSection.properties.name}</h4>\n                            </div>\n                            <div class=\"card-body\">              \n                                <div class=\"accordion accordion-flush\" id=\"reportSettingsAccordion${oSection.properties.name}\">\n                                    <div class=\"accordion-item\">\n                                        <h2 id=\"settingsFieldsHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsFieldsBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                                <i class=\"uil uil-columns fs20\"></i>&nbsp;Fields\n                                            </button>\n                                        </h2>\n                                        <div id=\"settingsFieldsBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                            <div class=\"accordion-body\">                                    \n                                                ${sFields}\n                                            </div>\n                                        </div>\n                                    </div>   \n                                    \n                                    <div class=\"accordion-item\">\n                                        <h2 id=\"settingsOrderByHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsOrderByBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                                <i class=\"uil uil-sort-amount-down fs20\"></i>&nbsp;Order\n                                            </button>\n                                        </h2>\n                                        <div id=\"settingsOrderByBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                            <div class=\"accordion-body\">                                    \n                                                ${sOrderBy}\n                                            </div>\n                                        </div>\n                                    </div>   \n\n                                    <div class=\"accordion-item\">\n                                        <h2 id=\"settingsGroupByHeader_${oSection.properties.name}\" class=\"accordion-header\">\n                                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsGroupByBody_${oSection.properties.name}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">                                                                        \n                                                <i class=\"uil uil-layer-group fs20\"></i>&nbsp;Groups\n                                            </button>\n                                        </h2>\n                                        <div id=\"settingsGroupByBody_${oSection.properties.name}\" class=\"accordion-collapse collapse\" aria-labelledby=\"reportSettingsAccordion${oSection.properties.name}\">\n                                            <div class=\"accordion-body\">                                    \n                                                ${sGroupBy}                             \n                                            </div>\n                                        </div>\n                                    </div>   \n                                </div>                                                                                                             \n                            </div>\n                        </div>`;\n\n\n        }\n\n        s += `\n        <div class=\"float-end\">\n            <button class=\"btn btn-secondary mr5\" onClick=\"Metadocx.viewer.cancelSettings();\">Cancel</button>\n            <button class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applySettings();\"><i class=\"uil uil-check fs16\" style=\"color:#fff;\"></i>&nbsp;Apply Settings</button>\n        </div>\n       `;\n\n        $('#' + this.id + '_reportSettingsZone').html(s);\n        $('.report-sortable tbody').sortable({\n            placeholder: 'ui-state-highlight',\n            helper: 'clone',\n            update: function (e, ui) {\n                console.log(e);\n                console.log(ui);\n            },\n        });\n\n\n        for (var kSection in this.getReportDefinition().sections) {\n\n            var oSection = this.getReportDefinition().sections[kSection];\n            var oReportSection = new ReportSection(this.app, this, oSection);\n\n            /**\n             * Reorder table rows based on orderby and groupby config\n             */\n            var reversedKeys = Object.keys(oSection.orderBy).reverse();\n            reversedKeys.forEach(key => {\n                //console.log(key, oSection.orderBy[key]);                \n                $('#' + oSection.id + '_orderByRow_' + oSection.orderBy[key].name).prependTo('#' + oSection.id + '_orderBy');\n            });\n\n\n            /**\n             * Reorder table rows based on orderby and groupby config\n             */\n            reversedKeys = Object.keys(oSection.groupBy).reverse();\n            reversedKeys.forEach(key => {\n                //console.log(key, oSection.orderBy[key]);                \n                $('#' + oSection.id + '_groupByRow_' + oSection.groupBy[key].name).prependTo('#' + oSection.id + '_groupBy');\n            });\n        }\n\n        this._reportSettingsRendered = true;\n\n    }\n\n    /**\n     * Renders report criteria controls HTML\n     * @returns string\n     */\n    renderReportCriterias() {\n\n\n        if (this._reportCriteriasRendered) {\n            return;\n        }\n\n        // $('#criteriaDetails_Department').collapse('show')\n        // $('#criteriaDetails_Department').collapse('hide')\n\n        var sCriterias = '';\n        var aCriterias = [];\n        for (var x in this.getReportDefinition().criterias) {\n\n            var oCriteria = new window.__Metadocx[this.getReportDefinition().criterias[x].type](this.app);\n            oCriteria.id = this.getReportDefinition().criterias[x].id;\n            oCriteria.reportCriteria = this.getReportDefinition().criterias[x];\n            aCriterias.push(oCriteria);\n\n            sCriterias += `<div class=\"accordion-item\">\n                            <h2 id=\"criteriaTitle${this.getReportDefinition().criterias[x].id}\" class=\"accordion-header\">\n                                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#criteriaDetails_${this.getReportDefinition().criterias[x].id}\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                                    <div class=\"form-check form-switch form-switch-lg\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"criteriaEnabled_${this.getReportDefinition().criterias[x].id}\">\n                                        <label class=\"form-check-label\" for=\"criteriaEnabled_${this.getReportDefinition().criterias[x].id}\">&nbsp;</label>\n                                    </div>                                \n                                    ${this.getReportDefinition().criterias[x].name}\n                                </button>\n                            </h2>\n                            <div id=\"criteriaDetails_${this.getReportDefinition().criterias[x].id}\" class=\"accordion-collapse collapse\" aria-labelledby=\"criteriaTitle${this.getReportDefinition().criterias[x].id}\">\n                                <div class=\"accordion-body\">                                    \n                                    <p>${this.getReportDefinition().criterias[x].description}</p>\n                                    ${oCriteria.render()}                                    \n                                </div>\n                            </div>\n                        </div>`;\n        }\n\n        var s = `<div class=\"accordion accordion-flush\" id=\"reportCriteriaAccordion\">\n                  ${sCriterias}  \n                </div>`;\n\n        $('#' + this.id + '_criteriasBody').html(s);\n\n        /**\n         * Load JS code for components\n         */\n        for (var x in aCriterias) {\n            aCriterias[x].initializeJS();\n        }\n        this.app.viewer.criterias = aCriterias;\n\n        this._reportCriteriasRendered = true;\n\n\n    }\n\n\n    /**\n     * Applies criteria values to report\n     */\n    applyCriterias() {\n\n        this.hideReportCriterias();\n        this.app.viewer.refreshReport();\n    }\n\n    /**\n     * Displays report criteria section\n     */\n    showReportCriterias() {\n\n        this._initialCriteriaValues = this.app.viewer.getCriteriaValues();\n\n        $('#' + this.id + '_canvas').hide();\n        $('#' + this.id + '_criteriasZone').show();\n    }\n\n    /**\n     * Hides report criteria section\n     */\n    hideReportCriterias() {\n\n        $('#' + this.id + '_criteriasZone').hide();\n        $('#' + this.id + '_canvas').show();\n    }\n\n    /**\n     * Cancels report criterias, does not apply changes\n     */\n    cancelCriterias() {\n        if (JSON.stringify(this._initialCriteriaValues) != JSON.stringify(this.app.viewer.getCriteriaValues())) {\n            // Criteria values have changed, confirm?\n            // @todo reset criterias\n        }\n\n        this.hideReportCriterias();\n    }\n\n    /**\n     * Reset criteria values to original values\n     */\n    resetCriterias() {\n        if (JSON.stringify(this._initialCriteriaValues) != JSON.stringify(this.app.viewer.getCriteriaValues())) {\n            // Criteria values have changed, confirm?\n            // @todo reset criterias\n        }\n\n        this.hideReportCriterias();\n    }\n\n    /**\n     * Makes a copy of original settings and criteria values\n     * Used to reset properties of report\n     */\n    copyOriginalSettings() {\n        this._initialCriteriaValues = this.app.viewer.getCriteriaValues();\n        this._initialReportSettings = {\n            sections: [],\n        }\n        for (var x in this.getReportDefinition().sections) {\n            var oSection = this.getReportDefinition().sections[x];\n            this._initialReportSettings['sections'] = {\n                id: oSection.id,\n                properties: JSON.parse(JSON.stringify(oSection.properties)),\n                orderBy: JSON.parse(JSON.stringify(oSection.orderBy)),\n                groupBy: JSON.parse(JSON.stringify(oSection.groupBy)),\n                model: JSON.parse(JSON.stringify(oSection.model)),\n            }\n        }\n    }\n\n    getReportSections() {\n\n        return this.getReportDefinition().sections;\n\n    }\n\n    getReportSection(id) {\n\n        for (var x in this.getReportDefinition().sections) {\n            if (this.getReportDefinition().sections[x].id == id) {\n                return this.getReportDefinition().sections[x];\n            }\n        }\n\n        return null;\n\n    }\n\n\n\n\n}\n/** \n * Report Canvas\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportCanvas {\n\n    constructor(app, report, viewer) {\n        this.app = app;\n        this.report = report;\n        this.viewer = viewer;\n    }\n\n    /**\n     * Renders page (canvas) where report will be rendered\n     * @returns \n     */\n    render() {\n\n        var s = '';\n        var sReportSection = '';\n        for (var x in this.report.getReportDefinition().sections) {\n\n            var sReportSectionType = this.report.getReportDefinition().sections[x].type + 'ReportSection';\n            var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportDefinition().sections[x]);\n            sReportSection += oReportSection.render();\n\n        }\n\n        s += `<div id=\"reportPage\" class=\"report-page orientation-${this.viewer.options.page.orientation} size-${this.viewer.options.page.paperSize.toString().toLowerCase()}\">                \n                <div id=\"reportContent\">\n                    <style id=\"${this.viewer.options.id}_style\">\n                    </style>\n                    ${sReportSection}\n                </div>\n            </div>`;\n\n        return s;\n\n    }\n\n}\nwindow.__Metadocx.ReportCanvas = ReportCanvas;\n/** \n * ReportViewer, renders report viewer UI interface \n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ReportViewer extends Consolable {\n\n    constructor(app) {\n        super();\n        /**\n         * Report criterias\n         */\n        this.criterias = null;\n        /**\n         * Initial criteria values on load\n         */\n        this.originalCriteriaValues = null;\n        /**\n         * Reference to main app\n         */\n        this.app = app;\n        /**\n         * Report viewer options\n         */\n        this.options = null;\n        /**\n         * Option Proxy instance\n         */\n        this._optionsProxy = null;\n        /**\n         * Options dialog instance \n         */\n        this.optionsDialog = null;\n        /**\n         * Field properties dialog instance \n         */\n        this.fieldPropertiesDialog = null;\n        /**\n         * Settings offcanvas reference\n         */\n        this.settingsOffCanvas = null;\n        /**\n         * \n         */\n        this._bDisableApplyReportViewerOptions = false;\n\n        /**\n         * Report instance displayed in report viewer\n         */\n        this.report = new Report();\n\n        /**\n         * Initialize options with default options\n         */\n        this.loadDefaultOptions();\n\n    }\n\n    /**\n     * Load report default options\n     */\n    loadDefaultOptions() {\n\n        this.log('Loading default options');\n\n        this.options = {\n            \"id\": \"metadocxReport\",\n            \"toolbar\": {\n                \"showOptionsButton\": true,\n                \"showSettingsButton\": true,\n                \"showCriteriasButton\": true,\n                \"showPrintButton\": true,\n                \"showExportButton\": true,\n                \"showCloseButton\": true\n            },\n            \"exportFormats\": {\n                \"pdf\": true,\n                \"word\": false,\n                \"excel\": false\n            },\n            \"page\": {\n                \"orientation\": \"portrait\",\n                \"paperSize\": \"Letter\",\n                \"margins\": {\n                    \"top\": 0.5,\n                    \"bottom\": 0.5,\n                    \"left\": 0.5,\n                    \"right\": 0.5\n                }\n            },\n            \"settings\": {\n                \"fields\": true,\n                \"fieldsReorder\": true,\n                \"fieldsSelection\": true,\n                \"fieldsFormula\": true,\n\n                \"orderBy\": true,\n                \"orderByReorder\": true,\n                \"orderBySelection\": true,\n                \"orderByOrder\": true,\n\n                \"groupBy\": true,\n                \"groupByReorder\": true,\n                \"groupBySelection\": true,\n                \"groupByOrder\": true\n            },\n            \"formats\": {\n                \"date\": {\n                    \"format\": \"YYYY-MM-DD\"\n                },\n                \"boolean\": {\n                    \"format\": {\n                        \"trueValue\": \"Yes\",\n                        \"falseValue\": \"No\",\n                        \"ALL\": \"All\"\n                    }\n                },\n                \"number\": {\n                    \"format\": \"0.00\"\n                }\n            },\n            \"printing\": {\n                \"method\": \"pdf\"\n            }\n        };\n\n        this.options = new Proxy(this.options, ProxyHandler);\n\n    }\n\n    /**\n     * Loads a report definition file\n     */\n    load(reportDefinitionUrl) {\n\n        /**\n         * If we have a report definition file passed as parameter, load it and render\n         */\n        if (reportDefinitionUrl) {\n            this.log('Loading report ' + reportDefinitionUrl);\n            /**\n             * Create report object\n             */\n            if (this.report === null) {\n                this.report = new Report();\n            }\n            this.report.app = this.app;\n\n            window[this.options.id] = this.report;\n            this.report.setId(this.options.id);\n\n            this.report.onReportLoaded = () => {\n                this.applyReportViewerOptions();\n            }\n\n            this.report.onReportDefinitionFileLoaded = () => {\n                this.refreshReport();\n            }\n\n            this.report.loadReportDefinition(reportDefinitionUrl);\n            this.applyReportViewerOptions();\n            this.originalCriteriaValues = this.getCriteriaValues();\n\n        }\n\n    }\n\n\n    applyReportViewerOptions() {\n\n        if (this._bDisableApplyReportViewerOptions) {\n            return;\n        }\n\n        if (!this.report.isLoaded) {\n            // Report is not yet loaded hide all toolbar buttons\n            $('.report-toolbar-button').hide();\n            return;\n        }\n\n\n        $('#' + this.options.id + '_headerName').html(this.report.getReportDefinition().properties.name);\n        $('#' + this.options.id + '_headerDescription').html(this.report.getReportDefinition().properties.description);\n\n        $('.report-toolbar-button').show();\n\n        if (this.options.toolbar.showExportButton) {\n            $('#' + this.options.id + '_export').show();\n        } else {\n            $('#' + this.options.id + '_export').hide();\n        }\n\n        if (this.options.toolbar.showPrintButton) {\n            $('#' + this.options.id + '_print').show();\n        } else {\n            $('#' + this.options.id + '_print').hide();\n        }\n\n        if (this.options.toolbar.showCriteriasButton) {\n            $('#' + this.options.id + '_criterias').show();\n        } else {\n            $('#' + this.options.id + '_criterias').hide();\n        }\n\n        if (this.options.toolbar.showSettingsButton) {\n            $('#' + this.options.id + '_settings').show();\n        } else {\n            $('#' + this.options.id + '_settings').hide();\n        }\n\n        if (this.options.toolbar.showOptionsButton) {\n            $('#' + this.options.id + '_options').show();\n        } else {\n            $('#' + this.options.id + '_options').hide();\n        }\n\n        if (this.options.toolbar.showCloseButton && window.opener != null) {\n            $('#' + this.options.id + '_close').show();\n        } else {\n            $('#' + this.options.id + '_close').hide();\n        }\n\n\n\n    }\n\n    /**\n     * Renders the report viewer\n     */\n    render() {\n        this.log('Report viewer render');\n        var s = '';\n\n        s += this.renderMainLayout();\n        s += this.renderReportCriterias();\n        s += this.renderOptionsDialog();\n        s += this.renderReportSettings();\n        s += this.renderFieldPropertiesDialog();\n\n        $('#' + this.options.container).html(s);\n        $('.report-viewer-criterias').hide();\n\n    }\n\n    /**\n     * Displays info section when no report definition file is supplied\n     */\n    showNoReportAlert() {\n\n        this.log('No report data, displaying no report warning');\n        var s = `<div class=\"alert alert-warning mb-0 report-no-definition\" role=\"alert\">\n                    <h4 class=\"alert-heading\">Missing report definition</h4>\n                    <p>Oups! Something went wrong. We did not get a report to load.</p>                    \n                </div>`;\n\n        $('#' + this.app.viewer.options.id + '_canvas').html(s);\n        $('.report-toolbar-button').hide();\n    }\n\n    /**\n     * Renders main layout html of report viewer\n     * @returns \n     */\n    renderMainLayout() {\n\n        this.log('Render main layout');\n        var sCloseButtonClasses = '';\n        if (window.opener == null) {\n            // This window is not open by script can not use close button\n            sCloseButtonClasses = ' hidden';\n        }\n\n        var sExportPDFClasses = '';\n        if (!this.options.exportFormats.pdf) {\n            sExportPDFClasses = ' hidden';\n        }\n        var sExportWordClasses = '';\n        if (!this.options.exportFormats.word) {\n            sExportWordClasses = ' hidden';\n        }\n        var sExportExcelClasses = '';\n        if (!this.options.exportFormats.excel) {\n            sExportExcelClasses = ' hidden';\n        }\n\n        /**\n         * Main layout\n         */\n        return `<header id=\"${this.options.id}_header\" class=\"page-topbar no-print\">\n             <div class=\"navbar-header\">\n                 <div class=\"d-flex\">\n                     <div class=\"ms-4\">\n                         <div class=\"report-header-icon\">\n                            <i class=\"uil uil-file-graph\" style=\"font-size: 36px;line-height: 36px;\"></i>\n                         </div>\n                         <div class=\"report-header-title-section\">\n                            <div id=\"${this.options.id}_headerName\" class=\"report-header-title\"></div>\n                            <div id=\"${this.options.id}_headerDescription\" class=\"report-header-description\"></div>\n                         </div>\n                     </div>\n                 </div>\n                 <div class=\"d-flex\">                   \n                     <div class=\"btn-group me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_export\" type=\"button\" class=\"btn header-item dropdown-toggle\" data-bs-toggle=\"dropdown\">\n                            <i class=\"uil uil-file-export\"></i>\n                         </button>\n                         <div class=\"dropdown-menu\">\n                             <a id=\"${this.options.id}_exportPdf\" class=\"dropdown-item${sExportPDFClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('PDF');\">PDF</a>\n                             <a id=\"${this.options.id}_exportExcel\" class=\"dropdown-item${sExportExcelClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('Excel');\">Excel</a>\n                             <a id=\"${this.options.id}_exportWord\" class=\"dropdown-item${sExportWordClasses}\" href=\"#\" onClick=\"Metadocx.viewer.report.exportReport('Word');\">Word</a>\n                         </div>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_print\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.print();\"><i class=\"uil uil-print\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_criterias\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.showReportCriterias();\"><i class=\"uil uil-filter\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_settings\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.showReportSettings();\"><i class=\"uil uil-file-graph\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button\">\n                         <button id=\"${this.options.id}_options\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.showReportOptions();\"><i class=\"uil uil-cog\"></i></button>\n                     </div>\n                     <div class=\"me-2 mb-2 mb-sm-0 report-toolbar-button${sCloseButtonClasses}\">\n                         <button id=\"${this.options.id}_close\" type=\"button\" class=\"btn header-item\" onClick=\"Metadocx.viewer.report.close();\"><i class=\"uil uil-times\"></i></button>\n                     </div>\n                 </div>\n             </div>\n         </header>\n         <div id=\"${this.options.id}_canvas\" class=\"report-viewer-canvas\">\n         </div>\n         <div class=\"powered-by no-print\">powered by <a href=\"https://www.metadocx.com\" target=\"_blank\">Metadocx</a></div>`;\n\n    }\n\n    /**\n     * Renders report criteria sections html, criterias will be rendered by the report object\n     * @returns \n     */\n    renderReportCriterias() {\n\n        this.log('Render report criterias');\n        return `<div id=\"${this.options.id}_criteriasZone\" class=\"report-viewer-criterias\">\n                    <div class=\"page-content\">\n                        <div class=\"container-fluid\">\n                            <div class=\"row\">                                \n                                <div class=\"col-12\">                                \n                                    <div class=\"page-title-box d-flex align-items-center justify-content-between\">\n                                        <h4 class=\"mb-0\">Criterias</h4>\n                                        <div class=\"d-flex\">\n                                            <button class=\"btn btn-primary mr5\" onClick=\"Metadocx.viewer.report.applyCriterias();\"><i class=\"uil uil-check fs16\" style=\"color:#fff;\"></i>&nbsp;Apply criterias</button>\n                                            <button class=\"btn btn-danger mr5\" onClick=\"Metadocx.viewer.report.resetCriterias();\">Reset</button>\n                                            <button class=\"btn btn-secondary\" onClick=\"Metadocx.viewer.report.cancelCriterias();\">Cancel</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <div class=\"card\">\n                                        <div id=\"${this.options.id}_criteriasBody\" class=\"card-body\">\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>            \n                        </div>\n                    </div>\n                </div>`;\n    }\n\n    /**\n     * Render report options dialoag html\n     * @returns \n     */\n    renderOptionsDialog() {\n\n        /**\n         * Options dialog\n         */\n        this.log('Render report options dialog');\n\n        return `<div id=\"${this.options.id}_optionsDialog\" class=\"modal\" tabindex=\"-1\">\n               <div class=\"modal-dialog\">\n                 <div class=\"modal-content\">\n                 <div class=\"modal-header\">\n                     <h5 class=\"modal-title\">Options</h5>\n                     <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                 </div>\n                 <div class=\"modal-body\">\n                     <div class=\"d-flex justify-content-between\">\n                         <div class=\"d-flex flex-column p-2\">\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                             \n                                 <div class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationPortrait\">\n                                     <label class=\"form-check-label\" for=\"orientationPortrait\">\n                                         Portrait\n                                     </label>\n                                 </div>\n                                 <div class=\"form-check\">\n                                     <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationLandscape\">\n                                     <label class=\"form-check-label\" for=\"orientationLandscape\">\n                                         Landscape\n                                     </label>\n                                 </div>\n                             </div>\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                                 <select id=\"paperSize\" class=\"form-select\">\n                                 ${this.app.modules.Printing.getPaperSizeOptions()}\n                                 </select>\n                             </div>\n                         </div>\n                         <div class=\"d-flex flex-column p-2\">\n                             <div class=\"mb-3\">                                \n                                 <label for=\"paperSize\" class=\"form-label font-weight-bold\">Margins</label>\n                             \n                                 <div class=\"mb-3 row\">\n                                     <label for=\"topMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"topMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"bottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"bottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"leftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"leftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\">in.</label>\n                                 </div>\n                                 <div class=\"mb-3 row\">\n                                     <label for=\"rightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                                     <div class=\"col-sm-6\">\n                                         <input type=\"number\" class=\"form-control\" id=\"rightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                                     </div>\n                                     <label class=\"col-sm-2 col-form-label\">in.</label>\n                                 </div>                                                    \n                             </div>\n                         </div>\n                     </div>\n                 </div>\n                 <div class=\"modal-footer\">\n                     <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n                     <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applyOptions();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Apply Options</button>\n                 </div>\n                 </div>\n             </div>\n             </div>`;\n\n    }\n\n    /**\n     * Render report field properties dialog html\n     * @returns \n     */\n    renderFieldPropertiesDialog() {\n\n        /**\n         * Field properties dialog\n         */\n        this.log('Render report field properties dialog');\n\n        return `<div id=\"${this.options.id}_fieldPropertyDialog\" class=\"modal modal-lg\" tabindex=\"-1\" data-backdrop=\"false\">\n               <div class=\"modal-dialog\">\n                 <div class=\"modal-content\">\n                 <div class=\"modal-header\">\n                     <h5 class=\"modal-title\">Properties</h5>\n                     <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                 </div>\n                 <div class=\"modal-body\">\n                    <div class=\"row\">\n                            <div class=\"col-6\">\n                                <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldSectionID\" class=\"col-form-label\">Section ID</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldSectionID\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldName\" class=\"col-form-label\">Name</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldName\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldLabel\" class=\"col-form-label\">Label</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldLabel\" value=\"\"/>                            \n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldWidth\" class=\"col-form-label\">Width (px)</label>                            \n                                <input type=\"number\" class=\"form-control\" id=\"fieldWidth\" value=\"\"/>                            \n                            </div>\n\n                            <div class=\"form-check mb-3\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"fieldVisible\">\n                                <label class=\"form-check-label\" for=\"fieldVisible\">\n                                    Is Visible\n                                </label>\n                            </div>\n                        \n                        </div>\n                        <div class=\"col-6\">\n                            \n                            <div class=\"mb-3\" style=\"display:none;\">\n                                <label for=\"fieldType\" class=\"col-form-label\">Type</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldType\" readonly value=\"\"/>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"fieldAlign\" class=\"col-form-label\">Alignment</label>                            \n                                <select id=\"fieldAlign\" class=\"form-control\">\n                                    <option value=\"left\">Left</option>\n                                    <option value=\"right\">Right</option>\n                                    <option value=\"center\">Center</option>\n                                </select>\n                            </div>\n\n                            <div id=\"fieldFormula_container\" class=\"mb-3\">\n                                <label for=\"fieldFormula\" class=\"col-form-label\">Formula</label>                            \n                                <select id=\"fieldFormula\" class=\"form-control\">\n                                    <option value=\"\">(None)</option>\n                                    <option value=\"SUM\">Sum</option>\n                                    <option value=\"AVG\">Average</option>\n                                    <option value=\"MIN\">Min Value</option>\n                                    <option value=\"MAX\">Max Value</option>\n                                    <option value=\"COUNT\">Count</option>\n                                </select>\n                            </div>\n\n                            <div id=\"fieldFormat_container\" class=\"mb-3\">\n                                <label for=\"fieldFormat\" class=\"col-form-label\">Format</label>                            \n                                <input type=\"text\" class=\"form-control\" id=\"fieldFormat\" value=\"\"/>                            \n                            </div>                            \n                        \n                        </div>\n                    </div>    \n\n                     \n                 </div>\n                 <div class=\"modal-footer\">\n                     <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n                     <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.viewer.applyFieldProperties();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Apply Properties</button>\n                 </div>\n                 </div>\n             </div>\n             </div>`;\n\n    }\n\n    /**\n     * Render report settings offcanvas html\n     * @returns \n     */\n    renderReportSettings() {\n\n        this.log('Render report settings offcanvas');\n\n        return `<div id=\"${this.options.id}_settingsOffCanvas\" class=\"offcanvas offcanvas-end report-section-offcanvas\" data-bs-backdrop=\"static\" tabindex=\"-1\" aria-labelledby=\"${this.options.id}_settingsOffCanvasLabel\">\n                    <div class=\"offcanvas-header\">\n                        <h5 id=\"${this.options.id}_settingsOffCanvasLabel\" class=\"offcanvas-title\">Report Settings</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                    </div>\n                    <div id=\"${this.options.id}_reportSettingsZone\" class=\"offcanvas-body\">\n                        \n                    </div>\n                </div>`;\n\n    }\n\n    /**\n     * Display report options in a modal dialog\n     */\n    showFieldPropertiesDialog(sectionID, fieldName) {\n\n        if (this.fieldPropertiesDialog === null) {\n            this.fieldPropertiesDialog = new bootstrap.Modal('#' + this.options.id + '_fieldPropertyDialog', {})\n        }\n\n        var sReportSectionType = this.report.getReportSection(sectionID).type + 'ReportSection';\n        var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportSection(sectionID));\n\n        var field = oReportSection.getColumn(fieldName);\n\n        $('#fieldSectionID').val(sectionID);\n        $('#fieldName').val(field.name);\n        $('#fieldType').val(field.type);\n        $('#fieldLabel').val(field.label);\n\n        var bIsVisible = true;\n        if (field.visible != undefined) {\n            bIsVisible = this.app.modules.DataType.toBool(field.visible);\n        }\n\n        $('#fieldVisible').prop('checked', bIsVisible);\n\n        if (field.formula != undefined) {\n            $('#fieldFormula').val(field.formula);\n        }\n        if (field.format != undefined) {\n            $('#fieldFormat').val(field.format);\n        }\n        if (field.width != undefined) {\n            $('#fieldWidth').val(field.width);\n        }\n\n\n        if (field.type == 'number') {\n            $('#fieldFormula_container').show();\n            $('#fieldFormat_container').show();\n        } else {\n            $('#fieldFormula_container').hide();\n            $('#fieldFormat_container').hide();\n        }\n\n\n\n        this.fieldPropertiesDialog.show();\n    }\n\n    applyFieldProperties() {\n\n        var sectionID = $('#fieldSectionID').val();\n        var fieldName = $('#fieldName').val();\n\n        var sReportSectionType = this.report.getReportSection(sectionID).type + 'ReportSection';\n        var oReportSection = new window.__Metadocx[sReportSectionType](this.app, this.report.getReportSection(sectionID));\n\n        var field = oReportSection.getColumn(fieldName);\n\n        field.label = $('#fieldLabel').val();\n        if ($('#fieldWidth').val() != '') {\n            field.width = parseInt($('#fieldWidth').val());\n        } else {\n            field.width = '';\n        }\n        field.visible = $('#fieldVisible').prop('checked');\n\n        if (field.type == 'number') {\n            if ($('#fieldFormula').val() != '') {\n                field.formula = $('#fieldFormula').val();\n            } else {\n                field.formula = '';\n            }\n\n            if ($('#fieldFormat').val() != '') {\n                field.format = $('#fieldFormat').val();\n            } else {\n                field.format = '';\n            }\n        }\n\n        field.align = $('#fieldAlign').val();\n\n        oReportSection.setColumn(fieldName, field);\n        this.refreshReportSettings();\n        this.refreshReport();\n\n        this.fieldPropertiesDialog.hide();\n    }\n\n    /**\n     * Returns object of all criteria values\n     * @returns \n     */\n    getCriteriaValues() {\n\n        var values = {};\n        if (this.criterias) {\n            for (var x in this.criterias) {\n                values[this.criterias[x].id] = {\n                    id: this.criterias[x].id,\n                    enabled: this.criterias[x].getIsEnabled(),\n                    value: this.criterias[x].getValue(),\n                }\n            }\n        }\n\n        return values;\n    }\n\n    /**\n     * Returns a specific criteria value\n     * @param {*} criteria \n     * @returns \n     */\n    getCriteriaValue(criteriaName) {\n        return this.getCriteriaValues()[criteriaName];\n    }\n\n    /**\n     * Returns criteria \n     * @param {*} id \n     * @returns \n     */\n    getCriteria(id) {\n        if (this.criterias) {\n            for (var x in this.criterias) {\n                if (this.criterias[x].id == id) {\n                    return this.criterias[x];\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns is a specific criteria is enabled or not\n     * @param {*} id \n     * @returns \n     */\n    isCriteriaEnabled(id) {\n        return this.getCriteria(id).getIsEnabled();\n    }\n\n    /**\n     * Display report options in a modal dialog\n     */\n    showReportOptions() {\n\n        if (this.optionsDialog === null) {\n            this.optionsDialog = new bootstrap.Modal('#' + this.options.id + '_optionsDialog', {})\n        }\n\n        if (this.options.page.orientation == 'portrait') {\n            $('#orientationPortrait').prop('checked', true);\n            $('#orientationLandscape').prop('checked', false);\n        } else {\n            $('#orientationPortrait').prop('checked', false);\n            $('#orientationLandscape').prop('checked', true);\n        }\n\n        $('#paperSize').val(this.options.page.paperSize);\n\n        $('#topMargin').val(this.options.page.margins.top);\n        $('#bottomMargin').val(this.options.page.margins.bottom);\n        $('#leftMargin').val(this.options.page.margins.left);\n        $('#rightMargin').val(this.options.page.margins.right);\n\n        this.optionsDialog.show();\n    }\n\n    /**\n     * Apply report options selected by user\n     */\n    applyOptions() {\n\n        this._bDisableApplyReportViewerOptions = true;\n        this.options.page.margins.top = $('#topMargin').val();\n        this.options.page.margins.bottom = $('#bottomMargin').val();\n        this.options.page.margins.left = $('#leftMargin').val();\n        this.options.page.margins.right = $('#rightMargin').val();\n\n        this.options.page.paperSize = $('#paperSize').val();\n\n        if ($('#orientationPortrait').prop('checked')) {\n            this.options.page.orientation = 'portrait';\n        } else {\n            this.options.page.orientation = 'landscape';\n        }\n\n        this.optionsDialog.hide();\n\n        this._bDisableApplyReportViewerOptions = false;\n        this.applyReportViewerOptions();\n        this.refreshReport();\n\n    }\n\n\n    /**\n     * Refresh report view (reload the report)\n     */\n    refreshReport() {\n\n        this.report.renderReportCriterias();\n        this.report.renderReportSettings();\n        $('#' + this.options.id + '_canvas').html((new ReportCanvas(this.app, this.report, this)).render());\n        this.updateCSS();\n        this.scaleReportSections();\n        if (!this.report.isLoaded) {\n            this.report.isLoaded = true;\n            this.report.copyOriginalSettings();\n            if (this.report.onReportLoaded) {\n                this.report.onReportLoaded();\n            }\n        }\n\n    }\n\n    /**\n     * Update reportPage style tag with print media css\n     */\n    updateCSS() {\n\n        var paperSize = this.app.modules.Printing.getPaperSize(this.app.viewer.options.page.paperSize);\n        var pageOrientation = this.app.viewer.options.page.orientation;\n\n        var width = 0;\n        var height = 0;\n\n        if (pageOrientation == this.app.modules.Printing.PageOrientation.Landscape) {\n            width = paperSize.height;\n            height = paperSize.width;\n        } else {\n            width = paperSize.width;\n            height = paperSize.height;\n        }\n\n        var s = `\n               \n        @media print {\n\n            html, body {\n                width: ${width}mm;\n                margin: 0;\n                padding: 0;\n            }\n\n            @page {\n                size: ${width}mm ${height}mm;\n                margin-top: ${this.options.page.margins.top}in !important;\n                margin-bottom: ${this.options.page.margins.bottom}in !important;\n                margin-left: ${this.options.page.margins.left}in !important;\n                margin-right: ${this.options.page.margins.right}in !important;\n                bleed: auto;\n                @bottom-center {\n                    content: counter(page) ' of ' counter(pages);\n                }\n            }\n\n            .report-page {\n                padding-top: 0px !important;\n                padding-bottom: 0px !important;\n                padding-left: 0px !important;\n                padding-right: 0px !important; \n                box-shadow: none;\n                border: none;\n                margin-left: inherit;\n                margin-right: inherit;    \n                width : ${width}mm;\n                height: ${height}mm;          \n            }\n \n            .no-print {\n                display: none;\n            }\n          \n            .report-viewer-canvas {\n                overflow:visible;\n                height: auto;\n                padding:0px;\n            }\n                                            \n            table { page-break-after:auto }\n            tr    { page-break-inside:avoid; page-break-after:auto }\n            td    { page-break-inside:avoid; page-break-after:auto }\n            thead { display:table-header-group }\n            tfoot { display:table-footer-group }\n        }`;\n\n        $('#' + this.options.id + '_style').text(s);\n        this.app.modules.Printing.applyPageStyles();\n    }\n\n    /**\n     * Scales report section to fit in page width\n     */\n    scaleReportSections() {\n\n        $('.table-report-section').each(function () {\n\n            if ($(this).width() > 0) {\n                var ratio = $('#reportPage').width() / $(this).width();\n                if (ratio != 1) {\n                    $(this).css('transform', 'scaleX(' + parseFloat(ratio).toFixed(2) + ')');\n                    $(this).css('transform-origin', 'top left')\n                }\n            }\n\n        });\n\n    }\n\n    /**\n     * Displays report settings right off canvas\n     */\n    showReportSettings() {\n\n        if (this.settingsOffCanvas === null) {\n            this.settingsOffCanvas = new bootstrap.Offcanvas($('#' + this.options.id + '_settingsOffCanvas')[0], {})\n        }\n        this.settingsOffCanvas.show();\n\n    }\n\n    refreshReportSettings() {\n\n        for (var kSection in this.report.getReportDefinition().sections) {\n            var oSection = this.report.getReportDefinition().sections[kSection];\n\n            for (var y in oSection.model) {\n                var field = oSection.model[y];\n                var bIsVisible = true;\n                if (field.visible != undefined) {\n                    bIsVisible = this.app.modules.DataType.toBool(field.visible);\n                }\n                $('#' + oSection.id + '_field_' + oSection.model[y].name).prop('checked', bIsVisible);\n                if (field.formula) {\n                    $('#' + oSection.id + '_formula_' + oSection.model[y].name).val(field.formula);\n                } else {\n                    $('#' + oSection.id + '_formula_' + oSection.model[y].name).val('');\n                }\n                $('#' + oSection.id + '_label_' + oSection.model[y].name).html(field.label);\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Cancels report settings \n     */\n    cancelSettings() {\n        if (this.settingsOffCanvas !== null) {\n            this.settingsOffCanvas.hide();\n        }\n    }\n\n    /**\n     * Apply report settings\n     */\n    applySettings() {\n        if (this.settingsOffCanvas === null) {\n            this.settingsOffCanvas = new bootstrap.Offcanvas($('#' + this.app.viewer.options.id + '_settingsOffCanvas')[0], {})\n        }\n        this.settingsOffCanvas.hide();\n\n        // Update report properties name and description\n        this.report.getReportDefinition().properties.name = $('#reportSettingsName').val();\n        this.report.getReportDefinition().properties.description = $('#reportSettingsDescription').val();\n\n        // Update report sections \n        for (var x in this.report.getReportDefinition().sections) {\n            var oSection = this.report.getReportDefinition().sections[x];\n\n            /**\n             * Apply field settings\n             */\n            for (var f in oSection.model) {\n                var oCol = oSection.model[f];\n                oCol.visible = $('#' + oSection.id + '_field_' + oCol.name).prop('checked');\n                oCol['formula'] = $('#' + oSection.id + '_formula_' + oCol.name).val();\n            }\n\n            /**\n             * Reorder model columns\n             */\n            $('#' + oSection.id + '_fields tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n                oSection.model.forEach(function (item, i) {\n                    if (item.name == columnName) {\n                        oSection.model.splice(i, 1);\n                        oSection.model.unshift(item);\n                    }\n                });\n            });\n\n            oSection.model.reverse();\n\n            /**\n             * Apply order by settings\n             */\n\n            oSection.orderBy = [];\n            $('#' + oSection.id + '_orderBy tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n\n                if ($('#' + oSection.id + '_orderBy_' + columnName).prop('checked')) {\n                    oSection.orderBy.push({\n                        \"name\": columnName,\n                        \"order\": $('#' + oSection.id + '_orderByOrder_' + columnName).val()\n                    });\n                }\n\n            });\n\n            oSection.groupBy = [];\n            $('#' + oSection.id + '_groupBy tbody tr').each(function () {\n                var columnName = $(this).attr('data-column');\n\n                if ($('#' + oSection.id + '_groupBy_' + columnName).prop('checked')) {\n                    oSection.groupBy.push({\n                        \"name\": columnName,\n                        \"order\": $('#' + oSection.id + '_groupByOrder_' + columnName).val()\n                    });\n                }\n\n            });\n\n\n        }\n\n        /**\n         * Apply settings changes\n         */\n        $('#' + this.options.id + '_headerName').html(this.report.getReportDefinition().properties.name);\n        $('#' + this.options.id + '_headerDescription').html(this.report.getReportDefinition().properties.description);\n\n        this.refreshReport();\n\n    }\n\n    /**\n     * Hide main toolbar in report viewer\n     */\n    hideToolbar() {\n        $('#' + this.report.id + '_toolbar').hide();\n    }\n\n    /**\n     * Show main toolbar in report viewer\n     */\n    showToolbar() {\n        $('#' + this.report.id + '_toolbar').show();\n    }\n\n\n    /**\n     * Returns container element selector\n     * @returns \n     */\n    getContainerSelector() {\n        return '#' + this.options.id;\n    }\n\n}\nwindow.__Metadocx.ReportViewer = ReportViewer;\n/** \n * BooleanCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass BooleanCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    initializeJS() {\n\n    }\n\n    render() {\n\n        return `<div class=\"form-check mb-2\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"${this.id}_yes\">\n                    <label class=\"form-check-label\" for=\"${this.id}_yes\">\n                        Yes\n                    </label>\n                </div>\n                <div class=\"form-check mb-2\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"${this.id}_no\">\n                    <label class=\"form-check-label\" for=\"${this.id}_no\">\n                        No\n                    </label>\n                </div>`;\n\n    }\n\n    getValue() {\n        var bYes = $('#' + this.id + '_yes').prop('checked');\n        var bNo = $('#' + this.id + '_no').prop('checked');\n\n        if (bYes && bNo) {\n            return 'ALL';\n        } else {\n            return bYes;\n        }\n\n    }\n\n    setValue(v) {\n\n        if (v === 'ALL') {\n            $('#' + this.id + '_yes').prop('checked', true);\n            $('#' + this.id + '_no').prop('checked', true);\n\n        } else {\n            $('#' + this.id + '_yes').prop('checked', v);\n            $('#' + this.id + '_no').prop('checked', !v);\n        }\n\n    }\n\n\n\n}\nwindow.__Metadocx.BooleanCriteria = BooleanCriteria;\n/** \n * CheckboxCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass CheckboxCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    /**\n     * Render criteria HTML\n     * @returns \n     */\n    render() {\n\n        var sCheckboxes = '';\n\n        if (Array.isArray(this.reportCriteria.options)) {\n\n            for (var x in this.reportCriteria.options) {\n                sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                    <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${this.reportCriteria.options[x].id}\" value=\"${this.reportCriteria.options[x].id}\">\n                                    <label class=\"form-check-label\" for=\"chk${this.id}_${this.reportCriteria.options[x].id}\">\n                                        ${this.reportCriteria.options[x].text}\n                                    </label>\n                                </div>`;\n\n            }\n\n        } else {\n\n            if (this.reportCriteria.options.source == 'data') {\n                /**\n                 * Use existing data to create options\n                 */\n                sCheckboxes = this.buildCheckboxesFromReportData(this.reportCriteria.options.field);\n            } else if (this.reportCriteria.options.source == 'ajax') {\n                sCheckboxes = '<div id=\"__tempHolder' + this.id + '\"></div>';\n                this.getCheckboxOptionsFromAjax(this.reportCriteria.options.url);\n            }\n\n        }\n\n        return `<div class=\"row\">${sCheckboxes}</div>`;\n\n    }\n\n    /**\n     * Calls page for list of options\n     * @param {*} url \n     */\n    getCheckboxOptionsFromAjax(url) {\n\n        $.get(url, (data, status) => {\n\n            this.buildCheckboxesFromAjaxData(data);\n\n        });\n\n    }\n\n    /**\n     * Builds checkboxes from ajax response\n     * @param {*} response \n     */\n    buildCheckboxesFromAjaxData(response) {\n\n        var sCheckboxes = '';\n        var data = response.results;\n        for (var x in data) {\n            sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${data[x].id}\" value=\"${data[x].id}\">\n                                <label class=\"form-check-label\" for=\"chk${this.id}_${data[x].id}\">\n                                    ${data[x].text}\n                                </label>\n                            </div>`;\n\n        }\n        $('#__tempHolder' + this.id).replaceWith(sCheckboxes);\n\n    }\n\n    /**\n     * Loads checkboxes from report data\n     * @param {*} field \n     * @returns \n     */\n    buildCheckboxesFromReportData(field) {\n        var sCheckboxes = '';\n        var aOptions = [];\n        var aReportSections = this.app.viewer.report.getReportSections();\n        for (var s in aReportSections) {\n            for (var x in aReportSections[s].data) {\n                var row = aReportSections[s].data[x];\n                if (aOptions.indexOf(row[field]) === -1) {\n                    aOptions.push(row[field]);\n                }\n            }\n        }\n\n        aOptions.sort();\n\n        var nIndex = 0;\n        for (var x in aOptions) {\n            sCheckboxes += `<div class=\"col-3 form-check mb-2\">\n                                    <input class=\"form-check-input report-checkbox-criteria\" data-criteria-id=\"${this.id}\"  type=\"checkbox\" id=\"chk${this.id}_${nIndex}\" value=\"${aOptions[x]}\">\n                                    <label class=\"form-check-label\" for=\"chk${this.id}_${nIndex}\">\n                                        ${aOptions[x]}\n                                    </label>\n                                </div>`;\n            nIndex++;\n        }\n\n        return sCheckboxes;\n\n    }\n\n    /**\n     * Returns criteria select value(s)\n     * @returns array\n     */\n    getValue() {\n\n        var values = [];\n        $('.report-checkbox-criteria[data-criteria-id=\"' + this.id + '\"]').each(function () {\n            if ($(this).prop('checked')) {\n                values.push($(this).val());\n            }\n        });\n\n        return values;\n    }\n\n}\nwindow.__Metadocx.CheckboxCriteria = CheckboxCriteria;\n/** \n * DatePeriodCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DatePeriodCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    initializeJS() {\n\n        this.reportCriteria.parameters.ranges = {\n            \"Today\": [moment(), moment()],\n            \"Yesterday\": [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n            \"Last 7 Days\": [moment().subtract(6, 'days'), moment()],\n            \"Last 30 Days\": [moment().subtract(29, 'days'), moment()],\n            \"This Month\": [moment().startOf('month'), moment().endOf('month')],\n            \"Last Month\": [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n        };\n\n        this._instance = $('#' + this.id).daterangepicker(this.reportCriteria.parameters);\n    }\n\n    render() {\n\n        return `<div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"${this.id}\">\n                        ${this.reportCriteria.name}\n                    </label>            \n                    <input id=\"${this.id}\" class=\"form-control\"/>                        \n                </div>`;\n\n    }\n\n    getValue() {\n        return {\n            startDate: this._instance.data('daterangepicker').startDate.format('YYYY-MM-DD'),\n            endDate: this._instance.data('daterangepicker').endDate.format('YYYY-MM-DD'),\n        };\n    }\n\n    setValue(v) {\n        this._instance.data('daterangepicker').setStartDate(v.startDate);\n        this._instance.data('daterangepicker').setEndDate(v.endDate);\n    }\n\n    setStartDate(dt) {\n        this._instance.data('daterangepicker').setStartDate(dt);\n    }\n\n    setEndDate(dt) {\n        this._instance.data('daterangepicker').setEndDate(dt);\n    }\n\n}\nwindow.__Metadocx.DatePeriodCriteria = DatePeriodCriteria;\n/** \n * NumericCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass NumericCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = [];\n    }\n\n    initializeJS() {\n        this._instance = $('#' + this.id).daterangepicker(this.reportCriteria.parameters);\n    }\n\n    render() {\n\n        return `<div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"${this.id}\">\n                        ${this.reportCriteria.name}\n                    </label>            \n                    <input id=\"${this.id}\" class=\"form-control\"/>                        \n                </div>`;\n\n    }\n\n    getValue() {\n        return {\n            startDate: this._instance.data('daterangepicker').startDate.format('YYYY-MM-DD'),\n            endDate: this._instance.data('daterangepicker').endDate.format('YYYY-MM-DD'),\n        };\n    }\n\n    setValue(v) {\n        this._instance.data('daterangepicker').setStartDate(v.startDate);\n        this._instance.data('daterangepicker').setEndDate(v.endDate);\n    }\n\n\n\n}\nwindow.__Metadocx.NumericCriteria = NumericCriteria;\n/** \n * SelectCriteria\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass SelectCriteria extends CriteriaControl {\n\n    constructor(app) {\n        super(app);\n        this.options = {};\n    }\n\n    initializeJS() {\n\n        if (!Array.isArray(this.reportCriteria.options)) {\n            if (this.reportCriteria.options.source = 'ajax' && this.reportCriteria.options.url) {\n                this.reportCriteria.parameters.ajax = {\n                    url: this.reportCriteria.options.url,\n                    dataType: 'json'\n                };\n            }\n        }\n\n        this._instance = $('#' + this.id).select2(this.reportCriteria.parameters);\n        $('#' + this.id).val(null).trigger(\"change\");\n    }\n\n    render() {\n\n        var sOptionTags = '';\n\n        if (Array.isArray(this.reportCriteria.options)) {\n\n            for (var x in this.reportCriteria.options) {\n                sOptionTags += `<option value=\"${this.reportCriteria.options[x].id}\">${this.reportCriteria.options[x].text}</option>`;\n            }\n\n        } else {\n\n            if (this.reportCriteria.options.source == 'data') {\n                /**\n                 * Use existing data to create options\n                 */\n                sOptionTags = this.buildOptionTagsFromReportData(this.reportCriteria.options.field);\n            } else if (this.reportCriteria.options.source == 'ajax') {\n\n            }\n\n        }\n\n\n\n        return `<div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"${this.id}\">\n                        ${this.reportCriteria.name}\n                    </label>            \n                    <select id=\"${this.id}\" class=\"form-control\">\n                        ${sOptionTags}\n                    </select>                    \n                </div>`;\n    }\n\n    getValue() {\n        return this._instance.select2('data');\n    }\n\n    buildOptionTagsFromReportData(field) {\n        var sOptionTags = '';\n        var aOptions = [];\n        var aReportSections = this.app.viewer.report.getReportSections();\n        for (var s in aReportSections) {\n            for (var x in aReportSections[s].data) {\n                var row = aReportSections[s].data[x];\n                if (aOptions.indexOf(row[field]) === -1) {\n                    aOptions.push(row[field]);\n                }\n            }\n        }\n\n        aOptions.sort();\n\n        for (var x in aOptions) {\n            sOptionTags += `<option value=\"${aOptions[x]}\">${aOptions[x]}</option>`;\n        }\n\n        return sOptionTags;\n\n    }\n\n\n\n}\nwindow.__Metadocx.SelectCriteria = SelectCriteria;\n/**\n * Browser module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass BrowserModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Returns browser type\n     * @returns \n     */\n    getBrowser() {\n        if (this.isChrome()) {\n            return 'chrome';\n        } else if (this.isIE()) {\n            return 'ie';\n        } else if (this.isEdge()) {\n            return 'edge';\n        } else if (this.isFirefox()) {\n            return 'firefox';\n        } else if (this.isSafari()) {\n            return 'safari';\n        } else if (this.isIOSChrome()) {\n            return 'chrome';\n        }\n    }\n\n    /**\n     * Check if browser is chrome\n     * @returns \n     */\n    isChrome() {\n        return !!window.chrome;\n    }\n\n    /**\n     * Check if browser is internet explorer\n     * @returns \n     */\n    isIE() {\n        return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n    }\n\n    /**\n     * Check if browser is Edge\n     * @returns \n     */\n    isEdge() {\n        return !this.isIE() && !!window.StyleMedia\n    }\n\n    /**\n     * Check if browser is firefox\n     * @returns \n     */\n    isFirefox() {\n        return typeof InstallTrigger !== 'undefined'\n    }\n\n    /**\n     * Check if browser is safari\n     * @returns \n     */\n    isSafari() {\n        return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n            navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n    }\n\n    /**\n     * Check if browser is chrome on iOs\n     * @returns \n     */\n    isIOSChrome() {\n        return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n    }\n\n\n\n}\nwindow.__Metadocx.BrowserModule = BrowserModule;\n/**\n * Console module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ConsoleModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.app = app;\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n        this.tag = null;\n        this.color = '#fff';\n        this.backColor = 'blue';\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Sets tag (text) to prepend to message\n     */\n    setTag(sTag) {\n        this.tag = sTag;\n        return this;\n    }\n\n    /**\n     * Sets tag color\n     * @param {*} sColor \n     * @param {*} sBackColor \n     * @returns object\n     */\n    setColor(sColor, sBackColor) {\n        this.color = sColor;\n        this.backColor = sBackColor;\n        return this;\n    }\n\n    /**\n    * The console.assert() method writes an error message to the console if the assertion is false. \n    * If the assertion is true, nothing happens.\n    */\n    assert() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.assert.apply(null, arguments);\n    }\n\n    /**\n     * The console.clear() method clears the console if the environment allows it.\n     */\n    clear() {\n        console.clear();\n    }\n\n    /**\n     * The console.count() method logs the number of times that this particular call to count() has been called.\n     */\n    count() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.count.apply(null, arguments);\n    }\n\n    /**\n     * The console.countReset() method resets counter used with console.count().\n     */\n    countReset() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.countReset.apply(null, arguments);\n    }\n\n    /**\n     * The console.debug() method outputs a message to the web console at the \"debug\" log level. \n     * The message is only displayed to the user if the console is configured to display debug output. \n     * In most cases, the log level is configured within the console UI. \n     * This log level might correspond to the `Debug` or `Verbose` log level.\n     * @param {*} sMessage      \n     */\n    debug(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.debug.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The method console.dir() displays an interactive list of the properties of the specified JavaScript object. \n     * The output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects.\n     * In other words, console.dir() is the way to see all the properties of a specified JavaScript object \n     * in console by which the developer can easily get the properties of the object.\n     * @param {*}      \n     */\n    dir() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.dir.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n\n    }\n\n    /**\n     * The console.error() method outputs an error message to the Web console.\n     * @param {*} sMessage      \n     */\n    error(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.error.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.group() method creates a new inline group in the Web console log,\n     * causing any subsequent console messages to be indented by an additional level, \n     * until console.groupEnd() is called.     \n     */\n    group() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.group.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.groupCollapsed() method creates a new inline group in the Web Console. \n     * Unlike console.group(), however, the new group is created collapsed. \n     * The user will need to use the disclosure button next to it to expand it, revealing the entries created in the group.\n     * Call console.groupEnd() to back out to the parent group.     \n     */\n    groupCollapsed() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.groupCollapsed.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.groupEnd() method exits the current inline group in the Web console. \n     * See Using groups in the console in the console documentation for details and examples.     \n     */\n    groupEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.groupEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.info() method outputs an informational message to the Web console. \n     * In Firefox, a small \"i\" icon is displayed next to these items in the Web console's log.\n     * @param {*} sMessage      \n     */\n    info() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.info.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.log() method outputs a message to the web console. \n     * The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects.     \n     */\n    log() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.log.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.profile() starts recording a performance profile (for example, the Firefox performance tool).\n     * You can optionally supply an argument to name the profile and this then enables you to stop only that profile\n     *  if multiple profiles being recorded. See console.profileEnd() to see how this argument is interpreted.\n     * @param {*} sName      \n     */\n    profile() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.profile.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.profileEnd() method stops recording a profile previously started with console.profile().\n     * @param {*} sName      \n     */\n    profileEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.profileEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * This function takes one mandatory argument data, which must be an array or an object, \n     * and one additional optional parameter columns.\n     * \n     * It logs data as a table. Each element in the array (or enumerable property if data is an object) \n     * will be a row in the table.\n     * \n     * The first column in the table will be labeled (index). If data is an array, \n     * then its values will be the array indices. If data is an object, then its values will be the property names. \n     * \n     * Note that (in Firefox) console.table is limited to displaying 1000 rows (first row is the labeled index).\n     * \n     * @param {*} e \n     */\n    table() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n        console.table.apply(console, arguments);\n    }\n\n    /**\n     * The console.time() method starts a timer you can use to track how long an operation takes. \n     * You give each timer a unique name, and may have up to 10,000 timers running on a given page. \n     * When you call console.timeEnd() with the same name, the browser will output the time, in milliseconds, \n     * that elapsed since the timer was started.     \n     */\n    time() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.time.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.timeEnd() stops a timer that was previously started by calling console.time().     \n     */\n    timeEnd() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.timeEnd.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.timeLog() method logs the current value of a timer that was previously started \n     * by calling console.time() to the console.     \n     */\n    timeLog() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.timeLog.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.trace() method outputs a stack trace to the Web console.     \n     */\n    trace() {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.trace.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * The console.warn() method outputs a warning message to the Web console.\n     * @param {*} sMessage      \n     */\n    warn(sMessage) {\n        if (this.isConsoleDisabled) {\n            return false;\n        }\n\n        console.warn.apply(console, this.buildArguments(arguments));\n\n        /**\n         * Reset color and module\n         */\n        this.setTag(null);\n        this.setColor('#fff', 'blue');\n    }\n\n    /**\n     * Build arguments for log methods with format options\n     * @param {*} args \n     * @returns array\n     */\n    buildArguments(args) {\n        var aArguments = [];\n        var sMessage = null;\n        var nFirstArg = 0;\n        if (args.length > 0) {\n            if (typeof args[0] == 'string') {\n                sMessage = args[0];\n                nFirstArg = 1;\n            }\n        }\n\n        if (this.tag && sMessage) {\n            sMessage = '%c' + this.tag.padEnd(10, ' ') + '%c ' + sMessage;\n            aArguments.push(sMessage);\n            aArguments.push('color:' + this.color + ';background-color:' + this.backColor + ';border-radius:3px;padding:2px;font-size:8pt;');\n            aArguments.push('color:#000;background-color:#fff');\n        } else if (sMessage) {\n            aArguments.push(sMessage);\n        }\n\n        for (var i = nFirstArg; i < args.length; i++) {\n            aArguments.push(args[i]);\n        }\n\n        return aArguments;\n    }\n\n    /**\n     * Disable console output\n     */\n    disable() {\n        this.isConsoleDisabled = true;\n        return this;\n    }\n\n    /**\n     * Enable console output\n     */\n    enable() {\n        this.isConsoleDisabled = false;\n        return this;\n    }\n\n    /**\n     * Display help for module\n     */\n    help() {\n        window.open('https://developer.mozilla.org/en-US/docs/Web/API/console');\n    }\n\n}\nwindow.__Metadocx.ConsoleModule = ConsoleModule;\n/**\n * DataType module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass DataTypeModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    /**\n     * Convert value to boolean value\n     * @param {*} v \n     * @returns \n     */\n    toBool(v) {\n        if (typeof v === 'string' || v instanceof String) {\n            v = v.toLowerCase();\n        }\n\n        switch (v) {\n            case true:\n            case \"true\":\n            case 1:\n            case \"1\":\n            case \"on\":\n            case \"yes\":\n            case \"oui\":\n            case \"vrai\":\n                return true;\n            default:\n                return false;\n        }\n\n    }\n\n    /**\n     * Parses float value\n     * @param {*} v \n     * @returns \n     */\n    parseFloat(v) {\n        return Number(v.toPrecision(15));\n    }\n\n    /**\n     * Deep copy of object \n     * @param {*} from \n     * @param {*} to \n     */\n    copyObjectProperties(from, to) {\n\n        for (var x in from) {\n            if (typeof from[x] === 'object') {\n                this.copyObjectProperties(from[x], to[x]);\n            } else {\n                to[x] = from[x];\n            }\n        }\n\n    }\n\n}\nwindow.__Metadocx.DataTypeModule = DataTypeModule;\n/**\n * Excel module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ExcelModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        if (this.exportDialog === null) {\n            $(this.app.viewer.getContainerSelector()).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_excelExportDialog', {})\n        }\n\n        $('#excelPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#excelPaperSize').val());\n        $('#excelPaperSizeWidth').val(paperSize.width);\n        $('#excelPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#excelOrientationPortrait').prop('checked', true);\n            $('#excelOrientationLandscape').prop('checked', false);\n        } else {\n            $('#excelOrientationPortrait').prop('checked', false);\n            $('#excelOrientationLandscape').prop('checked', true);\n        }\n\n        $('#excelTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#excelBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#excelLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#excelRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_excelExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Excel Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"excelPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"excelOrientation\" id=\"excelOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"excelOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"excelOrientation\" id=\"excelOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"excelOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"excelPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"excelPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 excelPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"excelPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"excelPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 excelPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"excelPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"excelPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelGrayscale\">\n                        <label class=\"form-check-label\" for=\"excelGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"excelUseCompression\">\n                            excel Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"excelIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"excelPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"excelTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"excelRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"excelRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"excelDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row excel-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"excelHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 excel-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelHeaderLine\">\n                        <label class=\"form-check-label\" for=\"excelHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"excelDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row excel-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"excelFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"excelFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 excel-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"excelFooterLine\">\n                        <label class=\"form-check-label\" for=\"excelFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.excel.exportexcel();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export excel</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#excelDisplayHeader').off('click').on('click', () => {\n            if ($('#excelDisplayHeader').prop('checked')) {\n                $('.excel-header-row').show();\n            } else {\n                $('.excel-header-row').hide();\n            }\n        });\n\n        $('#excelDisplayFooter').off('click').on('click', () => {\n            if ($('#excelDisplayFooter').prop('checked')) {\n                $('.excel-footer-row').show();\n            } else {\n                $('.excel-footer-row').hide();\n            }\n        });\n\n        $('#excelPaperSize').off('change').on('change', () => {\n            if ($('#excelPaperSize').val() == 'Custom') {\n                $('.excelPaperSizeWidths').css('display', '');\n                $('.excelPaperSizeWidths').show();\n            } else {\n                $('.excelPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#excelPaperSize').val());\n            $('#excelPaperSizeWidth').val(paperSize.width);\n            $('#excelPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getExcelExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#excelOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": $('#excelPaperSize').val(),\n                \"width\": $('#excelPaperSizeWidth').val(),\n                \"height\": $('#excelPaperSizeHeight').val(),\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelTopMargin').val())),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelBottomMargin').val())),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelLeftMargin').val())),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#excelRightMargin').val()))\n                }\n            },\n            \"grayscale\": $('#excelGrayscale').prop('checked'),\n            \"excelCompression\": $('#excelUseCompression').prop('checked'),\n            \"outline\": $('#excelIncludeOutline').prop('checked'),\n            \"backgroundGraphics\": $('#excelPrintBackgrounds').prop('checked'),\n            \"header\": {\n                \"left\": $('#excelHeaderLeft').val(),\n                \"center\": $('#excelHeaderCenter').val(),\n                \"right\": $('#excelHeaderRight').val(),\n                \"displayHeaderLine\": $('#excelHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": $('#excelFooterLeft').val(),\n                \"center\": $('#excelFooterCenter').val(),\n                \"right\": $('#excelFooterRight').val(),\n                \"displayFooterLine\": $('#excelFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportexcel() {\n        $.ajax({\n            type: 'post',\n            url: '/Convert/excel',\n            data: {\n                ExportOptions: this.getExcelExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#reportPage').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var blob = new Blob([data]);\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                link.download = \"Report.xls\";\n                link.click();\n\n            }\n        });\n    }\n\n\n}\nwindow.__Metadocx.ExcelModule = ExcelModule;\n/**\n * Format module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass FormatModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    format(value, dataType, format) {\n\n        var displayValue = '';\n\n        switch (dataType) {\n            case 'number':\n                if (format === undefined) {\n                    format = this.app.viewer.options.formats.number.format;\n                }\n                displayValue = numeral(value).format(format);\n                break;\n            case 'boolean':\n                if (value === 'ALL') {\n                    if (this.app.viewer.options.formats.boolean.format.ALL !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.ALL;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'All';\n                    }\n\n                } else if (value) {\n\n                    if (this.app.viewer.options.formats.boolean.format.trueValue !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.trueValue;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'Yes';\n                    }\n\n\n                } else {\n\n                    if (this.app.viewer.options.formats.boolean.format.falseValue !== undefined) {\n                        displayValue = this.app.viewer.options.formats.boolean.format.falseValue;\n                    } else {\n                        // default value if not options is available\n                        displayValue = 'No';\n                    }\n\n                }\n                break;\n            case 'date':\n                if (format === undefined) {\n                    format = this.app.viewer.options.formats.date.format;\n                }\n                displayValue = moment(value).format(format);\n                break;\n            default:\n                displayValue = value;\n                break;\n        }\n\n        return displayValue;\n\n    }\n\n\n\n}\nwindow.__Metadocx.FormatModule = FormatModule;\n/**\n * Import module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass ImportModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 200;\n        this.isConsoleDisabled = false;\n        this.loaded = false;\n        this.onLibrairiesLoaded = null;\n        this._bInjectionWasMade = false;\n\n        this.loadStatus = {};\n\n        this.stacks = {\n            default: {\n                requires: [\n                    'Metadocx', 'jQuery', 'IconScout', 'Numeral', 'Bootstrap', 'Select2', 'Moment', 'DateRangePicker'\n                ],\n            },\n        };\n\n        this.libraries = {\n            Metadocx: {\n                head: {\n                    links: [\n                        {\n                            id: 'metadocxcss',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: '/css/metadocx.css',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"metadocxcss\" rel=\"stylesheet\" href=\"/css/metadocx.css\" />',\n                        }\n                    ],\n                }\n            },\n            jQuery: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'jquery',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://code.jquery.com/jquery-3.6.1.min.js',\n                            crossorigin: 'anonymous',\n                            integrity: 'sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=',\n                            code: '<script id=\"jquery\" src=\"https://code.jquery.com/jquery-3.6.1.min.js\" integrity=\"sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=\" crossorigin=\"anonymous\"></script>',\n                        }\n                    ],\n                }\n            },\n            FontAwesome: {\n                head: {\n                    links: [\n                        {\n                            id: 'fontawesome',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css',\n                            integrity: 'sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==',\n                            crossorigin: 'anonymous',\n                            referrerpolicy: 'no-referrer',\n                            code: '<link id=\"fontawesome\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css\" integrity=\"sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />',\n                        },\n                    ],\n                }\n            },\n            IconScout: {\n                head: {\n                    links: [\n                        {\n                            id: 'iconscoutcss',\n                            type: 'link',\n                            priority: 100,\n                            rel: 'stylesheet',\n                            href: 'https://unicons.iconscout.com/release/v4.0.0/css/line.css',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"iconscoutcss\" rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\">        ',\n                        },\n                    ],\n                }\n            },\n            Moment: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'momentjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/momentjs/latest/moment.min.js',\n                            code: '<script id=\"momentjs\" src=\"https://cdn.jsdelivr.net/momentjs/latest/moment.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            DateRangePicker: {\n                head: {\n                    links: [\n                        {\n                            id: 'daterangepickercss',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css',\n                            rel: 'stylesheet',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"daterangepickercss\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'daterangepickerjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js',\n                            code: '<script id=\"daterangepickerjs\" src=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            Numeral: {\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'numeral',\n                            type: 'script',\n                            priority: 100,\n                            src: '//cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js',\n                            code: '<script id=\"numeral\" src=\"//cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js\"></script>',\n                        },\n                    ],\n                },\n            },\n            Bootstrap: {\n                head: {\n                    links: [\n                        {\n                            id: 'bootstrapcss',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css',\n                            rel: 'stylesheet',\n                            integrity: 'sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"bootstrapcss\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'popperjs',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js',\n                            integrity: 'sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"popperjs\" src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\" integrity=\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\" crossorigin=\"anonymous\"></script>',\n                        },\n                        {\n                            id: 'bootstrapjs',\n                            type: 'script',\n                            priority: 110,\n                            src: 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js',\n                            integrity: 'sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"bootstrapjs\" src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>',\n                        },\n                    ],\n                }\n            },\n            Select2: {\n                head: {\n                    links: [\n                        {\n                            id: 'select2css',\n                            type: 'link',\n                            priority: 100,\n                            href: 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css',\n                            rel: 'stylesheet',\n                            crossorigin: 'anonymous',\n                            code: '<link id=\"select2css\" href=\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css\" rel=\"stylesheet\" />',\n                        }\n                    ],\n                },\n                bottom: {\n                    scripts: [\n                        {\n                            id: 'select2js',\n                            type: 'script',\n                            priority: 100,\n                            src: 'https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js',\n                            crossorigin: 'anonymous',\n                            code: '<script id=\"select2js\" src=\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js\"></script>',\n                        },\n                    ],\n                }\n            },\n        };\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    isLoaded() {\n\n        for (var x in this.loadStatus) {\n            if (!this.loadStatus[x].loaded) {\n                return false;\n            }\n        }\n\n        return true;\n\n    }\n\n\n\n    injectLibrary(libName) {\n        var sections = this.libraries[libName];\n        if (sections.head && sections.head.links) {\n            for (var x in sections.head.links) {\n                if ($('#' + sections.head.links[x].id).length == 0) {\n                    this.log('   Injecting head link ' + sections.head.links[x].id);\n                    this.createElement(sections.head.links[x]);\n                } else {\n                    this.log('   Script ' + sections.head.links[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.head && sections.head.scripts) {\n            for (var x in sections.head.scripts) {\n                if ($('#' + sections.head.scripts[x].id).length == 0) {\n                    this.log('   Injecting head script ' + sections.head.scripts[x].id);\n                    this.createElement(sections.head.scripts[x]);\n                } else {\n                    this.log('   Script ' + sections.head.scripts[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.bottom && sections.bottom.links) {\n            for (var x in sections.bottom.links) {\n                if ($('#' + sections.bottom.links[x].id).length == 0) {\n                    this.log('   Injecting bootom link ' + sections.bottom.links[x].id);\n                    this.createElement(sections.bottom.links[x]);\n                } else {\n                    this.log('   Script ' + sections.bottom.links[x].id + ' already loaded');\n                }\n            }\n        }\n\n        if (sections.bottom && sections.bottom.scripts) {\n            for (var x in sections.bottom.scripts) {\n                if ($('#' + sections.bottom.scripts[x].id).length == 0) {\n                    this.log('   Injecting bottom script ' + sections.bottom.scripts[x].id);\n                    this.createElement(sections.bottom.scripts[x]);\n                } else {\n                    this.log('   Script ' + sections.bottom.scripts[x].id + ' already loaded');\n                }\n            }\n        }\n    }\n\n    triggerLibrariesLoaded(libName) {\n\n        if (this.loadStatus[libName]) {\n            this.loadStatus[libName].loaded = true;\n        }\n\n        if (this.isLoaded()) {\n            if (this.onLibrairiesLoaded) {\n                this.onLibrairiesLoaded();\n            }\n        }\n    }\n\n    createElement(options) {\n\n        var module = this;\n\n        if (document.getElementById(id)) {\n            console.log('Package is already loaded, skipping');\n            return;\n        }\n\n        this._bInjectionWasMade = true;\n\n        this.loadStatus[options.id] = {\n            loaded: false,\n        };\n\n        (function (d, s, id) {\n            var js, lsjs = d.getElementsByTagName(s)[0];\n\n            if (d.getElementById(id)) {\n                console.log('Package is already loaded, skipping');\n                return;\n            }\n            js = d.createElement(s); js.id = id;\n            if (options.onload) {\n                js.onload = options.onload;\n            } else {\n                js.onload = () => {\n                    module.triggerLibrariesLoaded(id);\n                };\n            }\n            if (options.src) {\n                js.src = options.src;\n            }\n            if (options.crossorigin) {\n                js.crossOrigin = options.crossorigin;\n            }\n            if (options.integrity) {\n                js.integrity = options.integrity;\n            }\n            if (options.href) {\n                js.href = options.href;\n            }\n            if (options.rel) {\n                js.rel = options.rel;\n            }\n            if (!lsjs) {\n                // Inject in head\n                lsjs = document.getElementsByTagName('head')[0];\n                lsjs.appendChild(js);\n            } else {\n                lsjs.parentNode.insertBefore(js, lsjs);\n            }\n\n        }(document, options.type, options.id));\n    }\n\n    injectRequiredLibraries() {\n        console.groupCollapsed('[Metadocx] Import injectRequiredLibraries');\n\n        if (this.app.viewer.options.ui == undefined) {\n            this.app.viewer.options.ui = 'default';\n        }\n\n        this.log('Injecting required librairies for stack ' + this.app.viewer.options.ui);\n        for (var x in this.stacks[this.app.viewer.options.ui].requires) {\n            var libName = this.stacks[this.app.viewer.options.ui].requires[x];\n            this.injectLibrary(libName);\n        }\n\n        if (!this._bInjectionWasMade) {\n            // No injection made call \n            if (this.onLibrairiesLoaded) {\n                this.onLibrairiesLoaded();\n            }\n        }\n\n    }\n\n\n}\nwindow.__Metadocx.ImportModule = ImportModule;\n/**\n * PDF module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass PDFModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.color = '#fff';\n        this.backColor = 'red';\n\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        if (this.exportDialog === null) {\n\n            $('#' + this.app.viewer.options.container).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_pdfExportDialog', {})\n        }\n\n        $('#pdfPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#pdfPaperSize').val());\n        $('#pdfPaperSizeWidth').val(paperSize.width);\n        $('#pdfPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#pdfOrientationPortrait').prop('checked', true);\n            $('#pdfOrientationLandscape').prop('checked', false);\n        } else {\n            $('#pdfOrientationPortrait').prop('checked', false);\n            $('#pdfOrientationLandscape').prop('checked', true);\n        }\n\n        $('#pdfTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#pdfBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#pdfLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#pdfRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n    hideExportDialog() {\n        if (this.exportDialog !== null) {\n            this.exportDialog.hide();\n        }\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_pdfExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">PDF Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"pdfPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"pdfOrientation\" id=\"pdfOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"pdfOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"pdfOrientation\" id=\"pdfOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"pdfOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"pdfPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"pdfPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 pdfPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"pdfPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"pdfPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 pdfPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"pdfPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"pdfPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfGrayscale\">\n                        <label class=\"form-check-label\" for=\"pdfGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"pdfUseCompression\">\n                            PDF Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"pdfIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"pdfPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"pdfRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"pdfRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"pdfDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row pdf-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"pdfHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 pdf-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfHeaderLine\">\n                        <label class=\"form-check-label\" for=\"pdfHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"pdfDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row pdf-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"pdfFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"pdfFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 pdf-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"pdfFooterLine\">\n                        <label class=\"form-check-label\" for=\"pdfFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.PDF.exportPDF();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export PDF</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#pdfDisplayHeader').off('click').on('click', () => {\n            if ($('#pdfDisplayHeader').prop('checked')) {\n                $('.pdf-header-row').show();\n            } else {\n                $('.pdf-header-row').hide();\n            }\n        });\n\n        $('#pdfDisplayFooter').off('click').on('click', () => {\n            if ($('#pdfDisplayFooter').prop('checked')) {\n                $('.pdf-footer-row').show();\n            } else {\n                $('.pdf-footer-row').hide();\n            }\n        });\n\n        $('#pdfPaperSize').off('change').on('change', () => {\n            if ($('#pdfPaperSize').val() == 'Custom') {\n                $('.pdfPaperSizeWidths').css('display', '');\n                $('.pdfPaperSizeWidths').show();\n            } else {\n                $('.pdfPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#pdfPaperSize').val());\n            $('#pdfPaperSizeWidth').val(paperSize.width);\n            $('#pdfPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getPDFExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#pdfOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        var paperSize = this.app.viewer.options.page.paperSize;\n        if ($('#pdfPaperSize').length > 0) {\n            paperSize = $('#pdfPaperSize').val();\n        }\n\n        var paperSizeInfo = this.app.modules.Printing.getPaperSize(paperSize);\n        var width = paperSizeInfo.width;\n        var height = paperSizeInfo.height;\n        if ($('#pdfPaperSizeWidth').length > 0) {\n            width = $('#pdfPaperSizeWidth').val();\n        }\n        if ($('#pdfPaperSizeHeight').length > 0) {\n            height = $('#pdfPaperSizeHeight').val();\n        }\n        var grayscale = true;\n        if ($('#pdfGrayscale').length > 0) {\n            grayscale = $('#pdfGrayscale').prop('checked');\n        }\n        var marginTop = $('#pdfTopMargin').val();\n        if (marginTop == undefined) {\n            marginTop = this.app.viewer.options.page.margins.top;\n        }\n        var marginBottom = $('#pdfBottomMargin').val();\n        if (marginBottom == undefined) {\n            marginBottom = this.app.viewer.options.page.margins.bottom;\n        }\n        var marginLeft = $('#pdfLeftMargin').val();\n        if (marginLeft == undefined) {\n            marginLeft = this.app.viewer.options.page.margins.left;\n        }\n        var marginRight = $('#pdfRightMargin').val();\n        if (marginRight == undefined) {\n            marginRight = this.app.viewer.options.page.margins.right;\n        }\n        var pdfCompression = $('#pdfUseCompression').prop('checked');\n        if (pdfCompression == undefined) {\n            pdfCompression = true;\n        }\n        var outline = $('#pdfIncludeOutline').prop('checked');\n        if (outline == undefined) {\n            outline = true;\n        }\n        var backgroundGraphics = $('#pdfPrintBackgrounds').prop('checked');\n        if (backgroundGraphics == undefined) {\n            backgroundGraphics = true;\n        }\n\n        var headerLeft = $('#pdfHeaderLeft').val();\n        if (headerLeft == undefined) {\n            headerLeft = '';\n        }\n        var headerCenter = $('#pdfHeaderCenter').val();\n        if (headerCenter == undefined) {\n            headerCenter = '';\n        }\n        var headerRight = $('#pdfHeaderRight').val();\n        if (headerRight == undefined) {\n            headerRight = '';\n        }\n\n        var footerLeft = $('#pdfFooterLeft').val();\n        if (footerLeft == undefined) {\n            footerLeft = '';\n        }\n        var footerCenter = $('#pdfFooterCenter').val();\n        if (footerCenter == undefined) {\n            footerCenter = '';\n        }\n        var footerRight = $('#pdfFooterRight').val();\n        if (footerRight == undefined) {\n            footerRight = '';\n        }\n\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": paperSize,\n                \"width\": width,\n                \"height\": height,\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginTop)),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginBottom)),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginLeft)),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat(marginRight))\n                }\n            },\n            \"grayscale\": grayscale,\n            \"pdfCompression\": pdfCompression,\n            \"outline\": outline,\n            \"backgroundGraphics\": backgroundGraphics,\n            \"header\": {\n                \"left\": headerLeft,\n                \"center\": headerCenter,\n                \"right\": headerRight,\n                \"displayHeaderLine\": $('#pdfHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": footerLeft,\n                \"center\": footerCenter,\n                \"right\": footerRight,\n                \"displayFooterLine\": $('#pdfFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportPDF() {\n\n        var thisObject = this;\n\n        /**\n         * Get export options and hide dialog\n         */\n        var pdfOptions = this.getPDFExportOptions();\n        this.hideExportDialog();\n\n        /**\n         * Show exporting dialog\n         */\n        var exportDialog = bootbox.dialog({\n            title: 'Export to PDF',\n            message: '<p><i class=\"fas fa-spin fa-spinner\"></i> Exporting report to PDF...</p>'\n        });\n\n        /**\n         * Call export service\n         */\n        $.ajax({\n            type: 'post',\n            url: '/Metadocx/Convert/PDF',\n            data: {\n                PDFOptions: pdfOptions,\n                HTML: btoa(unescape(encodeURIComponent($('#' + this.app.viewer.report.id + '_canvas').html()))),\n\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n\n\n                var blob = new Blob([data]);\n                //var link = document.createElement('a');\n                //link.href = window.URL.createObjectURL(blob);\n                //link.download = \"Report.pdf\";\n\n                var sContent = `Report has been converted to PDF, click on button to download file<br><br>\n                <a class=\"btn btn-primary\" href=\"${window.URL.createObjectURL(blob)}\" download=\"Report.pdf\" onClick=\"$('.bootbox.modal').modal('hide');\">Download report</a>`;\n\n                exportDialog.find('.bootbox-body').html(sContent);\n\n                thisObject.hideExportDialog();\n                thisObject.app.modules.Printing.applyPageStyles();\n\n            }\n        });\n    }\n\n    print() {\n\n        var thisObject = this;\n\n        var loadingDialog = bootbox.dialog({\n            message: '<p class=\"text-center mb-0\"><i class=\"fas fa-spin fa-cog\"></i> Generating and printing report...</p>',\n            closeButton: false\n        });\n\n        //$('#reportPage').css('max-width', '');\n        //$('#reportPage').css('width', '');\n        //$('#reportPage').css('min-height', '');\n\n        //$('#reportPage').css('padding-top', '');\n        //$('#reportPage').css('padding-bottom', '');\n        //$('#reportPage').css('padding-left', '');\n        //$('#reportPage').css('padding-right', '');\n        //$('#reportPage').css('margin-right', '1px');\n\n        $.ajax({\n            type: 'post',\n            url: '/Metadocx/Convert/PDF',\n            data: {\n                PDFOptions: this.getPDFExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#' + this.app.viewer.report.id + '_canvas').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var pdfBlob = new Blob([data], { type: 'application/pdf' });\n                pdfBlob = window.URL.createObjectURL(pdfBlob)\n\n                $('#__metadocxPDFPrint').remove();\n\n                var printFrame = document.createElement('iframe');\n                printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute; border: 0');\n                printFrame.setAttribute('id', '__metadocxPDFPrint');\n                printFrame.setAttribute('src', pdfBlob);\n\n                document.getElementsByTagName('body')[0].appendChild(printFrame);\n                var iframeElement = document.getElementById('__metadocxPDFPrint');\n\n                iframeElement.onload = () => {\n                    iframeElement.focus();\n                    iframeElement.contentWindow.print();\n                }\n\n                thisObject.app.modules.Printing.applyPageStyles();\n                //$('#reportPage').css('margin-right', 'auto');\n\n                loadingDialog.modal('hide');\n\n            }\n        });\n\n\n    }\n\n\n}\nwindow.__Metadocx.PDFModule = PDFModule;\n/**\n * Printing module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass PrintingModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 100;\n        this.isConsoleDisabled = false;\n\n        /**\n         * Types of paper sizes\n         */\n        this.PaperSize = {\n            A0: 'A0',\n            A1: 'A1',\n            A2: 'A2',\n            A3: 'A3',\n            A4: 'A4',\n            A5: 'A5',\n            A6: 'A6',\n            A7: 'A7',\n            A8: 'A8',\n            A9: 'A9',\n            B0: 'B0',\n            B1: 'B1',\n            B2: 'B2',\n            B3: 'B3',\n            B4: 'B4',\n            B5: 'B5',\n            B6: 'B6',\n            B7: 'B7',\n            B8: 'B8',\n            B9: 'B9',\n            B10: 'B10',\n            C5E: 'C5E',\n            Comm10E: 'Comm10E',\n            DLE: 'DLE',\n            Executive: 'Executive',\n            Folio: 'Folio',\n            Ledger: 'Ledger',\n            Legal: 'Legal',\n            Letter: 'Letter',\n            Tabloid: 'Tabloid',\n            Custom: 'Custom',\n        };\n\n        /**\n         * Paper size width and height in mm\n         */\n        this.PaperSizeProperties = {\n\n            A0: { width: 841, height: 1189 },\n            A1: { width: 594, height: 841 },\n            A2: { width: 420, height: 594 },\n            A3: { width: 297, height: 420 },\n            A4: { width: 210, height: 297 },\n            A5: { width: 148, height: 210 },\n            A6: { width: 105, height: 148 },\n            A7: { width: 74, height: 105 },\n            A8: { width: 52, height: 74 },\n            A9: { width: 37, height: 52 },\n            B0: { width: 1000, height: 1414 },\n            B1: { width: 707, height: 1000 },\n            B2: { width: 500, height: 707 },\n            B3: { width: 353, height: 500 },\n            B4: { width: 250, height: 353 },\n            B5: { width: 176, height: 250 },\n            B6: { width: 125, height: 176 },\n            B7: { width: 88, height: 125 },\n            B8: { width: 62, height: 88 },\n            B9: { width: 33, height: 62 },\n            B10: { width: 31, height: 44 },\n            C5E: { width: 163, height: 229 },\n            Comm10E: { width: 105, height: 241 },\n            DLE: { width: 110, height: 220 },\n            Executive: { width: 190.5, height: 254 },\n            Folio: { width: 210, height: 330 },\n            Ledger: { width: 431.8, height: 279.4 },\n            Legal: { width: 215.9, height: 355.6 },\n            Letter: { width: 215.9, height: 279.4 },\n            Tabloid: { width: 279.4, height: 431.8 },\n            Custom: { width: 0, height: 0 }\n        };\n\n        /**\n         * Page orientations\n         */\n        this.PageOrientation = {\n            Portrait: 'portrait',\n            Landscape: 'landscape'\n        };\n\n\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    getPaperSizeOptions() {\n        var s = '';\n        for (var x in this.PaperSize) {\n            s += '<option value=\"' + this.PaperSize[x] + '\">' + this.PaperSize[x] + '</option>';\n        }\n        return s;\n    }\n\n    getPaperSize(name) {\n        if (this.PaperSizeProperties[name] != undefined) {\n            return this.PaperSizeProperties[name];\n        } else {\n            return { width: 0, height: 0 };\n        }\n    }\n\n    applyPageStyles() {\n\n        var paperSize = this.getPaperSize(this.app.viewer.options.page.paperSize);\n        var pageOrientation = this.app.viewer.options.page.orientation;\n\n        var width = 0;\n        var height = 0;\n\n        if (pageOrientation == this.PageOrientation.Landscape) {\n            width = paperSize.height;\n            height = paperSize.width;\n        } else {\n            width = paperSize.width;\n            height = paperSize.height;\n        }\n\n        $('#reportPage').css('max-width', width + 'mm');\n        $('#reportPage').css('width', width + 'mm');\n        $('#reportPage').css('min-height', height + 'mm');\n\n        $('#reportPage').css('padding-top', this.app.viewer.options.page.margins.top + 'in');\n        $('#reportPage').css('padding-bottom', this.app.viewer.options.page.margins.bottom + 'in');\n        $('#reportPage').css('padding-left', this.app.viewer.options.page.margins.left + 'in');\n        $('#reportPage').css('padding-right', this.app.viewer.options.page.margins.right + 'in');\n\n    }\n\n\n\n}\nwindow.__Metadocx.PrintingModule = PrintingModule;\n/**\n * UI module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass UIModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 200;\n        this.isConsoleDisabled = false;\n\n        /**\n        * Conversion ratio centimeters to pixels\n        */\n        this._cmToPx = 37.7952;\n\n        /**\n         * Conversion ratio points to pixels\n         */\n        this._ptToPx = 1.32835;\n\n        /**\n         * Conversion ratio inches to pixels\n         */\n        this._inchToPx = 96;\n\n        /**\n        * Conversion ratio mm to inches\n        */\n        this._mmToInches = 0.0393701;\n\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    renderReportViewer(app) {\n        console.groupEnd();\n        console.groupCollapsed('[Metadocx] Render report viewer');\n        app.viewer.render();\n        console.groupEnd();\n    }\n\n    convertInchesToPixels(inches) {\n        return inches * this._inchToPx;\n    }\n\n    convertPixelsToInches(pixels) {\n        return pixels / this._inchToPx;\n    }\n\n    convertInchesToMM(inches) {\n        return parseFloat((inches / this._mmToInches).toFixed(2));\n    }\n\n    convertMMtoInches(mm) {\n        return parseFloat(mm * this._mmToInches);\n    }\n\n\n}\nwindow.__Metadocx.UIModule = UIModule;\n/**\n * Word module class\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nclass WordModule extends Module {\n\n    constructor(app) {\n        super(app);\n        this.bootPriority = 500;\n        this.isConsoleDisabled = false;\n        this.exportDialog = null;\n    }\n\n    initialize() {\n        super.initialize();\n    }\n\n    showExportDialog() {\n\n        if (this.exportDialog === null) {\n            $(this.app.viewer.getContainerSelector()).append(this.renderExportDialog());\n            this.hookExportDialogComponents();\n            this.exportDialog = new bootstrap.Modal('#' + this.app.viewer.options.id + '_wordExportDialog', {})\n        }\n\n        $('#wordPaperSize').val(this.app.viewer.options.page.paperSize);\n\n        var paperSize = this.app.modules.Printing.getPaperSize($('#wordPaperSize').val());\n        $('#wordPaperSizeWidth').val(paperSize.width);\n        $('#wordPaperSizeHeight').val(paperSize.height);\n\n        if (this.app.viewer.options.page.orientation == Metadocx.modules.Printing.PageOrientation.Portrait) {\n            $('#wordOrientationPortrait').prop('checked', true);\n            $('#wordOrientationLandscape').prop('checked', false);\n        } else {\n            $('#wordOrientationPortrait').prop('checked', false);\n            $('#wordOrientationLandscape').prop('checked', true);\n        }\n\n        $('#wordTopMargin').val(this.app.viewer.options.page.margins.top);\n        $('#wordBottomMargin').val(this.app.viewer.options.page.margins.bottom);\n        $('#wordLeftMargin').val(this.app.viewer.options.page.margins.left);\n        $('#wordRightMargin').val(this.app.viewer.options.page.margins.right);\n\n        this.exportDialog.show();\n\n    }\n\n\n    renderExportDialog() {\n\n        return `<div id=\"${this.app.viewer.options.id}_wordExportDialog\" class=\"modal modal-lg\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Word Export</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label for=\"wordPaperSize\" class=\"form-label font-weight-bold\">Orientation</label>\n                    \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"wordOrientation\" id=\"wordOrientationPortrait\">\n                            <label class=\"form-check-label\" for=\"wordOrientationPortrait\">\n                                Portrait\n                            </label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"wordOrientation\" id=\"wordOrientationLandscape\">\n                            <label class=\"form-check-label\" for=\"wordOrientationLandscape\">\n                                Landscape\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">                                \n                        <label for=\"wordPaperSize\" class=\"form-label font-weight-bold\">Paper size</label>\n                        <select id=\"wordPaperSize\" class=\"form-select\">\n                        ${this.app.modules.Printing.getPaperSizeOptions()}\n                        </select>\n                    </div>\n                    <div class=\"mb-3 wordPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"wordPaperSizeWidth\" class=\"form-label font-weight-bold\">Paper width (mm)</label>\n                        <input id=\"wordPaperSizeWidth\" class=\"form-control\" type=\"number\" />\n                    </div>\n                    <div class=\"mb-3 wordPaperSizeWidths\" style=\"display:none;\">                                \n                        <label for=\"wordPaperSizeHeight\" class=\"form-label font-weight-bold\">Paper height (mm)</label>\n                        <input id=\"wordPaperSizeHeight\" class=\"form-control\" type=\"number\" />\n                    </div>\n\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordGrayscale\">\n                        <label class=\"form-check-label\" for=\"wordGrayscale\">\n                            Grayscale\n                        </label>\n                    </div>\n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordUseCompression\" checked>\n                        <label class=\"form-check-label\" for=\"wordUseCompression\">\n                            word Compression\n                        </label>\n                    </div>  \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordIncludeOutline\" checked>\n                        <label class=\"form-check-label\" for=\"wordIncludeOutline\">\n                            Include document outline\n                        </label>\n                    </div> \n                    <div class=\"form-check mb-3\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordPrintBackgrounds\" checked>\n                        <label class=\"form-check-label\" for=\"wordPrintBackgrounds\">\n                            Background graphics\n                        </label>\n                    </div>      \n                </div>\n                <div class=\"d-flex flex-column p-2\">\n                    <div class=\"mb-3\">                                \n                        <label class=\"form-label font-weight-bold\">Margins</label>\n              \n                        <div class=\"mb-3 row\">\n                            <label for=\"wordTopMargin\" class=\"col-sm-4 col-form-label\">Top</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordTopMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordBottomMargin\" class=\"col-sm-4 col-form-label\">Bottom</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordBottomMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordLeftMargin\" class=\"col-sm-4 col-form-label\">Left</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordLeftMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"wordRightMargin\" class=\"col-sm-4 col-form-label\">Right</label>\n                            <div class=\"col-sm-6\">\n                                <input type=\"number\" class=\"form-control\" id=\"wordRightMargin\" value=\"0\" style=\"width:80px;margin-left:30px;\">\n                            </div>\n                            <label class=\"col-sm-2 col-form-label\">in.</label>\n                        </div>                                                    \n                    </div>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordDisplayHeader\">\n                        <label class=\"form-check-label\" for=\"wordDisplayHeader\">\n                            Display header\n                        </label>\n                    </div>    \n                </div>                \n            </div>\n            <div class=\"row word-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"wordHeaderLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordHeaderCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordHeaderRight\" type=\"text\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 word-header-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordHeaderLine\">\n                        <label class=\"form-check-label\" for=\"wordHeaderLine\">\n                            Display header line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordDisplayFooter\">\n                        <label class=\"form-check-label\" for=\"wordDisplayFooter\">\n                            Display footer\n                        </label>\n                    </div> \n                </div>                \n            </div>\n            <div class=\"row word-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-4\"><input id=\"wordFooterLeft\" type=\"text\" class=\"form-control\" placeholder=\"Left Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordFooterCenter\" type=\"text\" class=\"form-control\" style=\"text-align:center;\" placeholder=\"Center Content\"/></div>\n                <div class=\"col-4\"><input id=\"wordFooterRight\" type=\"text\" class=\"form-control\" style=\"text-align:right;\" class=\"form-control\" placeholder=\"Right Content\"/></div>\n            </div>\n            <div class=\"row mb-3 word-footer-row p-2\" style=\"display:none;\">\n                <div class=\"col-12\">\n                    <div class=\"form-check mb-2\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"wordFooterLine\">\n                        <label class=\"form-check-label\" for=\"wordFooterLine\">\n                            Display footer line\n                        </label>\n                    </div>                    \n                </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary mr5\" data-bs-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" class=\"btn btn-primary\" onClick=\"Metadocx.modules.Word.exportWord();\"><i class=\"fa-solid fa-check\"></i>&nbsp;Export Word</button>\n          </div>\n          </div>\n      </div>\n      </div>`;\n\n    }\n\n    hookExportDialogComponents() {\n\n        $('#wordDisplayHeader').off('click').on('click', () => {\n            if ($('#wordDisplayHeader').prop('checked')) {\n                $('.word-header-row').show();\n            } else {\n                $('.word-header-row').hide();\n            }\n        });\n\n        $('#wordDisplayFooter').off('click').on('click', () => {\n            if ($('#wordDisplayFooter').prop('checked')) {\n                $('.word-footer-row').show();\n            } else {\n                $('.word-footer-row').hide();\n            }\n        });\n\n        $('#wordPaperSize').off('change').on('change', () => {\n            if ($('#wordPaperSize').val() == 'Custom') {\n                $('.wordPaperSizeWidths').css('display', '');\n                $('.wordPaperSizeWidths').show();\n            } else {\n                $('.wordPaperSizeWidths').hide();\n            }\n\n            var paperSize = this.app.modules.Printing.getPaperSize($('#wordPaperSize').val());\n            $('#wordPaperSizeWidth').val(paperSize.width);\n            $('#wordPaperSizeHeight').val(paperSize.height);\n        });\n\n    }\n\n\n    getWordExportOptions() {\n\n        var orientation = Metadocx.modules.Printing.PageOrientation.Portrait;\n        if ($('#wordOrientationLandscape').prop('checked')) {\n            orientation = Metadocx.modules.Printing.PageOrientation.Landscape;\n        }\n\n        return {\n            \"page\": {\n                \"orientation\": orientation,\n                \"paperSize\": $('#wordPaperSize').val(),\n                \"width\": $('#wordPaperSizeWidth').val(),\n                \"height\": $('#wordPaperSizeHeight').val(),\n                \"margins\": {\n                    \"top\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordTopMargin').val())),\n                    \"bottom\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordBottomMargin').val())),\n                    \"left\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordLeftMargin').val())),\n                    \"right\": Metadocx.modules.UI.convertInchesToMM(parseFloat($('#wordRightMargin').val()))\n                }\n            },\n            \"grayscale\": $('#wordGrayscale').prop('checked'),\n            \"wordCompression\": $('#wordUseCompression').prop('checked'),\n            \"outline\": $('#wordIncludeOutline').prop('checked'),\n            \"backgroundGraphics\": $('#wordPrintBackgrounds').prop('checked'),\n            \"header\": {\n                \"left\": $('#wordHeaderLeft').val(),\n                \"center\": $('#wordHeaderCenter').val(),\n                \"right\": $('#wordHeaderRight').val(),\n                \"displayHeaderLine\": $('#wordHeaderLine').prop('checked')\n            },\n            \"footer\": {\n                \"left\": $('#wordFooterLeft').val(),\n                \"center\": $('#wordFooterCenter').val(),\n                \"right\": $('#wordFooterRight').val(),\n                \"displayFooterLine\": $('#wordFooterLine').prop('checked')\n            }\n        };\n\n    }\n\n    exportWprd() {\n        $.ajax({\n            type: 'post',\n            url: '/Convert/word',\n            data: {\n                ExportOptions: this.getWordExportOptions(),\n                HTML: btoa(unescape(encodeURIComponent($('#reportPage').html()))),\n            },\n            xhrFields: {\n                responseType: 'blob'\n            },\n            success: (data, status, xhr) => {\n                //console.log(data);\n                //console.log(status);\n\n                var blob = new Blob([data]);\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                link.download = \"Report.docx\";\n                link.click();\n\n            }\n        });\n    }\n\n\n}\nwindow.__Metadocx.WordModule = WordModule;\n/**\n * Metadocx reporting application bootstrap\n * This will create the global Metadocx object and check for jQuery\n * \n * @author Benoit Gauthier <bgauthier@metadocx.com>\n * @copyright Benoit Gauthier <bgauthier@metadocx.com>\n * @license https://github.com/metadocx/reporting/LICENSE.md\n */\nif (!window.Metadocx) {\n    window.Metadocx = new MetadocxApplication();\n}\n\n/**\n * Check for jQuery library if not available inject script tag\n */\nif (!window.jQuery) {\n    /**\n     * jQuery object does not exist, inject script tag\n     */\n    console.log('jQuery is not loaded, adding script tag');\n\n    (function (d, s, id) {\n        var js, lsjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n            console.log('Package is already loaded, skipping');\n            return;\n        }\n        js = d.createElement(s); js.id = id;\n        js.onload = function () {\n            // jQuery is loaded, call initialize on document load\n            $(function () {\n                Metadocx.initialize();\n            });\n        };\n        js.src = 'https://code.jquery.com/jquery-3.6.1.min.js';\n        js.crossOrigin = 'anonymous';\n        lsjs.parentNode.insertBefore(js, lsjs);\n    }(document, 'script', 'jquery'));\n\n} else {\n\n    // jQuery is loaded, call initialize on document load\n    $(function () {\n        Metadocx.initialize();\n    });\n}"],"file":"../metadocx.min.js"}